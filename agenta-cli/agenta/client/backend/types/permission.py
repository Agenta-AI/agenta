# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class Permission(str, enum.Enum):
    """
    An enumeration.
    """

    READ_SYSTEM = "read_system"
    VIEW_APPLICATION = "view_application"
    EDIT_APPLICATION = "edit_application"
    CREATE_APPLICATION = "create_application"
    DELETE_APPLICATION = "delete_application"
    CREATE_APP_VARIANT = "create_app_variant"
    DELETE_APP_VARIANT = "delete_app_variant"
    MODIFY_VARIANT_CONFIGURATIONS = "modify_variant_configurations"
    DELETE_APPLICATION_VARIANT = "delete_application_variant"
    VIEW_APP_ENVIRONMENT_DEPLOYMENT = "view_app_environment_deployment"
    EDIT_APP_ENVIRONMENT_DEPLOYMENT = "edit_app_environment_deployment"
    CREATE_APP_ENVIRONMENT_DEPLOYMENT = "create_app_environment_deployment"
    VIEW_TESTSET = "view_testset"
    EDIT_TESTSET = "edit_testset"
    CREATE_TESTSET = "create_testset"
    DELETE_TESTSET = "delete_testset"
    VIEW_EVALUATION = "view_evaluation"
    RUN_EVALUATIONS = "run_evaluations"
    EDIT_EVALUATION = "edit_evaluation"
    CREATE_EVALUATION = "create_evaluation"
    DELETE_EVALUATION = "delete_evaluation"
    DEPLOY_APPLICATION = "deploy_application"
    VIEW_WORKSPACE = "view_workspace"
    EDIT_WORKSPACE = "edit_workspace"
    CREATE_WORKSPACE = "create_workspace"
    DELETE_WORKSPACE = "delete_workspace"
    MODIFY_USER_ROLES = "modify_user_roles"
    ADD_NEW_USER_TO_WORKSPACE = "add_new_user_to_workspace"
    EDIT_ORGANIZATION = "edit_organization"
    DELETE_ORGANIZATION = "delete_organization"
    ADD_NEW_USER_TO_ORGANIZATION = "add_new_user_to_organization"

    def visit(
        self,
        read_system: typing.Callable[[], T_Result],
        view_application: typing.Callable[[], T_Result],
        edit_application: typing.Callable[[], T_Result],
        create_application: typing.Callable[[], T_Result],
        delete_application: typing.Callable[[], T_Result],
        create_app_variant: typing.Callable[[], T_Result],
        delete_app_variant: typing.Callable[[], T_Result],
        modify_variant_configurations: typing.Callable[[], T_Result],
        delete_application_variant: typing.Callable[[], T_Result],
        view_app_environment_deployment: typing.Callable[[], T_Result],
        edit_app_environment_deployment: typing.Callable[[], T_Result],
        create_app_environment_deployment: typing.Callable[[], T_Result],
        view_testset: typing.Callable[[], T_Result],
        edit_testset: typing.Callable[[], T_Result],
        create_testset: typing.Callable[[], T_Result],
        delete_testset: typing.Callable[[], T_Result],
        view_evaluation: typing.Callable[[], T_Result],
        run_evaluations: typing.Callable[[], T_Result],
        edit_evaluation: typing.Callable[[], T_Result],
        create_evaluation: typing.Callable[[], T_Result],
        delete_evaluation: typing.Callable[[], T_Result],
        deploy_application: typing.Callable[[], T_Result],
        view_workspace: typing.Callable[[], T_Result],
        edit_workspace: typing.Callable[[], T_Result],
        create_workspace: typing.Callable[[], T_Result],
        delete_workspace: typing.Callable[[], T_Result],
        modify_user_roles: typing.Callable[[], T_Result],
        add_new_user_to_workspace: typing.Callable[[], T_Result],
        edit_organization: typing.Callable[[], T_Result],
        delete_organization: typing.Callable[[], T_Result],
        add_new_user_to_organization: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is Permission.READ_SYSTEM:
            return read_system()
        if self is Permission.VIEW_APPLICATION:
            return view_application()
        if self is Permission.EDIT_APPLICATION:
            return edit_application()
        if self is Permission.CREATE_APPLICATION:
            return create_application()
        if self is Permission.DELETE_APPLICATION:
            return delete_application()
        if self is Permission.CREATE_APP_VARIANT:
            return create_app_variant()
        if self is Permission.DELETE_APP_VARIANT:
            return delete_app_variant()
        if self is Permission.MODIFY_VARIANT_CONFIGURATIONS:
            return modify_variant_configurations()
        if self is Permission.DELETE_APPLICATION_VARIANT:
            return delete_application_variant()
        if self is Permission.VIEW_APP_ENVIRONMENT_DEPLOYMENT:
            return view_app_environment_deployment()
        if self is Permission.EDIT_APP_ENVIRONMENT_DEPLOYMENT:
            return edit_app_environment_deployment()
        if self is Permission.CREATE_APP_ENVIRONMENT_DEPLOYMENT:
            return create_app_environment_deployment()
        if self is Permission.VIEW_TESTSET:
            return view_testset()
        if self is Permission.EDIT_TESTSET:
            return edit_testset()
        if self is Permission.CREATE_TESTSET:
            return create_testset()
        if self is Permission.DELETE_TESTSET:
            return delete_testset()
        if self is Permission.VIEW_EVALUATION:
            return view_evaluation()
        if self is Permission.RUN_EVALUATIONS:
            return run_evaluations()
        if self is Permission.EDIT_EVALUATION:
            return edit_evaluation()
        if self is Permission.CREATE_EVALUATION:
            return create_evaluation()
        if self is Permission.DELETE_EVALUATION:
            return delete_evaluation()
        if self is Permission.DEPLOY_APPLICATION:
            return deploy_application()
        if self is Permission.VIEW_WORKSPACE:
            return view_workspace()
        if self is Permission.EDIT_WORKSPACE:
            return edit_workspace()
        if self is Permission.CREATE_WORKSPACE:
            return create_workspace()
        if self is Permission.DELETE_WORKSPACE:
            return delete_workspace()
        if self is Permission.MODIFY_USER_ROLES:
            return modify_user_roles()
        if self is Permission.ADD_NEW_USER_TO_WORKSPACE:
            return add_new_user_to_workspace()
        if self is Permission.EDIT_ORGANIZATION:
            return edit_organization()
        if self is Permission.DELETE_ORGANIZATION:
            return delete_organization()
        if self is Permission.ADD_NEW_USER_TO_ORGANIZATION:
            return add_new_user_to_organization()

# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class WorkspaceRole(str, enum.Enum):
    """
    An enumeration.
    """

    OWNER = "owner"
    VIEWER = "viewer"
    EDITOR = "editor"
    EVALUATOR = "evaluator"
    WORKSPACE_ADMIN = "workspace_admin"
    DEPLOYMENT_MANAGER = "deployment_manager"

    def visit(
        self,
        owner: typing.Callable[[], T_Result],
        viewer: typing.Callable[[], T_Result],
        editor: typing.Callable[[], T_Result],
        evaluator: typing.Callable[[], T_Result],
        workspace_admin: typing.Callable[[], T_Result],
        deployment_manager: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is WorkspaceRole.OWNER:
            return owner()
        if self is WorkspaceRole.VIEWER:
            return viewer()
        if self is WorkspaceRole.EDITOR:
            return editor()
        if self is WorkspaceRole.EVALUATOR:
            return evaluator()
        if self is WorkspaceRole.WORKSPACE_ADMIN:
            return workspace_admin()
        if self is WorkspaceRole.DEPLOYMENT_MANAGER:
            return deployment_manager()

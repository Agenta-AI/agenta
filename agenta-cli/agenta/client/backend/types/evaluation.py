# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .result import Result
from .aggregated_result import AggregatedResult
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Evaluation(UniversalBaseModel):
    id: str
    app_id: str
    user_id: str
    user_username: str
    variant_ids: typing.List[str]
    variant_names: typing.List[str]
    variant_revision_ids: typing.List[str]
    revisions: typing.List[str]
    testset_id: typing.Optional[str] = None
    testset_name: typing.Optional[str] = None
    status: Result
    aggregated_results: typing.List[AggregatedResult]
    average_cost: typing.Optional[Result] = None
    total_cost: typing.Optional[Result] = None
    average_latency: typing.Optional[Result] = None
    created_at: dt.datetime
    updated_at: dt.datetime

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

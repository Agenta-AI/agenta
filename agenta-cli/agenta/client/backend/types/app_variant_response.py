# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class AppVariantResponse(UniversalBaseModel):
    app_id: str
    app_name: str
    variant_id: str
    variant_name: str
    project_id: str
    parameters: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    base_name: str
    base_id: str
    config_name: str
    uri: typing.Optional[str] = None
    revision: int
    created_at: typing.Optional[str] = None
    updated_at: typing.Optional[str] = None
    modified_by_id: typing.Optional[str] = None
    organization_id: typing.Optional[str] = None
    workspace_id: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from .outputs import Outputs
import datetime as dt
from .llm_tokens import LlmTokens
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class CreateSpan(UniversalBaseModel):
    id: str
    app_id: str
    project_id: typing.Optional[str] = None
    variant_id: typing.Optional[str] = None
    variant_name: typing.Optional[str] = None
    inputs: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    internals: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    outputs: typing.Optional[Outputs] = None
    config: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    environment: typing.Optional[str] = None
    tags: typing.Optional[typing.List[str]] = None
    token_consumption: typing.Optional[int] = None
    name: str
    parent_span_id: typing.Optional[str] = None
    attributes: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    spankind: str
    status: str
    user: typing.Optional[str] = None
    start_time: dt.datetime
    end_time: dt.datetime
    tokens: typing.Optional[LlmTokens] = None
    cost: typing.Optional[float] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

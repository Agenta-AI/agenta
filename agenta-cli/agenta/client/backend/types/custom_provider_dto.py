# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
from .custom_provider_kind import CustomProviderKind
from .custom_provider_settings_dto import CustomProviderSettingsDto
import typing
from .customer_model_settings_dto import CustomerModelSettingsDto
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class CustomProviderDto(UniversalBaseModel):
    kind: CustomProviderKind
    provider: CustomProviderSettingsDto
    models: typing.Optional[typing.List[CustomerModelSettingsDto]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Organization(UniversalBaseModel):
    id: str
    name: str
    description: str
    type: typing.Optional[str] = None
    owner: str
    workspaces: typing.Optional[typing.List[str]] = None
    members: typing.Optional[typing.List[str]] = None
    invitations: typing.Optional[typing.List[typing.Optional[typing.Any]]] = None
    is_paying: typing.Optional[bool] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(
            extra="allow", frozen=True
        )  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

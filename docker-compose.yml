version: "3"
services:
    registry:
        image: registry:2
        ports:
            - 5001:5000
        networks:
            - agenta-network

    reverse-proxy:
        image: traefik:v2.0
        command: --api.insecure=true --providers.docker --entrypoints.web.address=:80
        ports:
            - "80:80" # The HTTP port
            - "8080:8080" # The Web UI (enabled by --api.insecure=true)
            - "443:443"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./traefik.toml:/traefik.toml
            - ./acme.json:/acme.json
        networks:
            - agenta-network

    backend:
        build: ./agenta-backend
        environment:
            - MONGODB_URI=mongodb://username:password@mongo:27017
            - ALLOW_ORIGINS=${ALLOW_ORIGINS}
        volumes:
            - ./agenta-backend/agenta_backend:/app/agenta_backend
            - ./agenta-backend/tests:/app/tests
            - /var/run/docker.sock:/var/run/docker.sock
            - ./agenta-backend/db:/db
        depends_on:
            - registry
        labels:
            - "traefik.http.routers.backend.rule=PathPrefix(`/api/`)"
            - "traefik.http.routers.backend.entrypoints=web"
            - "traefik.http.middlewares.backend-strip.stripprefix.prefixes=/api"
            - "traefik.http.middlewares.backend-strip.stripprefix.forceslash=true"
            - "traefik.http.routers.backend.middlewares=backend-strip"
            - "traefik.http.services.backend.loadbalancer.server.port=8000"
            - "traefik.http.routers.backend.service=backend"
            # we redirect /openapi.json to /api/openapi.json, otherwise /docs would not work for fastapi
            # - "traefik.http.middlewares.backend-openapi.redirectregex.regex=^/openapi.json$"
            # - "traefik.http.middlewares.backend-openapi.redirectregex.replacement=/api/openapi.json"
            # - "traefik.http.middlewares.backend-openapi.redirectregex.permanent=true"
            # - "traefik.http.routers.backend-openapi.rule=Path(`/openapi.json`)"
            # - "traefik.http.routers.backend-openapi.middlewares=backend-openapi"

        networks:
            - agenta-network
        command:
            [
                "uvicorn",
                "agenta_backend.main:app",
                "--host",
                "0.0.0.0",
                "--port",
                "8000",
                "--reload",
                "--root-path",
                "/api"
            ]

    agenta-web:
        build:
            context: ./agenta-web
            dockerfile: dev.Dockerfile
        volumes:
            - ./agenta-web/src:/app/src
            - ./agenta-web/public:/app/public
            - ./agenta-web/.env.development.local:/app/.env.development.local
        ports:
            - "3000:3000"
        environment:
            - NODE_ENV=development
        networks:
            - agenta-network
        labels:
            - "traefik.http.routers.agenta-web.tls=true"
            - "traefik.http.routers.agenta-web.rule=Host(`demo.agenta.ai`)"
            - "traefik.http.routers.agenta-web.tls.certresolver=myResolver"
        # depends_on:
        #   mongo:
        #     condition: service_healthy

    mongo:
        image: mongo:5.0
        environment:
            MONGO_INITDB_ROOT_USERNAME: username
            MONGO_INITDB_ROOT_PASSWORD: password
        volumes:
            - mongodb_data:/data/db
        ports:
            - "27017:27017"
        networks:
            - agenta-network
        healthcheck:
            test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
            interval: 10s
            timeout: 10s
            retries: 20

    mongo_express:
        image: mongo-express
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: username
            ME_CONFIG_MONGODB_ADMINPASSWORD: password
            ME_CONFIG_MONGODB_SERVER: mongo
        ports:
            - "8081:8081"
        networks:
            - agenta-network
        depends_on:
            - mongo

networks:
    agenta-network:

volumes:
    mongodb_data:
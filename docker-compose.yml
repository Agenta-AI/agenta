services:
    reverse-proxy:
        image: traefik:v2.10
        command: --api.dashboard=true --api.insecure=true --providers.docker --entrypoints.web.address=:80
        ports:
            - "80:80"
            - "8080:8080"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        networks:
            - agenta-network
            
    backend:
        build: ./agenta-backend
        environment:
            - MONGODB_URI=mongodb://username:password@mongo:27017
            - ENVIRONMENT=development
            - BARE_DOMAIN_NAME=localhost
        volumes:
            - ./agenta-backend/agenta_backend:/app/agenta_backend
            - ./agenta-backend/tests:/app/tests
            - /var/run/docker.sock:/var/run/docker.sock
            - ./agenta-backend/db:/db
            - ./agenta-backend:/agenta-backend
        labels:
            - "traefik.http.routers.backend.rule=PathPrefix(`/api/`)"
            - "traefik.http.routers.backend.entrypoints=web"
            - "traefik.http.middlewares.backend-strip.stripprefix.prefixes=/api"
            - "traefik.http.middlewares.backend-strip.stripprefix.forceslash=true"
            - "traefik.http.routers.backend.middlewares=backend-strip"
            - "traefik.http.services.backend.loadbalancer.server.port=8000"
            - "traefik.http.routers.backend.service=backend"

        networks:
            - agenta-network
        command:
            [
                "bash",
                "-c",
                "chmod +x /agenta-backend/generate_key.sh && /agenta-backend/generate_key.sh && /agenta-backend/start_server.sh"
            ]

    agenta-web:
        build:
            context: ./agenta-web
            dockerfile: dev.Dockerfile
        volumes:
            - ./agenta-web/src:/app/src
            - ./agenta-web/public:/app/public
            - ./agenta-web/.env.development.local:/app/.env.development.local
        ports:
            - "3000:3000"
        environment:
            - NODE_ENV=development
            - NEXT_PUBLIC_AGENTA_API_URL=http://localhost
        networks:
            - agenta-network
        labels:
            - "traefik.http.routers.agenta-web.rule=PathPrefix(`/`)"
            - "traefik.http.routers.agenta-web.entrypoints=web"
            - "traefik.http.services.agenta-web.loadbalancer.server.port=3000"

    mongo:
        image: mongo:5.0
        environment:
            MONGO_INITDB_ROOT_USERNAME: username
            MONGO_INITDB_ROOT_PASSWORD: password
        volumes:
            - mongodb_data:/data/db
        ports:
            - "27017:27017"
        networks:
            - agenta-network
        healthcheck:
            test: [ "CMD", "mongo", "--eval", "db.adminCommand('ping')" ]
            interval: 10s
            timeout: 10s
            retries: 20

    mongo_express:
        image: mongo-express
        environment:
            ME_CONFIG_MONGODB_ADMINUSERNAME: username
            ME_CONFIG_MONGODB_ADMINPASSWORD: password
            ME_CONFIG_MONGODB_SERVER: mongo
        ports:
            - "8081:8081"
        networks:
            - agenta-network
        depends_on:
            mongo:
                condition: service_healthy

    postgres:
        image: 'postgres:latest'
        environment:
            POSTGRES_USER: supertokens_user
            POSTGRES_PASSWORD: somePassword
            POSTGRES_DB: supertokens
        ports:
            - 5435:5432
        networks:
            - agenta-network
        restart: unless-stopped
        healthcheck:
            test: ['CMD', 'pg_isready', '-U', 'supertokens_user', '-d', 'supertokens']
            interval: 5s
            timeout: 5s
            retries: 5

    supertokens:
        image: registry.supertokens.io/supertokens/supertokens-postgresql:6.0
        depends_on:
            postgres:
                condition: service_healthy
        ports:
            - 3567:3567
        environment:
            POSTGRESQL_CONNECTION_URI: "postgresql://supertokens_user:somePassword@postgres:5432/supertokens"
        networks:
            - agenta-network
        restart: unless-stopped
        healthcheck:
          test: >
            bash -c 'exec 3<>/dev/tcp/127.0.0.1/3567 && echo -e "GET /hello HTTP/1.1\r\nhost: 127.0.0.1:3567\r\nConnection: close\r\n\r\n" >&3 && cat <&3 | grep "Hello"'
          interval: 10s
          timeout: 5s
          retries: 5

    pgadmin:
        container_name: pgadmin4_container
        image: dpage/pgadmin4
        restart: always
        environment:
            PGADMIN_DEFAULT_EMAIL: admin@admin.com
            PGADMIN_DEFAULT_PASSWORD: root
        ports:
            - "5050:80"
        networks:
            - agenta-network

    redis:
        image: redis:latest
        networks:
            - agenta-network
        volumes:
            - redis_data:/data

networks:
    agenta-network:
        name: agenta-network

volumes:
    mongodb_data:
    redis_data:

# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .data import Data
from .header import Header
from .lifecycle_dto import LifecycleDto
from .secret_kind import SecretKind


class SecretResponseDto(UniversalBaseModel):
    kind: SecretKind
    data: Data
    id: typing.Optional[str] = None
    header: Header
    lifecycle: typing.Optional[LifecycleDto] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .legacy_scope_request import LegacyScopeRequest
from .legacy_subscription_request import LegacySubscriptionRequest
from .legacy_user_request import LegacyUserRequest


class AccountRequest(UniversalBaseModel):
    user: typing.Optional[LegacyUserRequest] = None
    scope: typing.Optional[LegacyScopeRequest] = None
    subscription: typing.Optional[LegacySubscriptionRequest] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

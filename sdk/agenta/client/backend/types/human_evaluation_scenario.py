# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .human_evaluation_scenario_input import HumanEvaluationScenarioInput
from .human_evaluation_scenario_output import HumanEvaluationScenarioOutput
from .score import Score


class HumanEvaluationScenario(UniversalBaseModel):
    id: typing.Optional[str] = None
    evaluation_id: str
    inputs: typing.List[HumanEvaluationScenarioInput]
    outputs: typing.List[HumanEvaluationScenarioOutput]
    vote: typing.Optional[str] = None
    score: typing.Optional[Score] = None
    correct_answer: typing.Optional[str] = None
    is_pinned: typing.Optional[bool] = None
    note: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .o_tel_flat_span import OTelFlatSpan
from .o_tel_spans_tree import OTelSpansTree


class OTelTracingRequest(UniversalBaseModel):
    spans: typing.Optional[typing.List[OTelFlatSpan]] = None
    traces: typing.Optional[typing.Dict[str, typing.Optional[OTelSpansTree]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

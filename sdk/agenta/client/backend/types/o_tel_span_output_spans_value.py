# This file was auto-generated by Fern from our API Definition.
# Modified to prevent recursion errors

from __future__ import annotations

import typing
from typing import Any, Dict, List, Optional, Union

# BREAK RECURSION: Use Any instead of recursive types
OTelSpanOutputSpansValue = Union[Dict[str, Any], List[Dict[str, Any]]]


# Export a function to get a proper dict representation without recursion
def get_non_recursive_representation(data):
    """Convert an OTelSpan to a dict without recursion"""
    if data is None:
        return None

    if isinstance(data, list):
        return [get_non_recursive_representation(item) for item in data]

    if hasattr(data, "model_dump"):
        # It's a Pydantic v2 model, use model_dump
        return data.model_dump()
    elif hasattr(data, "dict"):
        # It's a Pydantic v1 model, use dict()
        return data.dict()

    # Plain dict or other type
    return data

# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .custom_model_settings_dto import CustomModelSettingsDto
from .custom_provider_kind import CustomProviderKind
from .custom_provider_settings_dto import CustomProviderSettingsDto


class CustomProviderDto(UniversalBaseModel):
    kind: CustomProviderKind
    provider: CustomProviderSettingsDto
    models: typing.List[CustomModelSettingsDto]
    provider_slug: typing.Optional[str] = None
    model_keys: typing.Optional[typing.List[str]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow

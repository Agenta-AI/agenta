import {
    Download,
    Gear,
    LineSegments,
    Sparkle,
    ArrowBendRightDownIcon,
    MagnifyingGlassIcon,
    LightningIcon,
    ArrowBendRightUpIcon,
    GearFineIcon,
    SpinnerIcon,
    TreeViewIcon,
    TreeStructureIcon,
    CoinsIcon,
    TimerIcon,
    PlusCircleIcon,
    WarningOctagonIcon,
    PencilIcon,
} from "@phosphor-icons/react"
import {SpanCategory} from "@/oss/services/tracing/types"
import {FilterMenuNode} from "@/oss/components/Filters/types"
import {
    STRING_EQU_AND_CONTAINS_OPS,
    STRING_SEARCH_OPS,
    NUM_OPS,
    STRING_EQU_OPS,
    COLLECTION_MEMBERSHIP_OPS,
} from "./utils"

export const FILTER_COLUMNS: FilterMenuNode[] = [
    {
        kind: "leaf",
        label: "Text search",
        displayLabel: "Text search",
        icon: MagnifyingGlassIcon,
        field: "content",
        value: "content",
        type: "string",
        operatorOptions: [{value: "contains", label: "contains"}],
        valueInput: {kind: "text", placeholder: "Text"},
    },
    // {
    //     kind: "leaf",
    //     label: "Input",
    //     icon: ArrowBendRightDownIcon,
    //     field: "attributes.ag.data.inputs",
    //     type: "string",
    //     value: "attributes.ag.data.inputs",
    //     operatorOptions: STRING_EQU_AND_CONTAINS_OPS,
    //     valueInput: {kind: "text", placeholder: "Value"},
    // },
    // {
    //     kind: "leaf",
    //     label: "Output",
    //     icon: ArrowBendRightUpIcon,
    //     field: "attributes.ag.data.outputs",
    //     type: "string",
    //     value: "attributes.ag.data.outputs",
    //     operatorOptions: STRING_EQU_AND_CONTAINS_OPS,
    //     valueInput: {kind: "text", placeholder: "Value"},
    // },
    {
        kind: "leaf",
        label: "Input Key",
        icon: ArrowBendRightDownIcon,
        field: "input_keys",
        type: "string",
        value: "ag.data.inputs",
        operatorOptions: STRING_EQU_AND_CONTAINS_OPS,
        valueInput: {kind: "text", placeholder: "Value"},
        keyInput: {
            kind: "select",
            placeholder: "Search or enter key",
            options: [],
            usesAttributeKeyTree: true,
            treePath: "ag.data.inputs",
        },
    },
    {
        kind: "leaf",
        label: "Output Key",
        icon: ArrowBendRightUpIcon,
        field: "output_keys",
        type: "string",
        value: "ag.data.outputs",
        operatorOptions: STRING_EQU_AND_CONTAINS_OPS,
        valueInput: {kind: "text", placeholder: "Value"},
        keyInput: {
            kind: "select",
            placeholder: "Search or enter key",
            options: [],
            usesAttributeKeyTree: true,
            treePath: "ag.data.outputs",
        },
    },
    {
        kind: "group",
        label: "Trace",
        icon: TreeStructureIcon,
        children: [
            {
                kind: "leaf",
                label: "ID",
                displayLabel: "Trace ID",
                field: "trace_id",
                type: "string",
                value: "trace_id",
                operatorOptions: STRING_EQU_AND_CONTAINS_OPS,
                valueInput: {
                    kind: "text",
                    placeholder: "Search or enter value",
                },
            },
            {
                kind: "leaf",
                label: "Type",
                displayLabel: "Trace Type",
                field: "trace_type",
                type: "string",
                value: "trace_type",
                operatorOptions: STRING_EQU_AND_CONTAINS_OPS,
                valueInput: {
                    kind: "select",
                    placeholder: "Search or enter value",
                    options: [
                        {label: "Invocation", value: "invocation"},
                        {label: "Annotation", value: "annotation"},
                    ],
                },
            },
        ],
    },
    {
        kind: "group",
        label: "Span",
        icon: TreeViewIcon,
        children: [
            {
                kind: "leaf",
                label: "ID",
                displayLabel: "Span ID",
                field: "span_id",
                type: "string",
                value: "span_id",
                operatorOptions: STRING_EQU_AND_CONTAINS_OPS,
                valueInput: {
                    kind: "text",
                    placeholder: "Search or enter value",
                },
            },
            {
                kind: "leaf",
                label: "Type",
                displayLabel: "Span Type",
                field: "span_type",
                type: "string",
                value: "span_type",
                operatorOptions: STRING_EQU_AND_CONTAINS_OPS,
                valueInput: {
                    kind: "select",
                    placeholder: "Search or enter value",
                    options: [
                        {label: "chat", value: "chat"},
                        {label: "agent", value: "agent"},
                        {label: "workflow", value: "workflow"},
                        {label: "chain", value: "chain"},
                        {label: "task", value: "task"},
                        {label: "tool", value: "tool"},
                        {label: "embedding", value: "embedding"},
                        {label: "query", value: "query"},
                        {label: "rerank", value: "rerank"},
                        {label: "llm", value: "llm"},
                    ],
                },
            },
            {
                kind: "leaf",
                label: "Name",
                displayLabel: "Span Name",
                field: "span_name",
                type: "string",
                value: "span_name",
                operatorOptions: STRING_EQU_AND_CONTAINS_OPS,
                valueInput: {
                    kind: "text",
                    placeholder: "Search or enter value",
                },
            },
        ],
    },
    {
        kind: "leaf",
        label: "Duration (ms)",
        icon: TimerIcon,
        field: "attributes.ag.metrics.duration.cumulative",
        type: "number",
        value: "attributes.ag.metrics.duration.cumulative",
        operatorOptions: NUM_OPS,
        valueInput: {
            kind: "text",
            placeholder: "Value",
        },
    },
    {
        kind: "group",
        label: "Cost ($)",
        icon: CoinsIcon,
        defaultValue: "attributes.ag.metrics.costs.cumulative.total",
        titleClickDisplayLabel: "Total Cost",
        children: [
            {
                kind: "group",
                label: "Completion",
                defaultValue: "attributes.ag.metrics.costs.cumulative.completion",
                leafDisplayLabel: "Completion Cost",
                children: [
                    {
                        kind: "leaf",
                        field: "attributes.ag.metrics.costs.cumulative.completion",
                        type: "number",
                        value: "attributes.ag.metrics.costs.cumulative.completion",
                        label: "Aggregate",
                        displayLabel: "Total Completion Cost",
                        operatorOptions: NUM_OPS,
                        valueInput: {
                            kind: "text",
                            placeholder: "Value",
                        },
                    },
                    {
                        kind: "leaf",
                        field: "attributes.ag.metrics.costs.incremental.completion",
                        type: "number",
                        value: "attributes.ag.metrics.costs.incremental.completion",
                        label: "Span",
                        displayLabel: "Total Completion Cost (Span)",
                        operatorOptions: NUM_OPS,
                        valueInput: {
                            kind: "text",
                            placeholder: "Value",
                        },
                    },
                ],
            },
            {
                kind: "group",
                label: "Prompt",
                defaultValue: "attributes.ag.metrics.costs.cumulative.prompt",
                leafDisplayLabel: "Prompt Cost",
                children: [
                    {
                        kind: "leaf",
                        field: "attributes.ag.metrics.costs.cumulative.prompt",
                        type: "number",
                        value: "attributes.ag.metrics.costs.cumulative.prompt",
                        label: "Aggregate",
                        displayLabel: "Total Prompt Cost",
                        operatorOptions: NUM_OPS,
                        valueInput: {
                            kind: "text",
                            placeholder: "Value",
                        },
                    },
                    {
                        kind: "leaf",
                        field: "attributes.ag.metrics.costs.incremental.prompt",
                        type: "number",
                        value: "attributes.ag.metrics.costs.incremental.prompt",
                        label: "Span",
                        displayLabel: "Total Prompt Cost (Span)",
                        operatorOptions: NUM_OPS,
                        valueInput: {
                            kind: "text",
                            placeholder: "Value",
                        },
                    },
                ],
            },
            {
                kind: "group",
                defaultValue: "attributes.ag.metrics.costs.cumulative.total",
                leafDisplayLabel: "Total Cost",
                label: "Total",
                children: [
                    {
                        kind: "leaf",
                        field: "attributes.ag.metrics.costs.cumulative.total",
                        type: "number",
                        value: "attributes.ag.metrics.costs.cumulative.total",
                        label: "Aggregate",
                        displayLabel: "Total Cost",
                        operatorOptions: NUM_OPS,
                        valueInput: {
                            kind: "text",
                            placeholder: "Value",
                        },
                    },
                    {
                        kind: "leaf",
                        field: "attributes.ag.metrics.costs.incremental.total",
                        type: "number",
                        value: "attributes.ag.metrics.costs.incremental.total",
                        label: "Span",
                        displayLabel: "Total Cost (Span)",
                        operatorOptions: NUM_OPS,
                        valueInput: {
                            kind: "text",
                            placeholder: "Value",
                        },
                    },
                ],
            },
        ],
    },
    {
        kind: "group",
        label: "Tokens",
        icon: PlusCircleIcon,
        defaultValue: "attributes.ag.metrics.tokens.cumulative.total",
        titleClickDisplayLabel: "Total Tokens",
        children: [
            {
                kind: "group",
                label: "Completion",
                defaultValue: "attributes.ag.metrics.tokens.cumulative.completion",
                leafDisplayLabel: "Completion Tokens",
                children: [
                    {
                        kind: "leaf",
                        field: "attributes.ag.metrics.tokens.cumulative.completion",
                        type: "number",
                        value: "attributes.ag.metrics.tokens.cumulative.completion",
                        label: "Aggregate",
                        displayLabel: "Total Completion Tokens",
                        operatorOptions: NUM_OPS,
                        valueInput: {
                            kind: "text",
                            placeholder: "Value",
                        },
                    },
                    {
                        kind: "leaf",
                        field: "attributes.ag.metrics.tokens.incremental.completion",
                        type: "number",
                        value: "attributes.ag.metrics.tokens.incremental.completion",
                        label: "Span",
                        displayLabel: "Total Completion Tokens (Span)",
                        operatorOptions: NUM_OPS,
                        valueInput: {
                            kind: "text",
                            placeholder: "Value",
                        },
                    },
                ],
            },
            {
                kind: "group",
                label: "Prompt",
                defaultValue: "attributes.ag.metrics.tokens.cumulative.prompt",
                leafDisplayLabel: "Prompt Tokens",
                children: [
                    {
                        kind: "leaf",
                        field: "attributes.ag.metrics.tokens.cumulative.prompt",
                        type: "number",
                        value: "attributes.ag.metrics.tokens.cumulative.prompt",
                        label: "Aggregate",
                        displayLabel: "Total Prompt Tokens",
                        operatorOptions: NUM_OPS,
                        valueInput: {
                            kind: "text",
                            placeholder: "Value",
                        },
                    },
                    {
                        kind: "leaf",
                        field: "attributes.ag.metrics.tokens.incremental.prompt",
                        type: "number",
                        value: "attributes.ag.metrics.tokens.incremental.prompt",
                        label: "Span",
                        displayLabel: "Total Prompt Tokens (Span)",
                        operatorOptions: NUM_OPS,
                        valueInput: {
                            kind: "text",
                            placeholder: "Value",
                        },
                    },
                ],
            },
            {
                kind: "group",
                defaultValue: "attributes.ag.metrics.tokens.cumulative.total",
                leafDisplayLabel: "Total Tokens",
                label: "Total",
                children: [
                    {
                        kind: "leaf",
                        field: "attributes.ag.metrics.tokens.cumulative.total",
                        type: "number",
                        value: "attributes.ag.metrics.tokens.cumulative.total",
                        label: "Aggregate",
                        displayLabel: "Total Tokens",
                        operatorOptions: NUM_OPS,
                        valueInput: {
                            kind: "text",
                            placeholder: "Value",
                        },
                    },
                    {
                        kind: "leaf",
                        field: "attributes.ag.metrics.tokens.incremental.total",
                        type: "number",
                        value: "attributes.ag.metrics.tokens.incremental.total",
                        label: "Span",
                        displayLabel: "Total Tokens (Span)",
                        operatorOptions: NUM_OPS,
                        valueInput: {
                            kind: "text",
                            placeholder: "Value",
                        },
                    },
                ],
            },
        ],
    },
    {
        kind: "group",
        label: "Annotation",
        icon: PencilIcon,
        children: [
            {
                kind: "leaf",
                label: "Has Annotation",
                field: "has_annotation",
                type: "string",
                value: "has_annotation",
                operatorOptions: COLLECTION_MEMBERSHIP_OPS,
                valueInput: {
                    kind: "text",
                    placeholder: "Search or enter value",
                },
            },
            {
                kind: "leaf",
                label: "Is Annotation",
                field: "is_annotation",
                type: "string",
                value: "is_annotation",
                operatorOptions: COLLECTION_MEMBERSHIP_OPS,
                valueInput: {
                    kind: "text",
                    placeholder: "Search or enter value",
                },
            },
        ],
    },
    {
        kind: "group",
        label: "Status",
        icon: SpinnerIcon,
        children: [
            {
                kind: "leaf",
                label: "Code",
                displayLabel: "Status Code",
                field: "status_code",
                type: "string",
                value: "status_code",
                operatorOptions: STRING_EQU_OPS,
                valueInput: {
                    kind: "select",
                    placeholder: "Status",
                    options: [
                        {label: "Success", value: "STATUS_CODE_OK"},
                        {label: "Failure", value: "STATUS_CODE_ERROR"},
                    ],
                },
            },
            {
                kind: "leaf",
                label: "Message",
                displayLabel: "Status Message",
                field: "status_message",
                type: "string",
                value: "status_message",
                operatorOptions: STRING_SEARCH_OPS,
                valueInput: {
                    kind: "text",
                    placeholder: "Message",
                },
            },
        ],
    },
    {
        kind: "leaf",
        label: "Exception",
        icon: WarningOctagonIcon,
        type: "exists",
        value: "events",
        field: "events",
        operatorOptions: [
            {value: "in", label: "exist"},
            {value: "not_in", label: "not exists"},
        ],
        defaultValue: [{name: "exception"}],
        disableValueInput: true,
        valueDisplayText: "exception",
    },
    {
        kind: "group",
        label: "Reference",
        icon: GearFineIcon,
        children: [
            {
                kind: "group",
                label: "Application",
                children: [
                    {
                        kind: "leaf",
                        field: "references",
                        type: "exists",
                        value: "id",
                        optionKey: "application.id",
                        queryKey: "application.id",
                        referenceCategory: "application",
                        referenceProperty: "id",
                        label: "ID",
                        displayLabel: "Application ID",
                        operatorOptions: [
                            {value: "in", label: "is"},
                            {value: "not_in", label: "is not"},
                        ],
                    },
                    {
                        kind: "leaf",
                        field: "references",
                        type: "exists",
                        value: "slug",
                        optionKey: "application.slug",
                        queryKey: "application.slug",
                        referenceCategory: "application",
                        referenceProperty: "slug",
                        label: "Slug",
                        displayLabel: "Application Slug",
                        operatorOptions: [
                            {value: "in", label: "is"},
                            {value: "not_in", label: "is not"},
                        ],
                    },
                ],
            },
            {
                kind: "group",
                label: "Environment",
                children: [
                    {
                        kind: "leaf",
                        field: "references",
                        type: "exists",
                        value: "id",
                        optionKey: "environment.id",
                        queryKey: "environment.id",
                        referenceCategory: "environment",
                        referenceProperty: "id",
                        label: "ID",
                        displayLabel: "Environment ID",
                        operatorOptions: [
                            {value: "in", label: "is"},
                            {value: "not_in", label: "is not"},
                        ],
                    },
                    {
                        kind: "leaf",
                        field: "references",
                        type: "exists",
                        value: "slug",
                        optionKey: "environment.slug",
                        queryKey: "environment.slug",
                        referenceCategory: "environment",
                        referenceProperty: "slug",
                        label: "Slug",
                        displayLabel: "Environment Slug",
                        operatorOptions: [
                            {value: "in", label: "is"},
                            {value: "not_in", label: "is not"},
                        ],
                    },
                ],
            },
        ],
    },
    {
        kind: "leaf",
        label: "Custom",
        displayLabel: "Custom",
        icon: LightningIcon,
        field: "custom",
        value: "custom",
        type: "string",
        keyInput: {
            kind: "select",
            placeholder: "Search key",
            options: [],
            usesAttributeKeyTree: true,
        },
        operatorOptions: [
            {value: "is", label: "is"},
            {value: "is_not", label: "is not"},
            {value: "contains", label: "contains"},
            {value: "startswith", label: "starts with"},
            {value: "endswith", label: "ends with"},
            {value: "in", label: "in"},
            {value: "not_in", label: "not in"},
        ],
        valueInput: {kind: "text", placeholder: "Value"},
    },
    // Tags -> my_tag + IS + blue
    // attributes + ag.tags.my_tag + IS + blue
    // {kind: "leaf", field: "tags", type: "exists", value: "tags", label: "Tags", icon: TagSimple},
    // {
    //     kind: "leaf",
    //     label: "Tags",
    //     icon: TagSimpleIcon,
    //     field: "attributes",
    //     type: "string",
    //     value: "attributes",
    //     operatorOptions: STRING_EQU_AND_CONTAINS_OPS,
    //     valueInput: {
    //         kind: "select",
    //         placeholder: "Search or enter value",
    //         options: [
    //             {label: "env1", value: "env1"},
    //             {label: "env2", value: "env2"},
    //         ],
    //     },
    // },
]

export const spanTypeStyles = {
    [SpanCategory.AGENT]: {
        bgColor: "#E6F4FF",
        color: "#4096FF",
        icon: Gear,
    },
    [SpanCategory.WORKFLOW]: {
        color: "#586673",
        bgColor: "#F5F7FA",
        icon: TreeStructureIcon,
    },
    [SpanCategory.CHAIN]: {
        bgColor: "#E6F4FF",
        color: "#4096FF",
        icon: Gear,
    },
    [SpanCategory.TASK]: {
        bgColor: "#EAEFF5",
        color: "#586673",
        icon: TreeStructureIcon,
    },
    [SpanCategory.TOOL]: {
        bgColor: "#F9F0FF",
        color: "#9254DE",
        icon: Download,
    },
    [SpanCategory.EMBEDDING]: {
        bgColor: "#FFFBE6",
        color: "#D4B106",
        icon: LineSegments,
    },
    [SpanCategory.COMPLETION]: {
        bgColor: "#E6FFFB",
        color: "#13C2C2",
        icon: Sparkle,
    },
    [SpanCategory.QUERY]: {
        bgColor: "#FFFBE6",
        color: "#D4B106",
        icon: LineSegments,
    },
    [SpanCategory.CHAT]: {
        bgColor: "#E6FFFB",
        color: "#13C2C2",
        icon: Sparkle,
    },
    [SpanCategory.RERANK]: {
        bgColor: "#FFFBE6",
        color: "#D4B106",
        icon: LineSegments,
    },
    [SpanCategory.LLM]: {
        bgColor: "#E6FFFB",
        color: "#13C2C2",
        icon: Sparkle,
    },
    [SpanCategory.UNDEFINED]: {
        bgColor: "#F5F7FA",
        color: "#586673",
        icon: TreeStructureIcon,
    },
}

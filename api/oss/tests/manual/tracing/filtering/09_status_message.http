@host = http://localhost
@token = change-me
@base_url = {{host}}/api/preview/tracing

###
# @name create_account
POST {{host}}/api/admin/account
Content-Type: application/json
Authorization: Access {{token}}

###
@user_id = {{create_account.response.body.user.id}}
@authorization = {{create_account.response.body.scopes[0].credentials}}

###
POST {{base_url}}/spans/
Content-Type: application/json
Authorization: {{authorization}}

{
  "spans": [
    { "trace_id": "50000000000000000000000000000000", "span_id": "5000000000000000", "status_message": "status_success" },
    { "trace_id": "50000000000000000000000000000000", "span_id": "5000000000000001", "status_message": "status_failure" },
    { "trace_id": "50000000000000000000000000000000", "span_id": "5000000000000002" }
  ]
}

###
# test: filter by status_message = status_success (query param)
GET {{base_url}}/spans/?filter={"conditions":[{"field":"status_message","value":"status_success"}]}
Authorization: {{authorization}}

###
# Test: filter by status_message = status_success (POST)
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": "status_success" }
    ]
  }
}

###
# Test: filter by status_message = status_failure (POST)
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": "status_failure" }
    ]
  }
}

###
# Negative test: typo in field
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_messag", "value": "status_success" }
    ]
  }
}

###
# Negative test: typo in value
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": "status_unset" }
    ]
  }
}

###
# Logical operator: AND
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "operator": "and",
    "conditions": [
      { "field": "status_message", "value": "status_success" },
      { "field": "status_code", "value": "STATUS_CODE_UNSET" }
    ]
  }
}

###
# Logical operator: OR
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "operator": "or",
    "conditions": [
      { "field": "status_message", "value": "status_success" },
      { "field": "status_message", "value": "status_failure" }
    ]
  }
}

###
# Logical operator: NOT
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "operator": "not",
    "conditions": [
      { "field": "status_message", "value": "status_success" }
    ]
  }
}

###
# Logical operator: NAND
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "operator": "nand",
    "conditions": [
      { "field": "status_message", "value": "status_success" },
      { "field": "status_code", "value": "STATUS_CODE_UNSET" }
    ]
  }
}

###
# Logical operator: NOR
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "operator": "nor",
    "conditions": [
      { "field": "status_message", "value": "status_success" },
      { "field": "status_message", "value": null }
    ]
  }
}

###
# Comparison operator: IS
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": "status_success", "operator": "is" }
    ]
  }
}

###
# Comparison operator: IS_NOT
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": "status_failure", "operator": "is_not" }
    ]
  }
}

###
# String operator: STARTSWITH
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": "status", "operator": "startswith" }
    ]
  }
}

###
# String operator: ENDSWITH
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": "success", "operator": "endswith" }
    ]
  }
}

###
# String operator: CONTAINS
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "operator": "contains", "value": "success" }
    ]
  }
}

###
# String operator: MATCHES (default options)
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "operator": "matches", "value": "status" }
    ]
  }
}


###
# String operator: MATCHES with case_sensitive true
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": "STATUS_SUCCESS", "operator": "matches", "options": { "case_sensitive": true } }
    ]
  }
}

###
# String operator: MATCHES with case_sensitive true
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": "status_success", "operator": "matches", "options": { "case_sensitive": true } }
    ]
  }
}

###
# String operator: MATCHES with exact_match true
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": "status_success", "operator": "matches", "options": { "exact_match": true } }
    ]
  }
}

###
# String operator: MATCHES with exact_match true
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": "status_unset", "operator": "matches", "options": { "exact_match": true } }
    ]
  }
}

###
# String operator: MATCHES with both options
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": "STATUS_SUCCESS", "operator": "matches", "options": { "case_sensitive": true, "exact_match": true } }
    ]
  }
}

###
# String operator: MATCHES with both options
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": "status_success", "operator": "matches", "options": { "case_sensitive": true, "exact_match": true } }
    ]
  }
}

###
# String operator: LIKE (SQL-like)
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": "%status%", "operator": "like" }
    ]
  }
}

###
# List operator: IN
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": ["status_success", "status_failure"], "operator": "in" }
    ]
  }
}

###
# List operator: NOT_IN
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": ["status_success"], "operator": "not_in" }
    ]
  }
}

###
# List operator: HAS [...] -- unsupported
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": "status_success", "operator": "has" }
    ]
  }
}

###
# List operator: HAS_NOT [...] -- unsupported
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "value": "status_success", "operator": "has_not" }
    ]
  }
}

###
# Existence operator: EXISTS
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "operator": "exists" }
    ]
  }
}

###
# Existence operator: NOT_EXISTS
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "status_message", "operator": "not_exists" }
    ]
  }
}
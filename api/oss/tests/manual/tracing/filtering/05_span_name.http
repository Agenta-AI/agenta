@host = http://localhost
@token = change-me
@base_url = {{host}}/api/preview/tracing

###
# @name create_account
POST {{host}}/api/admin/account
Content-Type: application/json
Authorization: Access {{token}}

###
@user_id = {{create_account.response.body.user.id}}
@authorization = {{create_account.response.body.scopes[0].credentials}}

###
POST {{base_url}}/spans/
Content-Type: application/json
Authorization: {{authorization}}

{
  "spans": [
    { "trace_id": "20000000000000000000000000000000", "span_id": "2000000000000000", "span_name": "span_alpha" },
    { "trace_id": "20000000000000000000000000000000", "span_id": "2000000000000001", "span_name": "span_beta" },
    { "trace_id": "20000000000000000000000000000000", "span_id": "2000000000000002" }

  ]
}

###
# test: filter by span_name = span_alpha (query param)
GET {{base_url}}/spans/?filter={"conditions":[{"field":"span_name","value":"span_alpha"}]}
Authorization: {{authorization}}

###
# test: filter by span_name = span_alpha (POST)
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "span_alpha" }
    ]
  }
}

###
# test: filter by span_name = span_beta (POST)
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "span_beta" }
    ]
  }
}

###
# Negative test: typo in field
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_nam", "value": "span_alpha" }
    ]
  }
}

###
# Negative test: typo in value
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "span_gamma" }
    ]
  }
}

###
# Logical operator: AND
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "operator": "and",
    "conditions": [
      { "field": "span_name", "value": "span_alpha" },
      { "field": "span_kind", "value": "SPAN_KIND_UNSPECIFIED" }
    ]
  }
}

###
# Logical operator: OR
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "operator": "or",
    "conditions": [
      { "field": "span_name", "value": "span_alpha" },
      { "field": "span_name", "value": "span_beta" }
    ]
  }
}

###
# Logical operator: NOT
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "operator": "not",
    "conditions": [
      { "field": "span_name", "value": "span_alpha" }
    ]
  }
}

###
# Logical operator: NAND
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "operator": "nand",
    "conditions": [
      { "field": "span_name", "value": "span_alpha" },
      { "field": "span_kind", "value": "SPAN_KIND_UNSPECIFIED" }
    ]
  }
}

###
# Logical operator: NOR
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "operator": "nor",
    "conditions": [
      { "field": "span_name", "value": "span_alpha" },
      { "field": "span_name", "value": "span_beta" }
    ]
  }
}

###
# Comparison operator: IS
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "span_alpha", "operator": "is" }
    ]
  }
}

###
# Comparison operator: IS_NOT
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "span_alpha", "operator": "is_not" }
    ]
  }
}

###
# String operator: STARTSWITH
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "span", "operator": "startswith" }
    ]
  }
}

###
# String operator: ENDSWITH
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "alpha", "operator": "endswith" }
    ]
  }
}

###
# String operator: CONTAINS
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "span", "operator": "contains" }
    ]
  }
}

###
# String operator: MATCHES (default options)
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "span_alpha", "operator": "matches" }
    ]
  }
}

###
# String operator: MATCHES with case_sensitive true
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "SPAN_ALPHA", "operator": "matches", "options": { "case_sensitive": true } }
    ]
  }
}

###
# String operator: MATCHES with case_sensitive true
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "span_alpha", "operator": "matches", "options": { "case_sensitive": true } }
    ]
  }
}

###
# String operator: MATCHES with exact_match true
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "span_alpha", "operator": "matches", "options": { "exact_match": true } }
    ]
  }
}

###
# String operator: MATCHES with exact_match true
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "span_gamma", "operator": "matches", "options": { "exact_match": true } }
    ]
  }
}

###
# String operator: MATCHES with both options
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "SPAN_ALPHA", "operator": "matches", "options": { "case_sensitive": true, "exact_match": true } }
    ]
  }
}

###
# String operator: MATCHES with both options
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "span_alpha", "operator": "matches", "options": { "case_sensitive": true, "exact_match": true } }
    ]
  }
}

###
# String operator: LIKE (SQL-like)
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "%span%", "operator": "like" }
    ]
  }
}

###
# List operator: IN
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": ["span_alpha", "span_beta"], "operator": "in" }
    ]
  }
}

###
# List operator: NOT_IN
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": ["span_alpha", "span_beta"], "operator": "not_in" }
    ]
  }
}

###
# List operator: HAS -- unsupported
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "span", "operator": "has" }
    ]
  }
}

###
# List operator: HAS_NOT -- unsupported
POST {{base_url}}/spans/query
Content-Type: application/json
Authorization: {{authorization}}

{
  "filter": {
    "conditions": [
      { "field": "span_name", "value": "span", "operator": "has_not" }
    ]
  }
}
{
    "openapi": "3.1.0",
    "info": {
        "title": "Agenta Backend",
        "version": "0.1.0",
        "description": "Agenta Backend API",
        "contact": {
            "name": "Agenta",
            "url": "https://agenta.ai",
            "email": "team@agenta.ai"
        }
    },
    "servers": [
        {
            "url": "https://cloud.agenta.ai/api",
            "description": "Agenta Cloud"
        }
    ],
    "paths": {
        "/observability/dashboard/": {
            "get": {
                "tags": [
                    "Observability"
                ],
                "summary": "Get Dashboard Data",
                "operationId": "observability_dashboard",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Timerange",
                            "default": "24_hours"
                        },
                        "name": "timeRange",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Environment"
                        },
                        "name": "environment",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Variant"
                        },
                        "name": "variant",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observability/trace/": {
            "post": {
                "tags": [
                    "Observability"
                ],
                "summary": "Create Traces",
                "operationId": "create_traces",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTrace"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateTraceResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observability/traces/": {
            "get": {
                "tags": [
                    "Observability"
                ],
                "summary": "Get Traces",
                "operationId": "get_traces",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1.0,
                            "title": "Page",
                            "default": 1
                        },
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1.0,
                            "title": "Pagesize",
                            "default": 10
                        },
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Type",
                            "default": "generation"
                        },
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Trace Id"
                        },
                        "name": "trace_id",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Environment"
                        },
                        "name": "environment",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Variant"
                        },
                        "name": "variant",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Created At",
                            "default": "desc"
                        },
                        "name": "created_at",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WithPagination"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Observability"
                ],
                "summary": "Delete Traces",
                "operationId": "delete_traces",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array",
                                "title": "Ids"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "title": "Response Delete Traces"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observability/traces/{trace_id}/": {
            "get": {
                "tags": [
                    "Observability"
                ],
                "summary": "Get Trace Detail",
                "operationId": "get_trace_detail",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Trace Id"
                        },
                        "name": "trace_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TraceDetail"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observability/spans/": {
            "get": {
                "tags": [
                    "Observability"
                ],
                "summary": "Get Spans Of Trace",
                "operationId": "get_spans_of_generation",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1.0,
                            "title": "Page",
                            "default": 1
                        },
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1.0,
                            "title": "Pagesize",
                            "default": 10
                        },
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Type",
                            "default": "generation"
                        },
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Trace Id"
                        },
                        "name": "trace_id",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Environment"
                        },
                        "name": "environment",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Variant"
                        },
                        "name": "variant",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Created At",
                            "default": "desc"
                        },
                        "name": "created_at",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Observability"
                ],
                "summary": "Delete Spans Of Trace",
                "operationId": "delete_spans_of_trace",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array",
                                "title": "Ids"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "title": "Response Delete Spans Of Trace"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/observability/spans/{span_id}/": {
            "get": {
                "tags": [
                    "Observability"
                ],
                "summary": "Get Span Of Trace",
                "operationId": "get_span_of_generation",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Span Id"
                        },
                        "name": "span_id",
                        "in": "path"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Type",
                            "default": "generation"
                        },
                        "name": "type",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SpanDetail"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/keys": {
            "get": {
                "summary": "List Api Keys",
                "description": "List all API keys associated with the authenticated user.\n\nArgs:\n    request (Request): The incoming request object.\n\nReturns:\n    List[ListAPIKeysResponse]: A list of API Keys associated with the user.",
                "operationId": "list_api_keys",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/ListAPIKeysResponse"
                                    },
                                    "type": "array",
                                    "title": "Response List Api Keys"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Api Key",
                "description": "Creates an API key for a user.\n\nArgs:\n    request (Request): The request object containing the user ID in the request state.\n\nReturns:\n    str: The created API key.",
                "operationId": "create_api_key",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workspace Id"
                        },
                        "name": "workspace_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "title": "Response Create Api Key"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/keys/{key_prefix}": {
            "delete": {
                "summary": "Delete Api Key",
                "description": "Delete an API key with the given key prefix for the authenticated user.\n\nArgs:\n    key_prefix (str): The prefix of the API key to be deleted.\n    request (Request): The incoming request object.\n\nReturns:\n    dict: A dictionary containing a success message upon successful deletion.\n\nRaises:\n    HTTPException: If the API key is not found or does not belong to the user.",
                "operationId": "delete_api_key",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Key Prefix"
                        },
                        "name": "key_prefix",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Delete Api Key"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/keys/{key_prefix}/validate": {
            "get": {
                "summary": "Validate Api Key",
                "description": "This Function is called by the CLI and is used to validate an API key provided by a user in agenta init setup.\nReturns:\n    bool: True. If the request reaches this point, the API key is valid.",
                "operationId": "validate_api_key",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Key Prefix"
                        },
                        "name": "key_prefix",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "title": "Response Validate Api Key"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "summary": "List Organizations",
                "description": "Returns a list of organizations associated with the user's session.\n\nArgs:\n    stoken_session (SessionContainer): The user's session token.\n\nReturns:\n    list[Organization]: A list of organizations associated with the user's session.\n\nRaises:\n    HTTPException: If there is an error retrieving the organizations from the database.",
                "operationId": "list_organizations",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Organization"
                                    },
                                    "type": "array",
                                    "title": "Response List Organizations"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Organization",
                "operationId": "create_organization",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOrganization"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/organizations/own": {
            "get": {
                "summary": "Get User Organization",
                "operationId": "get_own_org",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrganizationOutput"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{org_id}": {
            "get": {
                "summary": "Fetch Organization Details",
                "description": "Get an organization's details.\n\nRaises:\n    HTTPException: _description_\n    Permission Denied\n\nReturns:\n    OrganizationDB Instance",
                "operationId": "fetch_organization_details",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Org Id"
                        },
                        "name": "org_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Organization",
                "operationId": "update_organization",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Org Id"
                        },
                        "name": "org_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrganizationUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{org_id}/workspaces/{workspace_id}/invite": {
            "post": {
                "summary": "Invite User To Workspace",
                "operationId": "invite_user_to_workspace",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Org Id"
                        },
                        "name": "org_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workspace Id"
                        },
                        "name": "workspace_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "$ref": "#/components/schemas/InviteRequest"
                                },
                                "type": "array",
                                "title": "Payload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{org_id}/workspaces/{workspace_id}/invite/resend": {
            "post": {
                "summary": "Resend Workspace Invitation",
                "description": "Resend an invitation to a user to an Organization.\n\nRaises:\n    HTTPException: _description_; status_code: 500\n    HTTPException: Invitation not found or has expired; status_code: 400\n    HTTPException: You already belong to this organization; status_code: 400\n\nReturns:\n    JSONResponse: Resent invitation to user; status_code: 200",
                "operationId": "resend_invitation",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Org Id"
                        },
                        "name": "org_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workspace Id"
                        },
                        "name": "workspace_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReseendInviteRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{org_id}/workspaces/{workspace_id}/invite/accept": {
            "post": {
                "summary": "Accept Workspace Invitation",
                "description": "Accept an invitation to a workspace.\n\nRaises:\n    HTTPException: _description_; status_code: 500\n    HTTPException: Invitation not found or has expired; status_code: 400\n    HTTPException: You already belong to this organization; status_code: 400\n\nReturns:\n    JSONResponse: Accepted invitation to workspace; status_code: 200",
                "operationId": "accept_invitation",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Org Id"
                        },
                        "name": "org_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workspace Id"
                        },
                        "name": "workspace_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InviteToken"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{org_id}/workspaces": {
            "post": {
                "summary": "Create Workspace",
                "operationId": "create_workspace",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Org Id"
                        },
                        "name": "org_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWorkspace"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/organizations/{org_id}/workspaces/{workspace_id}": {
            "put": {
                "summary": "Update Workspace",
                "operationId": "update_workspace",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Org Id"
                        },
                        "name": "org_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workspace Id"
                        },
                        "name": "workspace_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateWorkspace"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/roles": {
            "get": {
                "summary": "Get All Workspace Roles",
                "description": "Get all workspace roles.\n\nReturns a list of all available workspace roles.\n\nReturns:\n    List[WorkspaceRoleResponse]: A list of WorkspaceRole objects representing the available workspace roles.\n\nRaises:\n    HTTPException: If an error occurs while retrieving the workspace roles.",
                "operationId": "get_all_workspace_roles",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/WorkspaceRoleResponse"
                                    },
                                    "type": "array",
                                    "title": "Response Get All Workspace Roles"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/permissions": {
            "get": {
                "summary": "Get All Workspace Permissions",
                "description": "Get all workspace permissions.\n\nReturns a list of all available workspace permissions.\n\nReturns:\n    List[Permission]: A list of Permission objects representing the available workspace permissions.\n\nRaises:\n    HTTPException: If there is an error retrieving the workspace permissions.",
                "operationId": "get_all_workspace_permissions",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    },
                                    "type": "array"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/roles": {
            "post": {
                "summary": "Assign Role To User",
                "description": "Assigns a role to a user in a workspace.\n\nArgs:\n    payload (UserRole): The payload containing the organization id, user email, and role to assign.\n    workspace_id (str): The ID of the workspace.\n    request (Request): The FastAPI request object.\n\nReturns:\n    bool: True if the role was successfully assigned, False otherwise.\n\nRaises:\n    HTTPException: If the user does not have permission to perform this action.\n    HTTPException: If there is an error assigning the role to the user.",
                "operationId": "assign_role_to_user",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workspace Id"
                        },
                        "name": "workspace_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRole"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "title": "Response Assign Role To User"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Unassign Role From User",
                "description": "Delete a role assignment from a user in a workspace.\n\nArgs:\n    workspace_id (str): The ID of the workspace.\n    email (str): The email of the user to remove the role from.\n    org_id (str): The ID of the organization.\n    role (str): The role to remove from the user.\n    request (Request): The FastAPI request object.\n\nReturns:\n    bool: True if the role assignment was successfully deleted.\n\nRaises:\n    HTTPException: If there is an error in the request or the user does not have permission to perform the action.\n    HTTPException: If there is an error in updating the user's roles.",
                "operationId": "unassign_role_from_user",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workspace Id"
                        },
                        "name": "workspace_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Email"
                        },
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Org Id"
                        },
                        "name": "org_id",
                        "in": "query"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Role"
                        },
                        "name": "role",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/workspaces/{workspace_id}/users": {
            "delete": {
                "summary": "Remove User From Workspace",
                "description": "Remove a user from a workspace.\n\nParameters:\n- payload (UserRole): The payload containing the user email and organization ID.\n- workspace_id (str): The ID of the workspace.\n- request (Request): The FastAPI request object.\n\nReturns:\n- WorkspaceResponse: The updated workspace.\n\nRaises:\n- HTTPException: If the user does not have permission to perform this action.\n- HTTPException: If there is an error during the removal process.",
                "operationId": "remove_user_from_workspace",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Workspace Id"
                        },
                        "name": "workspace_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Org Id"
                        },
                        "name": "org_id",
                        "in": "query"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Email"
                        },
                        "name": "email",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WorkspaceResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/health": {
            "get": {
                "summary": "Health Check",
                "operationId": "health_check",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "summary": "User Profile",
                "operationId": "user_profile",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/apps/{app_id}/variants": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "summary": "List App Variants",
                "description": "Retrieve a list of app variants for a given app ID.\n\nArgs:\n    app_id (str): The ID of the app to retrieve variants for.\n    stoken_session (SessionContainer, optional): The session container to verify the user's session. Defaults to Depends(verify_session()).\n\nReturns:\n    List[AppVariantResponse]: A list of app variants for the given app ID.",
                "operationId": "list_app_variants",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AppVariantResponse_"
                                    },
                                    "type": "array",
                                    "title": "Response List App Variants"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/apps/get_variant_by_env": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "summary": "Get Variant By Env",
                "description": "Retrieve the app variant based on the provided app_id and environment.\n\nArgs:\n    app_id (str): The ID of the app to retrieve the variant for.\n    environment (str): The environment of the app variant to retrieve.\n    stoken_session (SessionContainer, optional): The session token container. Defaults to Depends(verify_session()).\n\nRaises:\n    HTTPException: If the app variant is not found (status_code=500), or if a ValueError is raised (status_code=400), or if any other exception is raised (status_code=500).\n\nReturns:\n    AppVariantResponse: The retrieved app variant.",
                "operationId": "get_variant_by_env",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "query"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Environment"
                        },
                        "name": "environment",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppVariantResponse_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/apps": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "summary": "List Apps",
                "description": "Retrieve a list of apps filtered by app_name and org_id.\n\nArgs:\n    app_name (Optional[str]): The name of the app to filter by.\n    org_id (Optional[str]): The ID of the organization to filter by.\n    stoken_session (SessionContainer): The session container.\n\nReturns:\n    List[App]: A list of apps filtered by app_name and org_id.\n\nRaises:\n    HTTPException: If there was an error retrieving the list of apps.",
                "operationId": "list_apps",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "App Name"
                        },
                        "name": "app_name",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Org Id"
                        },
                        "name": "org_id",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Workspace Id"
                        },
                        "name": "workspace_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/App"
                                    },
                                    "type": "array",
                                    "title": "Response List Apps"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Apps"
                ],
                "summary": "Create App",
                "description": "Create a new app for a user or organization.\n\nArgs:\n    payload (CreateApp): The payload containing the app name and organization ID (optional).\n    stoken_session (SessionContainer): The session container containing the user's session token.\n\nReturns:\n    CreateAppOutput: The output containing the newly created app's ID and name.\n\nRaises:\n    HTTPException: If there is an error creating the app or the user does not have permission to access the app.",
                "operationId": "create_app",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateApp_"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateAppOutput"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/apps/{app_id}/variant/from-image": {
            "post": {
                "tags": [
                    "Apps"
                ],
                "summary": "Add Variant From Image",
                "description": "Add a new variant to an app based on a Docker image.\n\nArgs:\n    app_id (str): The ID of the app to add the variant to.\n    payload (AddVariantFromImagePayload): The payload containing information about the variant to add.\n    stoken_session (SessionContainer, optional): The session container. Defaults to Depends(verify_session()).\n\nRaises:\n    HTTPException: If the feature flag is set to \"demo\" or if the image does not have a tag starting with the registry name (agenta-server) or if the image is not found or if the user does not have access to the app.\n\nReturns:\n    dict: The newly added variant.",
                "operationId": "add_variant_from_image",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddVariantFromImagePayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/apps/{app_id}": {
            "delete": {
                "tags": [
                    "Apps"
                ],
                "summary": "Remove App",
                "description": "Remove app, all its variant, containers and images\n\nArguments:\n    app -- App to remove",
                "operationId": "remove_app",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/apps/app_and_variant_from_template": {
            "post": {
                "tags": [
                    "Apps"
                ],
                "summary": "Create App And Variant From Template",
                "description": "Create an app and variant from a template.\n\nArgs:\n    payload (CreateAppVariant): The payload containing the app and variant information.\n    stoken_session (SessionContainer, optional): The session container. Defaults to Depends(verify_session()).\n\nRaises:\n    HTTPException: If the user has reached the app limit or if an app with the same name already exists.\n\nReturns:\n    AppVariantResponse: The output of the created app variant.",
                "operationId": "create_app_and_variant_from_template",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateAppVariant_"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppVariantResponse_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/apps/{app_id}/environments": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "summary": "List Environments",
                "description": "Retrieve a list of environments for a given app ID.\n\nArgs:\n    app_id (str): The ID of the app to retrieve environments for.\n    stoken_session (SessionContainer, optional): The session container. Defaults to Depends(verify_session()).\n\nReturns:\n    List[EnvironmentOutput]: A list of environment objects.",
                "operationId": "list_environments",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/EnvironmentOutput_"
                                    },
                                    "type": "array",
                                    "title": "Response List Environments"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/apps/{app_id}/revisions/{environment_name}": {
            "get": {
                "tags": [
                    "Apps"
                ],
                "summary": "List App Environment Revisions",
                "operationId": "environment_revisions",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "title": "Environment Name"
                        },
                        "name": "environment_name",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EnvironmentOutputExtended_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/variants/from-base": {
            "post": {
                "tags": [
                    "Variants"
                ],
                "summary": "Add Variant From Base And Config",
                "description": "Add a new variant based on an existing one.\nSame as POST /config\n\nArgs:\n    payload (AddVariantFromBasePayload): Payload containing base variant ID, new variant name, and parameters.\n    stoken_session (SessionContainer, optional): Session container. Defaults to result of verify_session().\n\nRaises:\n    HTTPException: Raised if the variant could not be added or accessed.\n\nReturns:\n    Union[AppVariantResponse, Any]: New variant details or exception.",
                "operationId": "add_variant_from_base_and_config",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddVariantFromBasePayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "$ref": "#/components/schemas/AppVariantResponse_"
                                        },
                                        {}
                                    ],
                                    "title": "Response Add Variant From Base And Config"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/variants/{variant_id}": {
            "get": {
                "tags": [
                    "Variants"
                ],
                "summary": "Get Variant",
                "operationId": "get_variant",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Variant Id"
                        },
                        "name": "variant_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppVariantResponse_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Variants"
                ],
                "summary": "Start Variant",
                "description": "Start a variant of an app.\n\nArgs:\n    variant_id (str): The ID of the variant to start.\n    action (VariantAction): The action to perform on the variant (start).\n    env_vars (Optional[DockerEnvVars], optional): The environment variables to inject to the Docker container. Defaults to None.\n    stoken_session (SessionContainer, optional): The session container. Defaults to Depends(verify_session()).\n\nReturns:\n    URI: The URL of the started variant.\n\nRaises:\n    HTTPException: If the app container cannot be started.",
                "operationId": "start_variant",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Variant Id"
                        },
                        "name": "variant_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_start_variant"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/URI"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Variants"
                ],
                "summary": "Remove Variant",
                "description": "Remove a variant from the server.\nIn the case it's the last variant using the image, stop the container and remove the image.\n\nArguments:\n    app_variant -- AppVariant to remove\n\nRaises:\n    HTTPException: If there is a problem removing the app variant",
                "operationId": "remove_variant",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Variant Id"
                        },
                        "name": "variant_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/variants/{variant_id}/parameters": {
            "put": {
                "tags": [
                    "Variants"
                ],
                "summary": "Update Variant Parameters",
                "description": "Updates the parameters for an app variant.\n\nArgs:\n    variant_id (str): The ID of the app variant to update.\n    payload (UpdateVariantParameterPayload): The payload containing the updated parameters.\n    stoken_session (SessionContainer, optional): The session container. Defaults to Depends(verify_session()).\n\nRaises:\n    HTTPException: If there is an error while trying to update the app variant.\n\nReturns:\n    JSONResponse: A JSON response containing the updated app variant parameters.",
                "operationId": "update_variant_parameters",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Variant Id"
                        },
                        "name": "variant_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateVariantParameterPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/variants/{variant_id}/image": {
            "put": {
                "tags": [
                    "Variants"
                ],
                "summary": "Update Variant Image",
                "description": "Updates the image used in an app variant.\n\nArgs:\n    variant_id (str): The ID of the app variant to update.\n    image (Image): The image information to update.\n\nRaises:\n    HTTPException: If an error occurs while trying to update the app variant.\n\nReturns:\n    JSONResponse: A JSON response indicating whether the update was successful or not.",
                "operationId": "update_variant_image",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Variant Id"
                        },
                        "name": "variant_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Image_"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/variants/{variant_id}/logs": {
            "get": {
                "tags": [
                    "Variants"
                ],
                "summary": "Retrieve Variant Logs",
                "operationId": "retrieve_variant_logs",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Variant Id"
                        },
                        "name": "variant_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/variants/{variant_id}/revisions": {
            "get": {
                "tags": [
                    "Variants"
                ],
                "summary": "Get Variant Revisions",
                "operationId": "get_variant_revisions",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Variant Id"
                        },
                        "name": "variant_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/AppVariantRevision"
                                    },
                                    "type": "array",
                                    "title": "Response Get Variant Revisions"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/variants/{variant_id}/revisions/{revision_number}": {
            "get": {
                "tags": [
                    "Variants"
                ],
                "summary": "Get Variant Revision",
                "operationId": "get_variant_revision",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Variant Id"
                        },
                        "name": "variant_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Revision Number"
                        },
                        "name": "revision_number",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AppVariantRevision"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/evaluations/by_resource": {
            "get": {
                "tags": [
                    "Evaluations"
                ],
                "summary": "Fetch Evaluation Ids",
                "description": "Fetches evaluation ids for a given resource type and id.\n\nArguments:\n    app_id (str): The ID of the app for which to fetch evaluations.\n    resource_type (str): The type of resource for which to fetch evaluations.\n    resource_ids List[ObjectId]: The IDs of resource for which to fetch evaluations.\n\nRaises:\n    HTTPException: If the resource_type is invalid or access is denied.\n\nReturns:\n    List[str]: A list of evaluation ids.",
                "operationId": "fetch_evaluation_ids_evaluations_by_resource_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "query"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Resource Type"
                        },
                        "name": "resource_type",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array",
                            "title": "Resource Ids"
                        },
                        "name": "resource_ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string",
                                        "example": "5eb7cf5a86d9755df3a6c593"
                                    },
                                    "type": "array",
                                    "title": "Response Fetch Evaluation Ids Evaluations By Resource Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/evaluations": {
            "get": {
                "tags": [
                    "Evaluations"
                ],
                "summary": "Fetch List Evaluations",
                "description": "Fetches a list of evaluations, optionally filtered by an app ID.\n\nArgs:\n    app_id (Optional[str]): An optional app ID to filter the evaluations.\n\nReturns:\n    List[Evaluation]: A list of evaluations.",
                "operationId": "fetch_list_evaluations_evaluations_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Evaluation"
                                    },
                                    "type": "array",
                                    "title": "Response Fetch List Evaluations Evaluations Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Evaluations"
                ],
                "summary": "Create Evaluation",
                "description": "Creates a new comparison table document\nRaises:\n    HTTPException: _description_\nReturns:\n    _description_",
                "operationId": "create_evaluation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewEvaluation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Evaluation"
                                    },
                                    "type": "array",
                                    "title": "Response Create Evaluation"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Evaluations"
                ],
                "summary": "Delete Evaluations",
                "description": "Delete specific comparison tables based on their unique IDs.\n\nArgs:\ndelete_evaluations (List[str]): The unique identifiers of the comparison tables to delete.\n\nReturns:\nA list of the deleted comparison tables' IDs.",
                "operationId": "delete_evaluations",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteEvaluation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Response Delete Evaluations"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/evaluations/{evaluation_id}/status": {
            "get": {
                "tags": [
                    "Evaluations"
                ],
                "summary": "Fetch Evaluation Status",
                "description": "Fetches the status of the evaluation.\n\nArgs:\n    evaluation_id (str): the evaluation id\n    request (Request): the request object\n\nReturns:\n    (str): the evaluation status",
                "operationId": "fetch_evaluation_status",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Evaluation Id"
                        },
                        "name": "evaluation_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/evaluations/{evaluation_id}/results": {
            "get": {
                "tags": [
                    "Evaluations"
                ],
                "summary": "Fetch Evaluation Results",
                "description": "Fetches the results of the evaluation\n\nArgs:\n    evaluation_id (str): the evaluation id\n    request (Request): the request object\n\nReturns:\n    _type_: _description_",
                "operationId": "fetch_evaluation_results",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Evaluation Id"
                        },
                        "name": "evaluation_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/evaluations/{evaluation_id}/evaluation_scenarios": {
            "get": {
                "tags": [
                    "Evaluations"
                ],
                "summary": "Fetch Evaluation Scenarios",
                "description": "Fetches evaluation scenarios for a given evaluation ID.\n\nArguments:\n    evaluation_id (str): The ID of the evaluation for which to fetch scenarios.\n\nRaises:\n    HTTPException: If the evaluation is not found or access is denied.\n\nReturns:\n    List[EvaluationScenario]: A list of evaluation scenarios.",
                "operationId": "fetch_evaluation_scenarios",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Evaluation Id"
                        },
                        "name": "evaluation_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/EvaluationScenario"
                                    },
                                    "type": "array",
                                    "title": "Response Fetch Evaluation Scenarios"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/evaluations/{evaluation_id}": {
            "get": {
                "tags": [
                    "Evaluations"
                ],
                "summary": "Fetch Evaluation",
                "description": "Fetches a single evaluation based on its ID.\n\nArgs:\n    evaluation_id (str): The ID of the evaluation to fetch.\n\nReturns:\n    Evaluation: The fetched evaluation.",
                "operationId": "fetch_evaluation",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Evaluation Id"
                        },
                        "name": "evaluation_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Evaluation"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/evaluations/webhook_example_fake": {
            "post": {
                "tags": [
                    "Evaluations"
                ],
                "summary": "Webhook Example Fake",
                "description": "Returns a fake score response for example webhook evaluation\n\nReturns:\n    _description_",
                "operationId": "webhook_example_fake",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EvaluationWebhook"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/evaluations/evaluation_scenarios/comparison-results": {
            "get": {
                "tags": [
                    "Evaluations"
                ],
                "summary": "Fetch Evaluation Scenarios",
                "description": "Fetches evaluation scenarios for a given evaluation ID.\n\nArguments:\n    evaluation_id (str): The ID of the evaluation for which to fetch scenarios.\n\nRaises:\n    HTTPException: If the evaluation is not found or access is denied.\n\nReturns:\n    List[EvaluationScenario]: A list of evaluation scenarios.",
                "operationId": "fetch_evaluation_scenarios_evaluations_evaluation_scenarios_comparison_results_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Evaluations Ids"
                        },
                        "name": "evaluations_ids",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "title": "Response Fetch Evaluation Scenarios Evaluations Evaluation Scenarios Comparison Results Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/human-evaluations": {
            "get": {
                "tags": [
                    "Human-Evaluations"
                ],
                "summary": "Fetch List Human Evaluations",
                "description": "Fetches a list of evaluations, optionally filtered by an app ID.\n\nArgs:\n    app_id (Optional[str]): An optional app ID to filter the evaluations.\n\nReturns:\n    List[HumanEvaluation]: A list of evaluations.",
                "operationId": "fetch_list_human_evaluations_human_evaluations_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/HumanEvaluation"
                                    },
                                    "type": "array",
                                    "title": "Response Fetch List Human Evaluations Human Evaluations Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Human-Evaluations"
                ],
                "summary": "Create Evaluation",
                "description": "Creates a new comparison table document\nRaises:\n    HTTPException: _description_\nReturns:\n    _description_",
                "operationId": "create_evaluation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewHumanEvaluation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SimpleEvaluationOutput"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Human-Evaluations"
                ],
                "summary": "Delete Evaluations",
                "description": "Delete specific comparison tables based on their unique IDs.\n\nArgs:\ndelete_evaluations (List[str]): The unique identifiers of the comparison tables to delete.\n\nReturns:\nA list of the deleted comparison tables' IDs.",
                "operationId": "delete_evaluations_human_evaluations_delete",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteEvaluation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Response Delete Evaluations Human Evaluations Delete"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/human-evaluations/{evaluation_id}": {
            "get": {
                "tags": [
                    "Human-Evaluations"
                ],
                "summary": "Fetch Human Evaluation",
                "description": "Fetches a single evaluation based on its ID.\n\nArgs:\n    evaluation_id (str): The ID of the evaluation to fetch.\n\nReturns:\n    HumanEvaluation: The fetched evaluation.",
                "operationId": "fetch_human_evaluation_human_evaluations__evaluation_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Evaluation Id"
                        },
                        "name": "evaluation_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HumanEvaluation"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Human-Evaluations"
                ],
                "summary": "Update Human Evaluation",
                "description": "Updates an evaluation's status.\n\nRaises:\n    HTTPException: If the columns in the test set do not match with the inputs in the variant.\n\nReturns:\n    None: A 204 No Content status code, indicating that the update was successful.",
                "operationId": "update_human_evaluation",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Evaluation Id"
                        },
                        "name": "evaluation_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanEvaluationUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/human-evaluations/{evaluation_id}/evaluation_scenarios": {
            "get": {
                "tags": [
                    "Human-Evaluations"
                ],
                "summary": "Fetch Evaluation Scenarios",
                "description": "Fetches evaluation scenarios for a given evaluation ID.\n\nArguments:\n    evaluation_id (str): The ID of the evaluation for which to fetch scenarios.\n\nRaises:\n    HTTPException: If the evaluation is not found or access is denied.\n\nReturns:\n    List[EvaluationScenario]: A list of evaluation scenarios.",
                "operationId": "fetch_evaluation_scenarios",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Evaluation Id"
                        },
                        "name": "evaluation_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/HumanEvaluationScenario"
                                    },
                                    "type": "array",
                                    "title": "Response Fetch Evaluation Scenarios"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/human-evaluations/{evaluation_id}/evaluation_scenario/{evaluation_scenario_id}/{evaluation_type}": {
            "put": {
                "tags": [
                    "Human-Evaluations"
                ],
                "summary": "Update Evaluation Scenario Router",
                "description": "Updates an evaluation scenario's vote or score based on its type.\n\nRaises:\n    HTTPException: If update fails or unauthorized.\n\nReturns:\n    None: 204 No Content status code upon successful update.",
                "operationId": "update_evaluation_scenario_router_human_evaluations__evaluation_id__evaluation_scenario__evaluation_scenario_id___evaluation_type__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Evaluation Id"
                        },
                        "name": "evaluation_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Evaluation Scenario Id"
                        },
                        "name": "evaluation_scenario_id",
                        "in": "path"
                    },
                    {
                        "required": true,
                        "schema": {
                            "$ref": "#/components/schemas/EvaluationType"
                        },
                        "name": "evaluation_type",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HumanEvaluationScenarioUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/human-evaluations/evaluation_scenario/{evaluation_scenario_id}/score": {
            "get": {
                "tags": [
                    "Human-Evaluations"
                ],
                "summary": "Get Evaluation Scenario Score Router",
                "description": "Fetch the score of a specific evaluation scenario.\n\nArgs:\n    evaluation_scenario_id: The ID of the evaluation scenario to fetch.\n    stoken_session: Session data, verified by `verify_session`.\n\nReturns:\n    Dictionary containing the scenario ID and its score.",
                "operationId": "get_evaluation_scenario_score_router_human_evaluations_evaluation_scenario__evaluation_scenario_id__score_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Evaluation Scenario Id"
                        },
                        "name": "evaluation_scenario_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "type": "object",
                                    "title": "Response Get Evaluation Scenario Score Router Human Evaluations Evaluation Scenario  Evaluation Scenario Id  Score Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Human-Evaluations"
                ],
                "summary": "Update Evaluation Scenario Score Router",
                "description": "Updates the score of an evaluation scenario.\n\nRaises:\n    HTTPException: Server error if the evaluation update fails.\n\nReturns:\n    None: 204 No Content status code upon successful update.",
                "operationId": "update_evaluation_scenario_score_router_human_evaluations_evaluation_scenario__evaluation_scenario_id__score_put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Evaluation Scenario Id"
                        },
                        "name": "evaluation_scenario_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EvaluationScenarioScoreUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/human-evaluations/{evaluation_id}/results": {
            "get": {
                "tags": [
                    "Human-Evaluations"
                ],
                "summary": "Fetch Results",
                "description": "Fetch all the results for one the comparison table\n\nArguments:\n    evaluation_id -- _description_\n\nReturns:\n    _description_",
                "operationId": "fetch_results",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Evaluation Id"
                        },
                        "name": "evaluation_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/evaluators": {
            "get": {
                "tags": [
                    "Evaluators"
                ],
                "summary": "Get Evaluators Endpoint",
                "description": "Endpoint to fetch a list of evaluators.\n\nReturns:\n    List[Evaluator]: A list of evaluator objects.",
                "operationId": "get_evaluators_endpoint_evaluators_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/Evaluator"
                                    },
                                    "type": "array",
                                    "title": "Response Get Evaluators Endpoint Evaluators Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/evaluators/configs": {
            "get": {
                "tags": [
                    "Evaluators"
                ],
                "summary": "Get Evaluator Configs",
                "description": "Endpoint to fetch evaluator configurations for a specific app.\n\nArgs:\n    app_id (str): The ID of the app.\n\nReturns:\n    List[EvaluatorConfigDB]: A list of evaluator configuration objects.",
                "operationId": "get_evaluator_configs_evaluators_configs_get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/EvaluatorConfig"
                                    },
                                    "type": "array",
                                    "title": "Response Get Evaluator Configs Evaluators Configs Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Evaluators"
                ],
                "summary": "Create New Evaluator Config",
                "description": "Endpoint to fetch evaluator configurations for a specific app.\n\nArgs:\n    app_id (str): The ID of the app.\n\nReturns:\n    EvaluatorConfigDB: Evaluator configuration api model.",
                "operationId": "create_new_evaluator_config_evaluators_configs_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewEvaluatorConfig"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EvaluatorConfig"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/evaluators/configs/{evaluator_config_id}": {
            "get": {
                "tags": [
                    "Evaluators"
                ],
                "summary": "Get Evaluator Config",
                "description": "Endpoint to fetch evaluator configurations for a specific app.\n\nReturns:\n    List[EvaluatorConfigDB]: A list of evaluator configuration objects.",
                "operationId": "get_evaluator_config_evaluators_configs__evaluator_config_id__get",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Evaluator Config Id"
                        },
                        "name": "evaluator_config_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EvaluatorConfig"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Evaluators"
                ],
                "summary": "Update Evaluator Config",
                "description": "Endpoint to update evaluator configurations for a specific app.\n\nReturns:\n    List[EvaluatorConfigDB]: A list of evaluator configuration objects.",
                "operationId": "update_evaluator_config_evaluators_configs__evaluator_config_id__put",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Evaluator Config Id"
                        },
                        "name": "evaluator_config_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateEvaluatorConfig"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EvaluatorConfig"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Evaluators"
                ],
                "summary": "Delete Evaluator Config",
                "description": "Endpoint to delete a specific evaluator configuration.\n\nArgs:\n    evaluator_config_id (str): The unique identifier of the evaluator configuration.\n\nReturns:\n    bool: True if deletion was successful, False otherwise.",
                "operationId": "delete_evaluator_config_evaluators_configs__evaluator_config_id__delete",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Evaluator Config Id"
                        },
                        "name": "evaluator_config_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "boolean",
                                    "title": "Response Delete Evaluator Config Evaluators Configs  Evaluator Config Id  Delete"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/testsets/upload": {
            "post": {
                "tags": [
                    "Testsets"
                ],
                "summary": "Upload File",
                "description": "Uploads a CSV or JSON file and saves its data to MongoDB.\n\nArgs:\nupload_type : Either a json or csv file.\n    file (UploadFile): The CSV or JSON file to upload.\n    testset_name (Optional): the name of the testset if provided.\n\nReturns:\n    dict: The result of the upload process.",
                "operationId": "upload_file",
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_upload_file"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetSimpleResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/testsets/endpoint": {
            "post": {
                "tags": [
                    "Testsets"
                ],
                "summary": "Import Testset",
                "description": "Import JSON testset data from an endpoint and save it to MongoDB.\n\nArgs:\n    endpoint (str): An endpoint URL to import data from.\n    testset_name (str): the name of the testset if provided.\n\nReturns:\n    dict: The result of the import process.",
                "operationId": "import_testset",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_import_testset"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetSimpleResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/testsets/{app_id}": {
            "post": {
                "tags": [
                    "Testsets"
                ],
                "summary": "Create Testset",
                "description": "Create a testset with given name and app_name, save the testset to MongoDB.\n\nArgs:\nname (str): name of the test set.\napp_name (str): name of the application.\ntestset (Dict[str, str]): test set data.\n\nReturns:\nstr: The id of the test set created.",
                "operationId": "create_testset",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewTestset"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TestSetSimpleResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/testsets/{testset_id}": {
            "get": {
                "tags": [
                    "Testsets"
                ],
                "summary": "Get Single Testset",
                "description": "Fetch a specific testset in a MongoDB collection using its _id.\n\nArgs:\n    testset_id (str): The _id of the testset to fetch.\n\nReturns:\n    The requested testset if found, else an HTTPException.",
                "operationId": "get_single_testset",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testset Id"
                        },
                        "name": "testset_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Testsets"
                ],
                "summary": "Update Testset",
                "description": "Update a testset with given id, update the testset in MongoDB.\n\nArgs:\ntestset_id (str): id of the test set to be updated.\ncsvdata (NewTestset): New data to replace the old testset.\n\nReturns:\nstr: The id of the test set updated.",
                "operationId": "update_testset",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Testset Id"
                        },
                        "name": "testset_id",
                        "in": "path"
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewTestset"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/testsets": {
            "get": {
                "tags": [
                    "Testsets"
                ],
                "summary": "Get Testsets",
                "description": "Get all testsets.\n\nReturns:\n- A list of testset objects.\n\nRaises:\n- `HTTPException` with status code 404 if no testsets are found.",
                "operationId": "get_testsets",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/TestSetOutputResponse"
                                    },
                                    "type": "array",
                                    "title": "Response Get Testsets"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Testsets"
                ],
                "summary": "Delete Testsets",
                "description": "Delete specific testsets based on their unique IDs.\n\nArgs:\ntestset_ids (List[str]): The unique identifiers of the testsets to delete.\n\nReturns:\nA list of the deleted testsets' IDs.",
                "operationId": "delete_testsets",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeleteTestsets"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "title": "Response Delete Testsets"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/containers/build_image": {
            "post": {
                "tags": [
                    "Containers"
                ],
                "summary": "Build Image",
                "description": "Builds a Docker image from a tar file containing the application code.\n\nArgs:\n    app_id (str): The ID of the application to build the image for.\n    base_name (str): The base name of the image to build.\n    tar_file (UploadFile): The tar file containing the application code.\n    stoken_session (SessionContainer): The session container for the user making the request.\n\nReturns:\n    Image: The Docker image that was built.",
                "operationId": "build_image",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "query"
                    },
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Base Name"
                        },
                        "name": "base_name",
                        "in": "query"
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Body_build_image"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Image_"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/containers/restart_container": {
            "post": {
                "tags": [
                    "Containers"
                ],
                "summary": "Restart Docker Container",
                "description": "Restart docker container.\n\nArgs:\n    payload (RestartAppContainer) -- the required data (app_name and variant_name)",
                "operationId": "restart_container",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RestartAppContainer"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Restart Container"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/containers/templates": {
            "get": {
                "tags": [
                    "Containers"
                ],
                "summary": "Container Templates",
                "description": "Returns a list of templates available for creating new containers.\n\nParameters:\nstoken_session (SessionContainer): The session container for the user.\n\nReturns:\n\nUnion[List[Template], str]: A list of templates or an error message.",
                "operationId": "container_templates",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "anyOf": [
                                        {
                                            "items": {
                                                "$ref": "#/components/schemas/Template"
                                            },
                                            "type": "array"
                                        },
                                        {
                                            "type": "string"
                                        }
                                    ],
                                    "title": "Response Container Templates"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/containers/container_url": {
            "get": {
                "tags": [
                    "Containers"
                ],
                "summary": "Construct App Container Url",
                "description": "Constructs the URL for an app container based on the provided base_id or variant_id.\n\nArgs:\n    base_id (Optional[str]): The ID of the base to use for the app container.\n    variant_id (Optional[str]): The ID of the variant to use for the app container.\n    request (Request): The request object.\n\nReturns:\n    URI: The URI for the app container.\n\nRaises:\n    HTTPException: If the base or variant cannot be found or the user does not have access.",
                "operationId": "construct_app_container_url",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Base Id"
                        },
                        "name": "base_id",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Variant Id"
                        },
                        "name": "variant_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/URI"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/environments/deploy": {
            "post": {
                "tags": [
                    "Environments"
                ],
                "summary": "Deploy To Environment",
                "description": "Deploys a given variant to an environment\n\nArgs:\n    environment_name: Name of the environment to deploy to.\n    variant_id: variant id to deploy.\n    stoken_session: . Defaults to Depends(verify_session()).\n\nRaises:\n    HTTPException: If the deployment fails.",
                "operationId": "deploy_to_environment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeployToEnvironmentPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bases": {
            "get": {
                "tags": [
                    "Bases"
                ],
                "summary": "List Bases",
                "description": "Retrieve a list of bases filtered by app_id and base_name.\n\nArgs:\n    request (Request): The incoming request.\n    app_id (Optional[str], optional): The ID of the app to filter by. Defaults to None.\n    base_name (Optional[str], optional): The name of the base to filter by. Defaults to None.\n\nReturns:\n    List[BaseOutput]: A list of BaseOutput objects representing the filtered bases.\n\nRaises:\n    HTTPException: If there was an error retrieving the bases.",
                "operationId": "list_bases",
                "parameters": [
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "App Id"
                        },
                        "name": "app_id",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Base Name"
                        },
                        "name": "base_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/BaseOutput"
                                    },
                                    "type": "array",
                                    "title": "Response List Bases"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/configs": {
            "get": {
                "tags": [
                    "Configs"
                ],
                "summary": "Get Config",
                "operationId": "get_config",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Base Id"
                        },
                        "name": "base_id",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Config Name"
                        },
                        "name": "config_name",
                        "in": "query"
                    },
                    {
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Environment Name"
                        },
                        "name": "environment_name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetConfigResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Configs"
                ],
                "summary": "Save Config",
                "operationId": "save_config",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SaveConfigPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/configs/deployment/{deployment_revision_id}": {
            "get": {
                "tags": [
                    "Configs"
                ],
                "summary": "Get Config Deployment Revision",
                "operationId": "get_config_deployment_revision",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Deployment Revision Id"
                        },
                        "name": "deployment_revision_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/configs/deployment/{deployment_revision_id}/revert": {
            "post": {
                "tags": [
                    "Configs"
                ],
                "summary": "Revert Deployment Revision",
                "operationId": "revert_deployment_revision",
                "parameters": [
                    {
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Deployment Revision Id"
                        },
                        "name": "deployment_revision_id",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AddVariantFromBasePayload": {
                "properties": {
                    "base_id": {
                        "type": "string",
                        "title": "Base Id"
                    },
                    "new_variant_name": {
                        "type": "string",
                        "title": "New Variant Name"
                    },
                    "new_config_name": {
                        "type": "string",
                        "title": "New Config Name"
                    },
                    "parameters": {
                        "type": "object",
                        "title": "Parameters"
                    }
                },
                "type": "object",
                "required": [
                    "base_id",
                    "new_variant_name",
                    "new_config_name",
                    "parameters"
                ],
                "title": "AddVariantFromBasePayload"
            },
            "AddVariantFromImagePayload": {
                "properties": {
                    "variant_name": {
                        "type": "string",
                        "title": "Variant Name"
                    },
                    "docker_id": {
                        "type": "string",
                        "title": "Docker Id"
                    },
                    "tags": {
                        "type": "string",
                        "title": "Tags"
                    },
                    "base_name": {
                        "type": "string",
                        "title": "Base Name"
                    },
                    "config_name": {
                        "type": "string",
                        "title": "Config Name"
                    }
                },
                "type": "object",
                "required": [
                    "variant_name",
                    "docker_id",
                    "tags"
                ],
                "title": "AddVariantFromImagePayload"
            },
            "AggregatedResult": {
                "properties": {
                    "evaluator_config": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EvaluatorConfig"
                            },
                            {
                                "type": "object"
                            }
                        ],
                        "title": "Evaluator Config"
                    },
                    "result": {
                        "$ref": "#/components/schemas/Result"
                    }
                },
                "type": "object",
                "required": [
                    "evaluator_config",
                    "result"
                ],
                "title": "AggregatedResult"
            },
            "App": {
                "properties": {
                    "app_id": {
                        "type": "string",
                        "title": "App Id"
                    },
                    "app_name": {
                        "type": "string",
                        "title": "App Name"
                    }
                },
                "type": "object",
                "required": [
                    "app_id",
                    "app_name"
                ],
                "title": "App"
            },
            "AppVariantResponse_": {
                "properties": {
                    "app_id": {
                        "type": "string",
                        "title": "App Id"
                    },
                    "app_name": {
                        "type": "string",
                        "title": "App Name"
                    },
                    "variant_id": {
                        "type": "string",
                        "title": "Variant Id"
                    },
                    "variant_name": {
                        "type": "string",
                        "title": "Variant Name"
                    },
                    "parameters": {
                        "type": "object",
                        "title": "Parameters"
                    },
                    "previous_variant_name": {
                        "type": "string",
                        "title": "Previous Variant Name"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "base_name": {
                        "type": "string",
                        "title": "Base Name"
                    },
                    "base_id": {
                        "type": "string",
                        "title": "Base Id"
                    },
                    "config_name": {
                        "type": "string",
                        "title": "Config Name"
                    },
                    "uri": {
                        "type": "string",
                        "title": "Uri"
                    },
                    "revision": {
                        "type": "integer",
                        "title": "Revision"
                    },
                    "organization_id": {
                        "type": "string",
                        "title": "Organization Id"
                    },
                    "workspace_id": {
                        "type": "string",
                        "title": "Workspace Id"
                    }
                },
                "type": "object",
                "required": [
                    "app_id",
                    "app_name",
                    "variant_id",
                    "variant_name",
                    "user_id",
                    "base_name",
                    "base_id",
                    "config_name",
                    "revision"
                ],
                "title": "AppVariantResponse_"
            },
            "AppVariantRevision": {
                "properties": {
                    "revision": {
                        "type": "integer",
                        "title": "Revision"
                    },
                    "modified_by": {
                        "type": "string",
                        "title": "Modified By"
                    },
                    "config": {
                        "$ref": "#/components/schemas/ConfigDB"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "revision",
                    "modified_by",
                    "config",
                    "created_at"
                ],
                "title": "AppVariantRevision"
            },
            "BaseOutput": {
                "properties": {
                    "base_id": {
                        "type": "string",
                        "title": "Base Id"
                    },
                    "base_name": {
                        "type": "string",
                        "title": "Base Name"
                    }
                },
                "type": "object",
                "required": [
                    "base_id",
                    "base_name"
                ],
                "title": "BaseOutput"
            },
            "Body_build_image": {
                "properties": {
                    "tar_file": {
                        "type": "string",
                        "format": "binary",
                        "title": "Tar File"
                    }
                },
                "type": "object",
                "required": [
                    "tar_file"
                ],
                "title": "Body_build_image"
            },
            "Body_import_testset": {
                "properties": {
                    "endpoint": {
                        "type": "string",
                        "title": "Endpoint"
                    },
                    "testset_name": {
                        "type": "string",
                        "title": "Testset Name"
                    },
                    "app_id": {
                        "type": "string",
                        "title": "App Id"
                    }
                },
                "type": "object",
                "title": "Body_import_testset"
            },
            "Body_start_variant": {
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/VariantAction"
                    },
                    "env_vars": {
                        "$ref": "#/components/schemas/DockerEnvVars"
                    }
                },
                "type": "object",
                "required": [
                    "action"
                ],
                "title": "Body_start_variant"
            },
            "Body_upload_file": {
                "properties": {
                    "upload_type": {
                        "type": "string",
                        "title": "Upload Type"
                    },
                    "file": {
                        "type": "string",
                        "format": "binary",
                        "title": "File"
                    },
                    "testset_name": {
                        "type": "string",
                        "title": "Testset Name"
                    },
                    "app_id": {
                        "type": "string",
                        "title": "App Id"
                    }
                },
                "type": "object",
                "required": [
                    "file"
                ],
                "title": "Body_upload_file"
            },
            "ConfigDB": {
                "properties": {
                    "config_name": {
                        "type": "string",
                        "title": "Config Name"
                    },
                    "parameters": {
                        "type": "object",
                        "title": "Parameters"
                    }
                },
                "type": "object",
                "required": [
                    "config_name"
                ],
                "title": "ConfigDB"
            },
            "CreateAppOutput": {
                "properties": {
                    "app_id": {
                        "type": "string",
                        "title": "App Id"
                    },
                    "app_name": {
                        "type": "string",
                        "title": "App Name"
                    }
                },
                "type": "object",
                "required": [
                    "app_id",
                    "app_name"
                ],
                "title": "CreateAppOutput"
            },
            "CreateAppVariant_": {
                "properties": {
                    "app_name": {
                        "type": "string",
                        "title": "App Name"
                    },
                    "template_id": {
                        "type": "string",
                        "title": "Template Id"
                    },
                    "env_vars": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Env Vars"
                    },
                    "organization_id": {
                        "type": "string",
                        "title": "Organization Id"
                    },
                    "workspace_id": {
                        "type": "string",
                        "title": "Workspace Id"
                    }
                },
                "type": "object",
                "required": [
                    "app_name",
                    "template_id",
                    "env_vars"
                ],
                "title": "CreateAppVariant_"
            },
            "CreateApp_": {
                "properties": {
                    "app_name": {
                        "type": "string",
                        "title": "App Name"
                    },
                    "organization_id": {
                        "type": "string",
                        "title": "Organization Id"
                    },
                    "workspace_id": {
                        "type": "string",
                        "title": "Workspace Id"
                    }
                },
                "type": "object",
                "required": [
                    "app_name"
                ],
                "title": "CreateApp_"
            },
            "CreateOrganization": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "owner": {
                        "type": "string",
                        "title": "Owner"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "CreateOrganization"
            },
            "CreateSpan": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "app_id": {
                        "type": "string",
                        "title": "App Id"
                    },
                    "variant_id": {
                        "type": "string",
                        "title": "Variant Id"
                    },
                    "variant_name": {
                        "type": "string",
                        "title": "Variant Name"
                    },
                    "inputs": {
                        "type": "object",
                        "title": "Inputs"
                    },
                    "internals": {
                        "type": "object",
                        "title": "Locals"
                    },
                    "outputs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Outputs"
                    },
                    "config": {
                        "type": "object",
                        "title": "Config"
                    },
                    "environment": {
                        "type": "string",
                        "title": "Environment"
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Tags"
                    },
                    "token_consumption": {
                        "type": "integer",
                        "title": "Token Consumption"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "parent_span_id": {
                        "type": "string",
                        "title": "Parent Span Id"
                    },
                    "attributes": {
                        "type": "object",
                        "title": "Attributes"
                    },
                    "spankind": {
                        "type": "string",
                        "title": "Spankind"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "user": {
                        "type": "string",
                        "title": "User"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start Time"
                    },
                    "end_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "End Time"
                    },
                    "tokens": {
                        "$ref": "#/components/schemas/LLMTokens"
                    },
                    "cost": {
                        "type": "number",
                        "title": "Cost"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "spankind",
                    "status",
                    "start_time",
                    "end_time"
                ],
                "title": "CreateSpan"
            },
            "CreateTrace": {
                "properties": {
                    "trace": {
                        "type": "string",
                        "title": "Trace"
                    },
                    "spans": {
                        "items": {
                            "$ref": "#/components/schemas/CreateSpan"
                        },
                        "type": "array",
                        "title": "Spans"
                    }
                },
                "type": "object",
                "required": [
                    "trace",
                    "spans"
                ],
                "title": "CreateTrace"
            },
            "CreateTraceResponse": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "data": {
                        "type": "object",
                        "title": "Data"
                    }
                },
                "type": "object",
                "required": [
                    "message",
                    "data"
                ],
                "title": "CreateTraceResponse"
            },
            "CreateWorkspace": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "type": {
                        "type": "string",
                        "title": "Type"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ],
                "title": "CreateWorkspace"
            },
            "DeleteEvaluation": {
                "properties": {
                    "evaluations_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Evaluations Ids"
                    }
                },
                "type": "object",
                "required": [
                    "evaluations_ids"
                ],
                "title": "DeleteEvaluation"
            },
            "DeleteTestsets": {
                "properties": {
                    "testset_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Testset Ids"
                    }
                },
                "type": "object",
                "required": [
                    "testset_ids"
                ],
                "title": "DeleteTestsets"
            },
            "DeployToEnvironmentPayload": {
                "properties": {
                    "environment_name": {
                        "type": "string",
                        "title": "Environment Name"
                    },
                    "variant_id": {
                        "type": "string",
                        "title": "Variant Id"
                    }
                },
                "type": "object",
                "required": [
                    "environment_name",
                    "variant_id"
                ],
                "title": "DeployToEnvironmentPayload"
            },
            "DockerEnvVars": {
                "properties": {
                    "env_vars": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Env Vars"
                    }
                },
                "type": "object",
                "required": [
                    "env_vars"
                ],
                "title": "DockerEnvVars"
            },
            "EnvironmentOutputExtended_": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "app_id": {
                        "type": "string",
                        "title": "App Id"
                    },
                    "deployed_app_variant_id": {
                        "type": "string",
                        "title": "Deployed App Variant Id"
                    },
                    "deployed_variant_name": {
                        "type": "string",
                        "title": "Deployed Variant Name"
                    },
                    "deployed_app_variant_revision_id": {
                        "type": "string",
                        "title": "Deployed App Variant Revision Id"
                    },
                    "revision": {
                        "type": "integer",
                        "title": "Revision"
                    },
                    "revisions": {
                        "items": {
                            "$ref": "#/components/schemas/EnvironmentRevision"
                        },
                        "type": "array",
                        "title": "Revisions"
                    },
                    "organization_id": {
                        "type": "string",
                        "title": "Organization Id"
                    },
                    "workspace_id": {
                        "type": "string",
                        "title": "Workspace Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "app_id",
                    "revisions"
                ],
                "title": "EnvironmentOutputExtended_"
            },
            "EnvironmentOutput_": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "app_id": {
                        "type": "string",
                        "title": "App Id"
                    },
                    "deployed_app_variant_id": {
                        "type": "string",
                        "title": "Deployed App Variant Id"
                    },
                    "deployed_variant_name": {
                        "type": "string",
                        "title": "Deployed Variant Name"
                    },
                    "deployed_app_variant_revision_id": {
                        "type": "string",
                        "title": "Deployed App Variant Revision Id"
                    },
                    "revision": {
                        "type": "integer",
                        "title": "Revision"
                    },
                    "organization_id": {
                        "type": "string",
                        "title": "Organization Id"
                    },
                    "workspace_id": {
                        "type": "string",
                        "title": "Workspace Id"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "app_id"
                ],
                "title": "EnvironmentOutput_"
            },
            "EnvironmentRevision": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "revision": {
                        "type": "integer",
                        "title": "Revision"
                    },
                    "modified_by": {
                        "type": "string",
                        "title": "Modified By"
                    },
                    "deployed_app_variant_revision": {
                        "type": "string",
                        "title": "Deployed App Variant Revision"
                    },
                    "deployment": {
                        "type": "string",
                        "title": "Deployment"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "revision",
                    "modified_by",
                    "created_at"
                ],
                "title": "EnvironmentRevision"
            },
            "Error": {
                "properties": {
                    "message": {
                        "type": "string",
                        "title": "Message"
                    },
                    "stacktrace": {
                        "type": "string",
                        "title": "Stacktrace"
                    }
                },
                "type": "object",
                "required": [
                    "message"
                ],
                "title": "Error"
            },
            "Evaluation": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "app_id": {
                        "type": "string",
                        "title": "App Id"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "user_username": {
                        "type": "string",
                        "title": "User Username"
                    },
                    "variant_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Variant Ids"
                    },
                    "variant_names": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Variant Names"
                    },
                    "variant_revision_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Variant Revision Ids"
                    },
                    "revisions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Revisions"
                    },
                    "testset_id": {
                        "type": "string",
                        "title": "Testset Id"
                    },
                    "testset_name": {
                        "type": "string",
                        "title": "Testset Name"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Result"
                    },
                    "aggregated_results": {
                        "items": {
                            "$ref": "#/components/schemas/AggregatedResult"
                        },
                        "type": "array",
                        "title": "Aggregated Results"
                    },
                    "average_cost": {
                        "$ref": "#/components/schemas/Result"
                    },
                    "total_cost": {
                        "$ref": "#/components/schemas/Result"
                    },
                    "average_latency": {
                        "$ref": "#/components/schemas/Result"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "app_id",
                    "user_id",
                    "user_username",
                    "variant_ids",
                    "variant_names",
                    "variant_revision_ids",
                    "revisions",
                    "status",
                    "aggregated_results",
                    "created_at",
                    "updated_at"
                ],
                "title": "Evaluation"
            },
            "EvaluationScenario": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "evaluation_id": {
                        "type": "string",
                        "title": "Evaluation Id"
                    },
                    "inputs": {
                        "items": {
                            "$ref": "#/components/schemas/EvaluationScenarioInput"
                        },
                        "type": "array",
                        "title": "Inputs"
                    },
                    "outputs": {
                        "items": {
                            "$ref": "#/components/schemas/EvaluationScenarioOutput"
                        },
                        "type": "array",
                        "title": "Outputs"
                    },
                    "evaluation": {
                        "type": "string",
                        "title": "Evaluation"
                    },
                    "correct_answer": {
                        "type": "string",
                        "title": "Correct Answer"
                    },
                    "is_pinned": {
                        "type": "boolean",
                        "title": "Is Pinned"
                    },
                    "note": {
                        "type": "string",
                        "title": "Note"
                    },
                    "results": {
                        "items": {
                            "$ref": "#/components/schemas/EvaluationScenarioResult"
                        },
                        "type": "array",
                        "title": "Results"
                    }
                },
                "type": "object",
                "required": [
                    "evaluation_id",
                    "inputs",
                    "outputs",
                    "results"
                ],
                "title": "EvaluationScenario"
            },
            "EvaluationScenarioInput": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "value": {
                        "title": "Value"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "type"
                ],
                "title": "EvaluationScenarioInput"
            },
            "EvaluationScenarioOutput": {
                "properties": {
                    "result": {
                        "$ref": "#/components/schemas/Result"
                    },
                    "cost": {
                        "type": "number",
                        "title": "Cost"
                    },
                    "latency": {
                        "type": "number",
                        "title": "Latency"
                    }
                },
                "type": "object",
                "required": [
                    "result"
                ],
                "title": "EvaluationScenarioOutput"
            },
            "EvaluationScenarioResult": {
                "properties": {
                    "evaluator_config": {
                        "type": "string",
                        "title": "Evaluator Config"
                    },
                    "result": {
                        "$ref": "#/components/schemas/Result"
                    }
                },
                "type": "object",
                "required": [
                    "evaluator_config",
                    "result"
                ],
                "title": "EvaluationScenarioResult"
            },
            "EvaluationScenarioScoreUpdate": {
                "properties": {
                    "score": {
                        "type": "number",
                        "title": "Score"
                    }
                },
                "type": "object",
                "required": [
                    "score"
                ],
                "title": "EvaluationScenarioScoreUpdate"
            },
            "EvaluationStatusEnum": {
                "type": "string",
                "enum": [
                    "EVALUATION_INITIALIZED",
                    "EVALUATION_STARTED",
                    "EVALUATION_FINISHED",
                    "EVALUATION_FINISHED_WITH_ERRORS",
                    "EVALUATION_FAILED"
                ],
                "title": "EvaluationStatusEnum",
                "description": "An enumeration."
            },
            "EvaluationType": {
                "type": "string",
                "enum": [
                    "human_a_b_testing",
                    "single_model_test"
                ],
                "title": "EvaluationType",
                "description": "An enumeration."
            },
            "EvaluationWebhook": {
                "properties": {
                    "score": {
                        "type": "number",
                        "title": "Score"
                    }
                },
                "type": "object",
                "required": [
                    "score"
                ],
                "title": "EvaluationWebhook"
            },
            "Evaluator": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "key": {
                        "type": "string",
                        "title": "Key"
                    },
                    "direct_use": {
                        "type": "boolean",
                        "title": "Direct Use"
                    },
                    "settings_template": {
                        "type": "object",
                        "title": "Settings Template"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "key",
                    "direct_use",
                    "settings_template"
                ],
                "title": "Evaluator"
            },
            "EvaluatorConfig": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "evaluator_key": {
                        "type": "string",
                        "title": "Evaluator Key"
                    },
                    "settings_values": {
                        "type": "object",
                        "title": "Settings Values"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "evaluator_key",
                    "created_at",
                    "updated_at"
                ],
                "title": "EvaluatorConfig"
            },
            "GetConfigResponse": {
                "properties": {
                    "config_name": {
                        "type": "string",
                        "title": "Config Name"
                    },
                    "current_version": {
                        "type": "integer",
                        "title": "Current Version"
                    },
                    "parameters": {
                        "type": "object",
                        "title": "Parameters"
                    }
                },
                "type": "object",
                "required": [
                    "config_name",
                    "current_version",
                    "parameters"
                ],
                "title": "GetConfigResponse"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "HumanEvaluation": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "app_id": {
                        "type": "string",
                        "title": "App Id"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "user_username": {
                        "type": "string",
                        "title": "User Username"
                    },
                    "evaluation_type": {
                        "type": "string",
                        "title": "Evaluation Type"
                    },
                    "variant_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Variant Ids"
                    },
                    "variant_names": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Variant Names"
                    },
                    "variants_revision_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Variants Revision Ids"
                    },
                    "revisions": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Revisions"
                    },
                    "testset_id": {
                        "type": "string",
                        "title": "Testset Id"
                    },
                    "testset_name": {
                        "type": "string",
                        "title": "Testset Name"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "app_id",
                    "user_id",
                    "user_username",
                    "evaluation_type",
                    "variant_ids",
                    "variant_names",
                    "variants_revision_ids",
                    "revisions",
                    "testset_id",
                    "testset_name",
                    "status",
                    "created_at",
                    "updated_at"
                ],
                "title": "HumanEvaluation"
            },
            "HumanEvaluationScenario": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "evaluation_id": {
                        "type": "string",
                        "title": "Evaluation Id"
                    },
                    "inputs": {
                        "items": {
                            "$ref": "#/components/schemas/HumanEvaluationScenarioInput"
                        },
                        "type": "array",
                        "title": "Inputs"
                    },
                    "outputs": {
                        "items": {
                            "$ref": "#/components/schemas/HumanEvaluationScenarioOutput"
                        },
                        "type": "array",
                        "title": "Outputs"
                    },
                    "vote": {
                        "type": "string",
                        "title": "Vote"
                    },
                    "score": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "integer"
                            }
                        ],
                        "title": "Score"
                    },
                    "evaluation": {
                        "type": "string",
                        "title": "Evaluation"
                    },
                    "correct_answer": {
                        "type": "string",
                        "title": "Correct Answer"
                    },
                    "is_pinned": {
                        "type": "boolean",
                        "title": "Is Pinned"
                    },
                    "note": {
                        "type": "string",
                        "title": "Note"
                    }
                },
                "type": "object",
                "required": [
                    "evaluation_id",
                    "inputs",
                    "outputs"
                ],
                "title": "HumanEvaluationScenario"
            },
            "HumanEvaluationScenarioInput": {
                "properties": {
                    "input_name": {
                        "type": "string",
                        "title": "Input Name"
                    },
                    "input_value": {
                        "type": "string",
                        "title": "Input Value"
                    }
                },
                "type": "object",
                "required": [
                    "input_name",
                    "input_value"
                ],
                "title": "HumanEvaluationScenarioInput"
            },
            "HumanEvaluationScenarioOutput": {
                "properties": {
                    "variant_id": {
                        "type": "string",
                        "title": "Variant Id"
                    },
                    "variant_output": {
                        "type": "string",
                        "title": "Variant Output"
                    }
                },
                "type": "object",
                "required": [
                    "variant_id",
                    "variant_output"
                ],
                "title": "HumanEvaluationScenarioOutput"
            },
            "HumanEvaluationScenarioUpdate": {
                "properties": {
                    "vote": {
                        "type": "string",
                        "title": "Vote"
                    },
                    "score": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "integer"
                            }
                        ],
                        "title": "Score"
                    },
                    "correct_answer": {
                        "type": "string",
                        "title": "Correct Answer"
                    },
                    "outputs": {
                        "items": {
                            "$ref": "#/components/schemas/HumanEvaluationScenarioOutput"
                        },
                        "type": "array",
                        "title": "Outputs"
                    },
                    "inputs": {
                        "items": {
                            "$ref": "#/components/schemas/HumanEvaluationScenarioInput"
                        },
                        "type": "array",
                        "title": "Inputs"
                    },
                    "is_pinned": {
                        "type": "boolean",
                        "title": "Is Pinned"
                    },
                    "note": {
                        "type": "string",
                        "title": "Note"
                    }
                },
                "type": "object",
                "title": "HumanEvaluationScenarioUpdate"
            },
            "HumanEvaluationUpdate": {
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/EvaluationStatusEnum"
                    }
                },
                "type": "object",
                "title": "HumanEvaluationUpdate"
            },
            "Image_": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "docker_id": {
                        "type": "string",
                        "title": "Docker Id"
                    },
                    "tags": {
                        "type": "string",
                        "title": "Tags"
                    },
                    "organization_id": {
                        "type": "string",
                        "title": "Organization Id"
                    },
                    "workspace_id": {
                        "type": "string",
                        "title": "Workspace Id"
                    }
                },
                "type": "object",
                "required": [
                    "docker_id",
                    "tags"
                ],
                "title": "Image_"
            },
            "InviteRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "roles": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Roles"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "roles"
                ],
                "title": "InviteRequest"
            },
            "InviteToken": {
                "properties": {
                    "token": {
                        "type": "string",
                        "title": "Token"
                    }
                },
                "type": "object",
                "required": [
                    "token"
                ],
                "title": "InviteToken"
            },
            "LLMRunRateLimit": {
                "properties": {
                    "batch_size": {
                        "type": "integer",
                        "title": "Batch Size"
                    },
                    "max_retries": {
                        "type": "integer",
                        "title": "Max Retries"
                    },
                    "retry_delay": {
                        "type": "integer",
                        "title": "Retry Delay"
                    },
                    "delay_between_batches": {
                        "type": "integer",
                        "title": "Delay Between Batches"
                    }
                },
                "type": "object",
                "required": [
                    "batch_size",
                    "max_retries",
                    "retry_delay",
                    "delay_between_batches"
                ],
                "title": "LLMRunRateLimit"
            },
            "LLMTokens": {
                "properties": {
                    "prompt_tokens": {
                        "type": "integer",
                        "title": "Prompt Tokens",
                        "default": 0
                    },
                    "completion_tokens": {
                        "type": "integer",
                        "title": "Completion Tokens",
                        "default": 0
                    },
                    "total_tokens": {
                        "type": "integer",
                        "title": "Total Tokens",
                        "default": 0
                    }
                },
                "type": "object",
                "title": "LLMTokens"
            },
            "ListAPIKeysResponse": {
                "properties": {
                    "prefix": {
                        "type": "string",
                        "title": "Prefix"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "last_used_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last Used At"
                    },
                    "expiration_date": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Expiration Date"
                    }
                },
                "type": "object",
                "required": [
                    "prefix",
                    "created_at"
                ],
                "title": "ListAPIKeysResponse"
            },
            "NewEvaluation": {
                "properties": {
                    "app_id": {
                        "type": "string",
                        "title": "App Id"
                    },
                    "variant_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Variant Ids"
                    },
                    "evaluators_configs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Evaluators Configs"
                    },
                    "testset_id": {
                        "type": "string",
                        "title": "Testset Id"
                    },
                    "rate_limit": {
                        "$ref": "#/components/schemas/LLMRunRateLimit"
                    },
                    "lm_providers_keys": {
                        "additionalProperties": {
                            "type": "string"
                        },
                        "type": "object",
                        "title": "Lm Providers Keys"
                    },
                    "correct_answer_column": {
                        "type": "string",
                        "title": "Correct Answer Column"
                    }
                },
                "type": "object",
                "required": [
                    "app_id",
                    "variant_ids",
                    "evaluators_configs",
                    "testset_id",
                    "rate_limit"
                ],
                "title": "NewEvaluation"
            },
            "NewEvaluatorConfig": {
                "properties": {
                    "app_id": {
                        "type": "string",
                        "title": "App Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "evaluator_key": {
                        "type": "string",
                        "title": "Evaluator Key"
                    },
                    "settings_values": {
                        "type": "object",
                        "title": "Settings Values"
                    }
                },
                "type": "object",
                "required": [
                    "app_id",
                    "name",
                    "evaluator_key",
                    "settings_values"
                ],
                "title": "NewEvaluatorConfig"
            },
            "NewHumanEvaluation": {
                "properties": {
                    "app_id": {
                        "type": "string",
                        "title": "App Id"
                    },
                    "variant_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Variant Ids"
                    },
                    "evaluation_type": {
                        "$ref": "#/components/schemas/EvaluationType"
                    },
                    "inputs": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Inputs"
                    },
                    "testset_id": {
                        "type": "string",
                        "title": "Testset Id"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    }
                },
                "type": "object",
                "required": [
                    "app_id",
                    "variant_ids",
                    "evaluation_type",
                    "inputs",
                    "testset_id",
                    "status"
                ],
                "title": "NewHumanEvaluation"
            },
            "NewTestset": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "csvdata": {
                        "items": {
                            "additionalProperties": {
                                "type": "string"
                            },
                            "type": "object"
                        },
                        "type": "array",
                        "title": "Csvdata"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "csvdata"
                ],
                "title": "NewTestset"
            },
            "Organization": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "owner": {
                        "type": "string",
                        "title": "Owner"
                    },
                    "members": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Members"
                    },
                    "invitations": {
                        "items": {},
                        "type": "array",
                        "title": "Invitations"
                    },
                    "is_paying": {
                        "type": "boolean",
                        "title": "Is Paying"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "owner"
                ],
                "title": "Organization"
            },
            "OrganizationOutput": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "title": "OrganizationOutput"
            },
            "OrganizationUpdate": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "title": "OrganizationUpdate"
            },
            "Permission": {
                "type": "string",
                "enum": [
                    "read_system",
                    "view_application",
                    "edit_application",
                    "create_application",
                    "delete_application",
                    "create_app_variant",
                    "delete_app_variant",
                    "modify_variant_configurations",
                    "delete_application_variant",
                    "view_app_environment_deployment",
                    "edit_app_environment_deployment",
                    "create_app_environment_deployment",
                    "view_testset",
                    "edit_testset",
                    "create_testset",
                    "delete_testset",
                    "view_evaluation",
                    "run_evaluations",
                    "edit_evaluation",
                    "create_evaluation",
                    "delete_evaluation",
                    "deploy_application",
                    "view_workspace",
                    "edit_workspace",
                    "create_workspace",
                    "delete_workspace",
                    "modify_user_roles",
                    "add_new_user_to_workspace",
                    "edit_organization",
                    "delete_organization",
                    "add_new_user_to_organization"
                ],
                "title": "Permission",
                "description": "An enumeration."
            },
            "ReseendInviteRequest": {
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "Email"
                    }
                },
                "type": "object",
                "required": [
                    "email"
                ],
                "title": "ReseendInviteRequest"
            },
            "RestartAppContainer": {
                "properties": {
                    "variant_id": {
                        "type": "string",
                        "title": "Variant Id"
                    }
                },
                "type": "object",
                "required": [
                    "variant_id"
                ],
                "title": "RestartAppContainer"
            },
            "Result": {
                "properties": {
                    "type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "value": {
                        "title": "Value"
                    },
                    "error": {
                        "$ref": "#/components/schemas/Error"
                    }
                },
                "type": "object",
                "required": [
                    "type"
                ],
                "title": "Result"
            },
            "SaveConfigPayload": {
                "properties": {
                    "base_id": {
                        "type": "string",
                        "title": "Base Id"
                    },
                    "config_name": {
                        "type": "string",
                        "title": "Config Name"
                    },
                    "parameters": {
                        "type": "object",
                        "title": "Parameters"
                    },
                    "overwrite": {
                        "type": "boolean",
                        "title": "Overwrite"
                    }
                },
                "type": "object",
                "required": [
                    "base_id",
                    "config_name",
                    "parameters",
                    "overwrite"
                ],
                "title": "SaveConfigPayload"
            },
            "SimpleEvaluationOutput": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "variant_ids": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array",
                        "title": "Variant Ids"
                    },
                    "app_id": {
                        "type": "string",
                        "title": "App Id"
                    },
                    "status": {
                        "type": "string",
                        "title": "Status"
                    },
                    "evaluation_type": {
                        "$ref": "#/components/schemas/EvaluationType"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "variant_ids",
                    "app_id",
                    "status",
                    "evaluation_type"
                ],
                "title": "SimpleEvaluationOutput"
            },
            "Span": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "parent_span_id": {
                        "type": "string",
                        "title": "Parent Span Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "variant": {
                        "$ref": "#/components/schemas/SpanVariant"
                    },
                    "environment": {
                        "type": "string",
                        "title": "Environment"
                    },
                    "spankind": {
                        "$ref": "#/components/schemas/SpanKind"
                    },
                    "status": {
                        "$ref": "#/components/schemas/SpanStatusCode"
                    },
                    "metadata": {
                        "type": "object",
                        "title": "Metadata"
                    },
                    "trace_id": {
                        "type": "string",
                        "title": "Trace Id"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "content": {
                        "type": "object",
                        "title": "Content"
                    },
                    "children": {
                        "items": {
                            "$ref": "#/components/schemas/Span"
                        },
                        "type": "array",
                        "title": "Children"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "variant",
                    "spankind",
                    "status",
                    "metadata",
                    "content"
                ],
                "title": "Span"
            },
            "SpanDetail": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "parent_span_id": {
                        "type": "string",
                        "title": "Parent Span Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "variant": {
                        "$ref": "#/components/schemas/SpanVariant"
                    },
                    "environment": {
                        "type": "string",
                        "title": "Environment"
                    },
                    "spankind": {
                        "$ref": "#/components/schemas/SpanKind"
                    },
                    "status": {
                        "$ref": "#/components/schemas/SpanStatusCode"
                    },
                    "metadata": {
                        "type": "object",
                        "title": "Metadata"
                    },
                    "trace_id": {
                        "type": "string",
                        "title": "Trace Id"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "content": {
                        "type": "object",
                        "title": "Content"
                    },
                    "children": {
                        "items": {
                            "$ref": "#/components/schemas/Span"
                        },
                        "type": "array",
                        "title": "Children"
                    },
                    "config": {
                        "type": "object",
                        "title": "Config"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "variant",
                    "spankind",
                    "status",
                    "metadata",
                    "content"
                ],
                "title": "SpanDetail"
            },
            "SpanKind": {
                "enum": [
                    "TOOL",
                    "CHAIN",
                    "LLM",
                    "WORKFLOW",
                    "RETRIEVER",
                    "EMBEDDING",
                    "AGENT",
                    "UNKNOWN"
                ],
                "title": "SpanKind",
                "description": "An enumeration."
            },
            "SpanStatusCode": {
                "enum": [
                    "UNSET",
                    "OK",
                    "ERROR"
                ],
                "title": "SpanStatusCode",
                "description": "An enumeration."
            },
            "SpanVariant": {
                "properties": {
                    "variant_id": {
                        "type": "string",
                        "title": "Variant Id"
                    },
                    "variant_name": {
                        "type": "string",
                        "title": "Variant Name"
                    },
                    "revision": {
                        "type": "integer",
                        "title": "Revision"
                    }
                },
                "type": "object",
                "title": "SpanVariant"
            },
            "Template": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "image": {
                        "$ref": "#/components/schemas/TemplateImageInfo"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "image"
                ],
                "title": "Template"
            },
            "TemplateImageInfo": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "size": {
                        "type": "integer",
                        "title": "Size"
                    },
                    "digest": {
                        "type": "string",
                        "title": "Digest"
                    },
                    "title": {
                        "type": "string",
                        "title": "Title"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "last_pushed": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Last Pushed"
                    },
                    "repo_name": {
                        "type": "string",
                        "title": "Repo Name"
                    },
                    "template_uri": {
                        "type": "string",
                        "title": "Template Uri"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "title",
                    "description"
                ],
                "title": "TemplateImageInfo"
            },
            "TestSetOutputResponse": {
                "properties": {
                    "_id": {
                        "type": "string",
                        "title": " Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "_id",
                    "name",
                    "created_at"
                ],
                "title": "TestSetOutputResponse"
            },
            "TestSetSimpleResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "created_at": {
                        "type": "string",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "created_at"
                ],
                "title": "TestSetSimpleResponse"
            },
            "TraceDetail": {
                "properties": {
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "parent_span_id": {
                        "type": "string",
                        "title": "Parent Span Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "variant": {
                        "$ref": "#/components/schemas/SpanVariant"
                    },
                    "environment": {
                        "type": "string",
                        "title": "Environment"
                    },
                    "spankind": {
                        "$ref": "#/components/schemas/SpanKind"
                    },
                    "status": {
                        "$ref": "#/components/schemas/SpanStatusCode"
                    },
                    "metadata": {
                        "type": "object",
                        "title": "Metadata"
                    },
                    "trace_id": {
                        "type": "string",
                        "title": "Trace Id"
                    },
                    "user_id": {
                        "type": "string",
                        "title": "User Id"
                    },
                    "content": {
                        "type": "object",
                        "title": "Content"
                    },
                    "children": {
                        "items": {
                            "$ref": "#/components/schemas/Span"
                        },
                        "type": "array",
                        "title": "Children"
                    },
                    "config": {
                        "type": "object",
                        "title": "Config"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "created_at",
                    "variant",
                    "spankind",
                    "status",
                    "metadata",
                    "content",
                    "config"
                ],
                "title": "TraceDetail"
            },
            "URI": {
                "properties": {
                    "uri": {
                        "type": "string",
                        "title": "Uri"
                    }
                },
                "type": "object",
                "required": [
                    "uri"
                ],
                "title": "URI"
            },
            "UpdateEvaluatorConfig": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "evaluator_key": {
                        "type": "string",
                        "title": "Evaluator Key"
                    },
                    "settings_values": {
                        "type": "object",
                        "title": "Settings Values"
                    }
                },
                "type": "object",
                "title": "UpdateEvaluatorConfig"
            },
            "UpdateVariantParameterPayload": {
                "properties": {
                    "parameters": {
                        "type": "object",
                        "title": "Parameters"
                    }
                },
                "type": "object",
                "required": [
                    "parameters"
                ],
                "title": "UpdateVariantParameterPayload"
            },
            "UpdateWorkspace": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    }
                },
                "type": "object",
                "title": "UpdateWorkspace"
            },
            "UserRole": {
                "properties": {
                    "email": {
                        "type": "string",
                        "title": "Email"
                    },
                    "organization_id": {
                        "type": "string",
                        "title": "Organization Id"
                    },
                    "role": {
                        "$ref": "#/components/schemas/WorkspaceRole"
                    }
                },
                "type": "object",
                "required": [
                    "email",
                    "organization_id"
                ],
                "title": "UserRole"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "VariantAction": {
                "properties": {
                    "action": {
                        "$ref": "#/components/schemas/VariantActionEnum"
                    }
                },
                "type": "object",
                "required": [
                    "action"
                ],
                "title": "VariantAction"
            },
            "VariantActionEnum": {
                "type": "string",
                "enum": [
                    "START",
                    "STOP"
                ],
                "title": "VariantActionEnum",
                "description": "An enumeration."
            },
            "WithPagination": {
                "properties": {
                    "data": {
                        "items": {},
                        "type": "array",
                        "title": "Data"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    },
                    "page": {
                        "type": "integer",
                        "title": "Page"
                    },
                    "pageSize": {
                        "type": "integer",
                        "title": "Pagesize"
                    }
                },
                "type": "object",
                "required": [
                    "data",
                    "total",
                    "page",
                    "pageSize"
                ],
                "title": "WithPagination"
            },
            "WorkspaceMemberResponse": {
                "properties": {
                    "user": {
                        "type": "object",
                        "title": "User"
                    },
                    "roles": {
                        "items": {
                            "$ref": "#/components/schemas/WorkspacePermission"
                        },
                        "type": "array",
                        "title": "Roles"
                    }
                },
                "type": "object",
                "required": [
                    "user",
                    "roles"
                ],
                "title": "WorkspaceMemberResponse"
            },
            "WorkspacePermission": {
                "properties": {
                    "role_name": {
                        "$ref": "#/components/schemas/WorkspaceRole"
                    },
                    "role_description": {
                        "type": "string",
                        "title": "Role Description"
                    },
                    "permissions": {
                        "items": {
                            "$ref": "#/components/schemas/Permission"
                        },
                        "type": "array"
                    }
                },
                "type": "object",
                "required": [
                    "role_name"
                ],
                "title": "WorkspacePermission"
            },
            "WorkspaceResponse": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At",
                        "default": "2024-05-15T13:56:52.061787"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At",
                        "default": "2024-05-15T13:56:52.061801"
                    },
                    "id": {
                        "type": "string",
                        "title": "Id"
                    },
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "description": {
                        "type": "string",
                        "title": "Description"
                    },
                    "type": {
                        "type": "string",
                        "title": "Type"
                    },
                    "organization": {
                        "type": "string",
                        "title": "Organization"
                    },
                    "members": {
                        "items": {
                            "$ref": "#/components/schemas/WorkspaceMemberResponse"
                        },
                        "type": "array",
                        "title": "Members"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "organization"
                ],
                "title": "WorkspaceResponse"
            },
            "WorkspaceRole": {
                "type": "string",
                "enum": [
                    "owner",
                    "viewer",
                    "editor",
                    "evaluator",
                    "workspace_admin",
                    "deployment_manager"
                ],
                "title": "WorkspaceRole",
                "description": "An enumeration."
            },
            "WorkspaceRoleResponse": {
                "properties": {
                    "role_name": {
                        "$ref": "#/components/schemas/WorkspaceRole"
                    },
                    "role_description": {
                        "type": "string",
                        "title": "Role Description"
                    }
                },
                "type": "object",
                "required": [
                    "role_name"
                ],
                "title": "WorkspaceRoleResponse"
            }
        },
        "securitySchemes": {
            "APIKeyHeader": {
                "type": "apiKey",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Variants"
        },
        {
            "name": "Evaluations"
        },
        {
            "name": "Evaluators"
        },
        {
            "name": "Apps"
        },
        {
            "name": "Human-Evaluations"
        },
        {
            "name": "Testsets"
        },
        {
            "name": "Containers"
        },
        {
            "name": "Environments"
        },
        {
            "name": "Observability"
        },
        {
            "name": "Organizations"
        },
        {
            "name": "Bases"
        },
        {
            "name": "Configs"
        }
    ],
    "security": [
        {
            "APIKeyHeader": []
        }
    ]
}
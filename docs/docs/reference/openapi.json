{
  "openapi": "3.1.0",
  "info": {
    "title": "Agenta Backend",
    "version": "0.1.0",
    "description": "Agenta Backend API",
    "contact": {
      "name": "Agenta",
      "url": "https://agenta.ai",
      "email": "team@agenta.ai"
    }
  },
  "servers": [
    {
      "url": "https://cloud.agenta.ai/api",
      "description": "Agenta Cloud"
    }
  ],
  "paths": {
    "/admin/accounts": {
      "post": {
        "tags": ["Admin"],
        "summary": "Create Accounts",
        "operationId": "create_accounts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EntitiesRequestModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScopesResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/account": {
      "post": {
        "tags": ["Admin"],
        "summary": "Create Account",
        "operationId": "create_account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/AccountRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Account"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccountResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/own": {
      "get": {
        "summary": "Get User Organization",
        "operationId": "get_own_org",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationOutput"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}": {
      "get": {
        "tags": ["Organization"],
        "summary": "Fetch Organization Details",
        "description": "Return the details of the organization.",
        "operationId": "fetch_organization_details",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Org Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationDetails"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Organization",
        "operationId": "update_organization",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Org Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrganizationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/workspaces": {
      "post": {
        "summary": "Create Workspace",
        "operationId": "create_workspace",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Org Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWorkspace"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/workspaces/{workspace_id}": {
      "put": {
        "summary": "Update Workspace",
        "operationId": "update_workspace",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Org Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWorkspace"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkspaceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/permissions": {
      "get": {
        "summary": "Get All Workspace Permissions",
        "description": "Get all workspace permissions.\n\nReturns a list of all available workspace permissions.\n\nReturns:\n    List[Permission]: A list of Permission objects representing the available workspace permissions.\n\nRaises:\n    HTTPException: If there is an error retrieving the workspace permissions.",
        "operationId": "get_all_workspace_permissions",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Permission"
                  },
                  "type": "array",
                  "title": "Response Get All Workspace Permissions"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspace_id}/roles": {
      "post": {
        "summary": "Assign Role To User",
        "description": "Assigns a role to a user in a workspace.\n\nArgs:\n    payload (UserRole): The payload containing the organization id, user email, and role to assign.\n    workspace_id (str): The ID of the workspace.\n    request (Request): The FastAPI request object.\n\nReturns:\n    bool: True if the role was successfully assigned, False otherwise.\n\nRaises:\n    HTTPException: If the user does not have permission to perform this action.\n    HTTPException: If there is an error assigning the role to the user.",
        "operationId": "assign_role_to_user",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserRole"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Unassign Role From User",
        "description": "Delete a role assignment from a user in a workspace.\n\nArgs:\n    workspace_id (str): The ID of the workspace.\n    email (str): The email of the user to remove the role from.\n    organization_id (str): The ID of the organization.\n    role (str): The role to remove from the user.\n    request (Request): The FastAPI request object.\n\nReturns:\n    bool: True if the role assignment was successfully deleted.\n\nRaises:\n    HTTPException: If there is an error in the request or the user does not have permission to perform the action.\n    HTTPException: If there is an error in updating the user's roles.",
        "operationId": "unassign_role_from_user",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Org Id"
            }
          },
          {
            "name": "role",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/evaluations/by_resource": {
      "get": {
        "tags": ["Evaluations"],
        "summary": "Fetch Evaluation Ids",
        "description": "Fetches evaluation ids for a given resource type and id.\n\nArguments:\n    app_id (str): The ID of the app for which to fetch evaluations.\n    resource_type (str): The type of resource for which to fetch evaluations.\n    resource_ids List[ObjectId]: The IDs of resource for which to fetch evaluations.\n\nRaises:\n    HTTPException: If the resource_type is invalid or access is denied.\n\nReturns:\n    List[str]: A list of evaluation ids.",
        "operationId": "fetch_evaluation_ids_evaluations_by_resource_get",
        "parameters": [
          {
            "name": "resource_type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Resource Type"
            }
          },
          {
            "name": "resource_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "title": "Resource Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Fetch Evaluation Ids Evaluations By Resource Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/evaluations": {
      "post": {
        "tags": ["Evaluations"],
        "summary": "Create Evaluation",
        "description": "Creates a new comparison table document\nRaises:\n    HTTPException: _description_\nReturns:\n    _description_",
        "operationId": "create_evaluation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewEvaluation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Evaluation"
                  },
                  "title": "Response Create Evaluation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Evaluations"],
        "summary": "Fetch List Evaluations",
        "description": "Fetches a list of evaluations, optionally filtered by an app ID.\n\nArgs:\n    app_id (Optional[str]): An optional app ID to filter the evaluations.\n\nReturns:\n    List[Evaluation]: A list of evaluations.",
        "operationId": "fetch_list_evaluations_evaluations_get",
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Evaluation"
                  },
                  "title": "Response Fetch List Evaluations Evaluations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Evaluations"],
        "summary": "Delete Evaluations",
        "description": "Delete specific comparison tables based on their unique IDs.\n\nArgs:\ndelete_evaluations (List[str]): The unique identifiers of the comparison tables to delete.\n\nReturns:\nA list of the deleted comparison tables' IDs.",
        "operationId": "delete_evaluations",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteEvaluation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Delete Evaluations"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/evaluations/{evaluation_id}/status": {
      "get": {
        "tags": ["Evaluations"],
        "summary": "Fetch Evaluation Status",
        "description": "Fetches the status of the evaluation.\n\nArgs:\n    evaluation_id (str): the evaluation id\n    request (Request): the request object\n\nReturns:\n    (str): the evaluation status",
        "operationId": "fetch_evaluation_status",
        "parameters": [
          {
            "name": "evaluation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/evaluations/{evaluation_id}/results": {
      "get": {
        "tags": ["Evaluations"],
        "summary": "Fetch Evaluation Results",
        "description": "Fetches the results of the evaluation\n\nArgs:\n    evaluation_id (str): the evaluation id\n    request (Request): the request object\n\nReturns:\n    _type_: _description_",
        "operationId": "fetch_evaluation_results",
        "parameters": [
          {
            "name": "evaluation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/evaluations/{evaluation_id}/evaluation_scenarios": {
      "get": {
        "tags": ["Evaluations"],
        "summary": "Fetch Evaluation Scenarios",
        "description": "Fetches evaluation scenarios for a given evaluation ID.\n\nArguments:\n    evaluation_id (str): The ID of the evaluation for which to fetch scenarios.\n\nRaises:\n    HTTPException: If the evaluation is not found or access is denied.\n\nReturns:\n    List[EvaluationScenario]: A list of evaluation scenarios.",
        "operationId": "fetch_evaluation_scenarios",
        "parameters": [
          {
            "name": "evaluation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EvaluationScenario"
                  },
                  "title": "Response Fetch Evaluation Scenarios"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/evaluations/{evaluation_id}": {
      "get": {
        "tags": ["Evaluations"],
        "summary": "Fetch Evaluation",
        "description": "Fetches a single evaluation based on its ID.\n\nArgs:\n    evaluation_id (str): The ID of the evaluation to fetch.\n\nReturns:\n    Evaluation: The fetched evaluation.",
        "operationId": "fetch_evaluation",
        "parameters": [
          {
            "name": "evaluation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Evaluation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/evaluations/evaluation_scenarios/comparison-results": {
      "get": {
        "tags": ["Evaluations"],
        "summary": "Fetch Evaluation Scenarios Comparison Results",
        "description": "Fetches evaluation scenarios for a given evaluation ID.\n\nArguments:\n    evaluation_id (str): The ID of the evaluation for which to fetch scenarios.\n\nRaises:\n    HTTPException: If the evaluation is not found or access is denied.\n\nReturns:\n    List[EvaluationScenario]: A list of evaluation scenarios.",
        "operationId": "fetch_evaluation_scenarios_comparison_results",
        "parameters": [
          {
            "name": "evaluations_ids",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluations Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Fetch Evaluation Scenarios Evaluations Evaluation Scenarios Comparison Results Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/human-evaluations": {
      "post": {
        "tags": ["Human-Evaluations"],
        "summary": "Create Human Evaluation",
        "description": "Creates a new comparison table document\nRaises:\n    HTTPException: _description_\nReturns:\n    _description_",
        "operationId": "create_human_evaluation",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewHumanEvaluation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleEvaluationOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Human-Evaluations"],
        "summary": "Fetch List Human Evaluations",
        "description": "Fetches a list of evaluations, optionally filtered by an app ID.\n\nArgs:\n    app_id (Optional[str]): An optional app ID to filter the evaluations.\n\nReturns:\n    List[HumanEvaluation]: A list of evaluations.",
        "operationId": "fetch_list_human_evaluations_human_evaluations_get",
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HumanEvaluation"
                  },
                  "title": "Response Fetch List Human Evaluations Human Evaluations Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Human-Evaluations"],
        "summary": "Delete Evaluations",
        "description": "Delete specific comparison tables based on their unique IDs.\n\nArgs:\n    payload (List[str]): The unique identifiers of the comparison tables to delete.\n\nReturns:\nA list of the deleted comparison tables' IDs.",
        "operationId": "delete_evaluations_human_evaluations_delete",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteEvaluation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Delete Evaluations Human Evaluations Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/human-evaluations/{evaluation_id}": {
      "get": {
        "tags": ["Human-Evaluations"],
        "summary": "Fetch Human Evaluation",
        "description": "Fetches a single evaluation based on its ID.\n\nArgs:\n    evaluation_id (str): The ID of the evaluation to fetch.\n\nReturns:\n    HumanEvaluation: The fetched evaluation.",
        "operationId": "fetch_human_evaluation_human_evaluations__evaluation_id__get",
        "parameters": [
          {
            "name": "evaluation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HumanEvaluation"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Human-Evaluations"],
        "summary": "Update Human Evaluation",
        "description": "Updates an evaluation's status.\n\nRaises:\n    HTTPException: If the columns in the test set do not match with the inputs in the variant.\n\nReturns:\n    None: A 204 No Content status code, indicating that the update was successful.",
        "operationId": "update_human_evaluation",
        "parameters": [
          {
            "name": "evaluation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HumanEvaluationUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/human-evaluations/{evaluation_id}/evaluation_scenarios": {
      "get": {
        "tags": ["Human-Evaluations"],
        "summary": "Fetch Human Evaluation Scenarios",
        "description": "Fetches evaluation scenarios for a given evaluation ID.\n\nArguments:\n    evaluation_id (str): The ID of the evaluation for which to fetch scenarios.\n\nRaises:\n    HTTPException: If the evaluation is not found or access is denied.\n\nReturns:\n    List[EvaluationScenario]: A list of evaluation scenarios.",
        "operationId": "fetch_human_evaluation_scenarios",
        "parameters": [
          {
            "name": "evaluation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HumanEvaluationScenario"
                  },
                  "title": "Response Fetch Human Evaluation Scenarios"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/human-evaluations/{evaluation_id}/evaluation_scenario/{evaluation_scenario_id}/{evaluation_type}": {
      "put": {
        "tags": ["Human-Evaluations"],
        "summary": "Update Evaluation Scenario Router",
        "description": "Updates an evaluation scenario's vote or score based on its type.\n\nRaises:\n    HTTPException: If update fails or unauthorized.\n\nReturns:\n    None: 204 No Content status code upon successful update.",
        "operationId": "update_evaluation_scenario_router_human_evaluations__evaluation_id__evaluation_scenario__evaluation_scenario_id___evaluation_type__put",
        "parameters": [
          {
            "name": "evaluation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluation Id"
            }
          },
          {
            "name": "evaluation_scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluation Scenario Id"
            }
          },
          {
            "name": "evaluation_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/EvaluationType"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HumanEvaluationScenarioUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/human-evaluations/evaluation_scenario/{evaluation_scenario_id}/score": {
      "get": {
        "tags": ["Human-Evaluations"],
        "summary": "Get Evaluation Scenario Score Router",
        "description": "Fetch the score of a specific evaluation scenario.\n\nArgs:\n    evaluation_scenario_id: The ID of the evaluation scenario to fetch.\n\nReturns:\n    Dictionary containing the scenario ID and its score.",
        "operationId": "get_evaluation_scenario_score_router_human_evaluations_evaluation_scenario__evaluation_scenario_id__score_get",
        "parameters": [
          {
            "name": "evaluation_scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluation Scenario Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "title": "Response Get Evaluation Scenario Score Router Human Evaluations Evaluation Scenario  Evaluation Scenario Id  Score Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Human-Evaluations"],
        "summary": "Update Evaluation Scenario Score Router",
        "description": "Updates the score of an evaluation scenario.\n\nRaises:\n    HTTPException: Server error if the evaluation update fails.\n\nReturns:\n    None: 204 No Content status code upon successful update.",
        "operationId": "update_evaluation_scenario_score_router_human_evaluations_evaluation_scenario__evaluation_scenario_id__score_put",
        "parameters": [
          {
            "name": "evaluation_scenario_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluation Scenario Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluationScenarioScoreUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/human-evaluations/{evaluation_id}/results": {
      "get": {
        "tags": ["Human-Evaluations"],
        "summary": "Fetch Results",
        "description": "Fetch all the results for one the comparison table\n\nArguments:\n    evaluation_id -- _description_\n\nReturns:\n    _description_",
        "operationId": "fetch_results",
        "parameters": [
          {
            "name": "evaluation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/billing/stripe/events/": {
      "post": {
        "tags": ["Billing"],
        "summary": "Handle Events",
        "operationId": "handle_events",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/billing/stripe/portals/": {
      "post": {
        "tags": ["Billing"],
        "summary": "Create Portal User Route",
        "operationId": "create_portal",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/billing/stripe/checkouts/": {
      "post": {
        "tags": ["Billing"],
        "summary": "Create Checkout User Route",
        "operationId": "create_checkout",
        "parameters": [
          {
            "name": "plan",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Plan"
            }
          },
          {
            "name": "success_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Success Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/billing/plans": {
      "get": {
        "tags": ["Billing"],
        "summary": "Fetch Plan User Route",
        "operationId": "fetch_plans",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/billing/plans/switch": {
      "post": {
        "tags": ["Billing"],
        "summary": "Switch Plans User Route",
        "operationId": "switch_plans",
        "parameters": [
          {
            "name": "plan",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Plan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/billing/subscription": {
      "get": {
        "tags": ["Billing"],
        "summary": "Fetch Subscription User Route",
        "operationId": "fetch_subscription",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/billing/subscription/cancel": {
      "post": {
        "tags": ["Billing"],
        "summary": "Cancel Subscription User Route",
        "operationId": "cancel_plan",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/billing/usage": {
      "get": {
        "tags": ["Billing"],
        "summary": "Fetch Usage User Route",
        "operationId": "fetch_usage",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/admin/billing/stripe/portals/": {
      "post": {
        "tags": ["Admin", "Billing"],
        "summary": "Create Portal Admin Route",
        "operationId": "admin_create_portal",
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/billing/stripe/checkouts/": {
      "post": {
        "tags": ["Admin", "Billing"],
        "summary": "Create Checkout Admin Route",
        "operationId": "admin_create_checkout",
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Organization Id"
            }
          },
          {
            "name": "plan",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Plan"
            }
          },
          {
            "name": "success_url",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Success Url"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/billing/plans/switch": {
      "post": {
        "tags": ["Admin", "Billing"],
        "summary": "Switch Plans Admin Route",
        "operationId": "admin_switch_plans",
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Organization Id"
            }
          },
          {
            "name": "plan",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Plan"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/billing/subscription/cancel": {
      "post": {
        "tags": ["Admin", "Billing"],
        "summary": "Cancel Subscription Admin Route",
        "operationId": "admin_cancel_subscription",
        "parameters": [
          {
            "name": "organization_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Organization Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/admin/billing/usage/report": {
      "post": {
        "tags": ["Admin", "Billing"],
        "summary": "Report Usage",
        "operationId": "admin_report_usage",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/permissions/verify": {
      "get": {
        "tags": ["Access Control"],
        "summary": "Verify Permissions",
        "operationId": "verify_permissions",
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Action"
            }
          },
          {
            "name": "scope_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Scope Type"
            }
          },
          {
            "name": "scope_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Scope Id"
            }
          },
          {
            "name": "resource_type",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource Type"
            }
          },
          {
            "name": "resource_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Resource Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/projects": {
      "get": {
        "tags": ["Scopes"],
        "summary": "Get Projects",
        "operationId": "get_projects",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ProjectsResponse"
                  },
                  "type": "array",
                  "title": "Response Get Projects"
                }
              }
            }
          }
        }
      }
    },
    "/profile": {
      "get": {
        "summary": "User Profile",
        "operationId": "fetch_user_profile",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/profile/reset-password": {
      "post": {
        "summary": "Reset User Password",
        "operationId": "reset_user_password",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{app_id}/variants": {
      "get": {
        "tags": ["Apps"],
        "summary": "List App Variants",
        "description": "Retrieve a list of app variants for a given app ID.\n\nArgs:\n    app_id (str): The ID of the app to retrieve variants for.\n\nReturns:\n    List[AppVariantResponse]: A list of app variants for the given app ID.",
        "operationId": "list_app_variants",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppVariantResponse_"
                  },
                  "title": "Response List App Variants"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/apps/get_variant_by_env": {
      "get": {
        "tags": ["Apps"],
        "summary": "Get Variant By Env",
        "description": "Retrieve the app variant based on the provided app_id and environment.\n\nArgs:\n    app_id (str): The ID of the app to retrieve the variant for.\n    environment (str): The environment of the app variant to retrieve.\n\nRaises:\n    HTTPException: If the app variant is not found (status_code=500), or if a ValueError is raised (status_code=400), or if any other exception is raised (status_code=500).\n\nReturns:\n    AppVariantResponse: The retrieved app variant.",
        "operationId": "get_variant_by_env",
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          },
          {
            "name": "environment",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Environment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppVariantResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/apps": {
      "post": {
        "tags": ["Apps"],
        "summary": "Create App",
        "description": "Create a new app for a user or organization.\n\nArgs:\n    payload (CreateApp): The payload containing the app name and organization ID (optional).\n\nReturns:\n    CreateAppOutput: The output containing the newly created app's ID and name.\n\nRaises:\n    HTTPException: If there is an error creating the app or the user does not have permission to access the app.",
        "operationId": "create_app",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApp_"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAppOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Apps"],
        "summary": "List Apps",
        "description": "Retrieve a list of apps filtered by app_name.\n\nArgs:\n    app_name (Optional[str]): The name of the app to filter by.\n\nReturns:\n    List[App]: A list of apps filtered by app_name.\n\nRaises:\n    HTTPException: If there was an error retrieving the list of apps.",
        "operationId": "list_apps",
        "parameters": [
          {
            "name": "app_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "App Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/App"
                  },
                  "title": "Response List Apps"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{app_id}": {
      "patch": {
        "tags": ["Apps"],
        "summary": "Update App",
        "description": "Update an app for a user or organization.\n\nArgs:\n    app_id (str): The ID of the app.\n    payload (UpdateApp): The payload containing the app name.\n\nReturns:\n    UpdateAppOutput: The output containing the newly created app's ID and name.\n\nRaises:\n    HTTPException: If there is an error creating the app or the user does not have permission to access the app.",
        "operationId": "update_app",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateApp"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateAppOutput"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Apps"],
        "summary": "Remove App",
        "description": "Remove app, all its variant.\n\nArguments:\n    app -- App to remove",
        "operationId": "remove_app",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{app_id}/variant/from-service": {
      "post": {
        "tags": ["Apps"],
        "summary": "Add Variant From Url Route",
        "operationId": "add_variant_from_url",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddVariantFromURLPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{app_id}/variant/from-template": {
      "post": {
        "tags": ["Apps"],
        "summary": "Add Variant From Key Route",
        "operationId": "add_variant_from_key",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddVariantFromKeyPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{app_id}/environments": {
      "get": {
        "tags": ["Apps"],
        "summary": "List Environments",
        "description": "Retrieve a list of environments for a given app ID.\n\nArgs:\n    app_id (str): The ID of the app to retrieve environments for.\n\nReturns:\n    List[EnvironmentOutput]: A list of environment objects.",
        "operationId": "list_environments",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EnvironmentOutput_"
                  },
                  "title": "Response List Environments"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/apps/{app_id}/revisions/{environment_name}": {
      "get": {
        "tags": ["Apps"],
        "summary": "List App Environment Revisions",
        "operationId": "environment_revisions",
        "parameters": [
          {
            "name": "app_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          },
          {
            "name": "environment_name",
            "in": "path",
            "required": true,
            "schema": {
              "title": "Environment Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EnvironmentOutputExtended_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/variants/from-base": {
      "post": {
        "tags": ["Variants"],
        "summary": "Add Variant From Base And Config",
        "description": "Add a new variant based on an existing one.\nSame as POST /config\n\nArgs:\n    payload (AddVariantFromBasePayload): Payload containing base variant ID, new variant name, and parameters.\n\nRaises:\n    HTTPException: Raised if the variant could not be added or accessed.\n\nReturns:\n    Union[AppVariantResponse, Any]: New variant details or exception.",
        "operationId": "add_variant_from_base_and_config",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddVariantFromBasePayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/AppVariantResponse_"
                    },
                    {}
                  ],
                  "title": "Response Add Variant From Base And Config"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/variants/{variant_id}": {
      "delete": {
        "tags": ["Variants"],
        "summary": "Remove Variant",
        "description": "Mark a variant as hidden from the UI.\n\nArguments:\n    app_variant -- AppVariant to remove\n\nRaises:\n    HTTPException: If there is a problem removing the app variant",
        "operationId": "mark_variant_as_hidden",
        "parameters": [
          {
            "name": "variant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Variant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Variants"],
        "summary": "Get Variant",
        "operationId": "get_variant",
        "parameters": [
          {
            "name": "variant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Variant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppVariantResponse_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/variants/{variant_id}/parameters": {
      "put": {
        "tags": ["Variants"],
        "summary": "Update Variant Parameters",
        "description": "Updates the parameters for an app variant.\n\nArgs:\n    variant_id (str): The ID of the app variant to update.\n    payload (UpdateVariantParameterPayload): The payload containing the updated parameters.\n\nRaises:\n    HTTPException: If there is an error while trying to update the app variant.\n\nReturns:\n    JSONResponse: A JSON response containing the updated app variant parameters.",
        "operationId": "update_variant_parameters",
        "parameters": [
          {
            "name": "variant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Variant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVariantParameterPayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/variants/{variant_id}/service": {
      "put": {
        "tags": ["Variants"],
        "summary": "Update Variant Url",
        "description": "Updates the URL used in an app variant.\n\nArgs:\n    variant_id (str): The ID of the app variant to update.\n    url (str): The URL to update.\n\nRaises:\n    HTTPException: If an error occurs while trying to update the app variant.\n\nReturns:\n    JSONResponse: A JSON response indicating whether the update was successful or not.",
        "operationId": "update_variant_url",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateVariantURLPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/variants/{variant_id}/revisions": {
      "get": {
        "tags": ["Variants"],
        "summary": "Get Variant Revisions",
        "operationId": "get_variant_revisions",
        "parameters": [
          {
            "name": "variant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Variant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AppVariantRevision"
                  },
                  "title": "Response Get Variant Revisions"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/variants/{variant_id}/revisions/{revision_number}": {
      "get": {
        "tags": ["Variants"],
        "summary": "Get Variant Revision",
        "operationId": "get_variant_revision",
        "parameters": [
          {
            "name": "variant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Variant Id"
            }
          },
          {
            "name": "revision_number",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Revision Number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AppVariantRevision"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/variants/{variant_id}/revisions/{revision_id}": {
      "delete": {
        "tags": ["Variants"],
        "summary": "Remove Variant Revision",
        "description": "Mark a variant revision as hidden from the UI.\n\nArguments:\n    app_variant -- AppVariant to remove\n    revision_id -- Revision ID to remove\n\nRaises:\n    HTTPException: If there is a problem removing the app variant",
        "operationId": "mark_variant_revision_as_hidden",
        "parameters": [
          {
            "name": "variant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Variant Id"
            }
          },
          {
            "name": "revision_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Revision Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/variants/configs/add": {
      "post": {
        "tags": ["Variants"],
        "summary": "Configs Add",
        "operationId": "configs_add",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_configs_add"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/variants/configs/fetch": {
      "post": {
        "tags": ["Variants"],
        "summary": "Configs Fetch",
        "description": "Fetch configuration for a variant or environment.\n\nEither variant_ref OR environment_ref must be provided (if neither is provided,\na default environment_ref with slug=\"production\" will be used).\n\nFor each reference object (variant_ref, environment_ref, application_ref):\n- Provide either 'slug' or 'id' field\n- 'version' is optional and can be set to null\n- If 'id' is provided, it will be used directly to fetch the resource\n- Otherwise, 'slug' will be used along with application_ref\n\nReturns:\n    ConfigResponseModel: The configuration for the requested variant or environment.\n\nRaises:\n    HTTPException: If the configuration is not found.",
        "operationId": "configs_fetch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_configs_fetch"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/variants/configs/fork": {
      "post": {
        "tags": ["Variants"],
        "summary": "Configs Fork",
        "operationId": "configs_fork",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_configs_fork"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/variants/configs/commit": {
      "post": {
        "tags": ["Variants"],
        "summary": "Configs Commit",
        "operationId": "configs_commit",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConfigRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/variants/configs/deploy": {
      "post": {
        "tags": ["Variants"],
        "summary": "Configs Deploy",
        "operationId": "configs_deploy",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_configs_deploy"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConfigResponseModel"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/variants/configs/delete": {
      "post": {
        "tags": ["Variants"],
        "summary": "Configs Delete",
        "operationId": "configs_delete",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_configs_delete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "title": "Response Configs Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/variants/configs/list": {
      "post": {
        "tags": ["Variants"],
        "summary": "Configs List",
        "operationId": "configs_list",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReferenceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ConfigResponseModel"
                  },
                  "type": "array",
                  "title": "Response Configs List"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/variants/configs/history": {
      "post": {
        "tags": ["Variants"],
        "summary": "Configs History",
        "operationId": "configs_history",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_configs_history"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ConfigResponseModel"
                  },
                  "type": "array",
                  "title": "Response Configs History"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/containers/templates": {
      "get": {
        "tags": ["Containers"],
        "summary": "Container Templates",
        "description": "Returns a list of templates available for creating new containers.",
        "operationId": "container_templates",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/evaluators": {
      "get": {
        "tags": ["Evaluators"],
        "summary": "Get Evaluators Endpoint",
        "description": "Endpoint to fetch a list of evaluators.\n\nReturns:\n    List[Evaluator]: A list of evaluator objects.",
        "operationId": "get_evaluators_endpoint_evaluators_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/oss__src__models__api__evaluation_model__Evaluator"
                  },
                  "type": "array",
                  "title": "Response Get Evaluators Endpoint Evaluators Get"
                }
              }
            }
          }
        }
      }
    },
    "/evaluators/map": {
      "post": {
        "tags": ["Evaluators"],
        "summary": "Evaluator Data Map",
        "description": "Endpoint to map the experiment data tree to evaluator interface.\n\nArgs:\n    request (Request): The request object.\n    payload (EvaluatorMappingInputInterface): The payload containing the request data.\n\nReturns:\n    EvaluatorMappingOutputInterface: the evaluator mapping output object",
        "operationId": "evaluator_data_map_evaluators_map_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluatorMappingInputInterface"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluatorMappingOutputInterface"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/evaluators/{evaluator_key}/run": {
      "post": {
        "tags": ["Evaluators"],
        "summary": "Evaluator Run",
        "description": "Endpoint to evaluate LLM app run\n\nArgs:\n    request (Request): The request object.\n    evaluator_key (str): The key of the evaluator.\n    payload (EvaluatorInputInterface): The payload containing the request data.\n\nReturns:\n    result: EvaluatorOutputInterface object containing the outputs.",
        "operationId": "evaluator_run_evaluators__evaluator_key__run_post",
        "parameters": [
          {
            "name": "evaluator_key",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluator Key"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluatorInputInterface"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluatorOutputInterface"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/evaluators/configs": {
      "get": {
        "tags": ["Evaluators"],
        "summary": "Get Evaluator Configs",
        "description": "Endpoint to fetch evaluator configurations for a specific app.\n\nArgs:\n    app_id (str): The ID of the app.\n\nReturns:\n    List[EvaluatorConfigDB]: A list of evaluator configuration objects.",
        "operationId": "get_evaluator_configs_evaluators_configs_get",
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EvaluatorConfig"
                  },
                  "title": "Response Get Evaluator Configs Evaluators Configs Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Evaluators"],
        "summary": "Create New Evaluator Config",
        "description": "Endpoint to fetch evaluator configurations for a specific app.\n\nArgs:\n    app_id (str): The ID of the app.\n\nReturns:\n    EvaluatorConfigDB: Evaluator configuration api model.",
        "operationId": "create_new_evaluator_config_evaluators_configs_post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewEvaluatorConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluatorConfig"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/evaluators/configs/{evaluator_config_id}": {
      "get": {
        "tags": ["Evaluators"],
        "summary": "Get Evaluator Config",
        "description": "Endpoint to fetch evaluator configurations for a specific app.\n\nReturns:\n    List[EvaluatorConfigDB]: A list of evaluator configuration objects.",
        "operationId": "get_evaluator_config_evaluators_configs__evaluator_config_id__get",
        "parameters": [
          {
            "name": "evaluator_config_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluator Config Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluatorConfig"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Evaluators"],
        "summary": "Update Evaluator Config",
        "description": "Endpoint to update evaluator configurations for a specific app.\n\nReturns:\n    List[EvaluatorConfigDB]: A list of evaluator configuration objects.",
        "operationId": "update_evaluator_config_evaluators_configs__evaluator_config_id__put",
        "parameters": [
          {
            "name": "evaluator_config_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluator Config Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEvaluatorConfig"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluatorConfig"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Evaluators"],
        "summary": "Delete Evaluator Config",
        "description": "Endpoint to delete a specific evaluator configuration.\n\nArgs:\n    evaluator_config_id (str): The unique identifier of the evaluator configuration.\n\nReturns:\n    bool: True if deletion was successful, False otherwise.",
        "operationId": "delete_evaluator_config_evaluators_configs__evaluator_config_id__delete",
        "parameters": [
          {
            "name": "evaluator_config_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Evaluator Config Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Delete Evaluator Config Evaluators Configs  Evaluator Config Id  Delete"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/testsets/upload": {
      "post": {
        "tags": ["Testsets"],
        "summary": "Upload File",
        "description": "Uploads a CSV or JSON file and saves its data to Postgres.\n\nArgs:\nupload_type : Either a json or csv file.\n    file (UploadFile): The CSV or JSON file to upload.\n    testset_name (Optional): the name of the testset if provided.\n\nReturns:\n    dict: The result of the upload process.",
        "operationId": "upload_file",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestSetSimpleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/testsets/endpoint": {
      "post": {
        "tags": ["Testsets"],
        "summary": "Import Testset",
        "description": "Import JSON testset data from an endpoint and save it to Postgres.\n\nArgs:\n    endpoint (str): An endpoint URL to import data from.\n    testset_name (str): the name of the testset if provided.\n\nReturns:\n    dict: The result of the import process.",
        "operationId": "import_testset",
        "parameters": [
          {
            "name": "authorization",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Authorization"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_import_testset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestSetSimpleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/testsets": {
      "get": {
        "tags": ["Testsets"],
        "summary": "Get Testsets",
        "description": "Get all testsets.\n\nReturns:\n- A list of testset objects.\n\nRaises:\n- `HTTPException` with status code 404 if no testsets are found.",
        "operationId": "get_testsets",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/TestSetOutputResponse"
                  },
                  "type": "array",
                  "title": "Response Get Testsets"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Testsets"],
        "summary": "Create Testset",
        "description": "Create a testset with given name, save the testset to Postgres.\n\nArgs:\nname (str): name of the test set.\ntestset (Dict[str, str]): test set data.\n\nReturns:\nstr: The id of the test set created.",
        "operationId": "create_testset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTestset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestSetSimpleResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Testsets"],
        "summary": "Delete Testsets",
        "description": "Delete specific testsets based on their unique IDs.\n\nArgs:\ntestset_ids (List[str]): The unique identifiers of the testsets to delete.\n\nReturns:\nA list of the deleted testsets' IDs.",
        "operationId": "delete_testsets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteTestsets"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response Delete Testsets"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/testsets/{testset_id}": {
      "put": {
        "tags": ["Testsets"],
        "summary": "Update Testset",
        "description": "Update a testset with given id, update the testset in Postgres.\n\nArgs:\ntestset_id (str): id of the test set to be updated.\ncsvdata (NewTestset): New data to replace the old testset.\n\nReturns:\nstr: The id of the test set updated.",
        "operationId": "update_testset",
        "parameters": [
          {
            "name": "testset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Testset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewTestset"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Testsets"],
        "summary": "Get Single Testset",
        "description": "Fetch a specific testset in Postgres.\n\nArgs:\n    testset_id (str): The id of the testset to fetch.\n\nReturns:\n    The requested testset if found, else an HTTPException.",
        "operationId": "get_single_testset",
        "parameters": [
          {
            "name": "testset_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Testset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/environments/deploy": {
      "post": {
        "tags": ["Environments"],
        "summary": "Deploy To Environment",
        "description": "Deploys a given variant to an environment\n\nArgs:\n    environment_name: Name of the environment to deploy to.\n    variant_id: variant id to deploy.\n\nRaises:\n    HTTPException: If the deployment fails.",
        "operationId": "deploy_to_environment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeployToEnvironmentPayload"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/bases": {
      "get": {
        "tags": ["Bases"],
        "summary": "List Bases",
        "description": "Retrieve a list of bases filtered by app_id and base_name.\n\nArgs:\n    request (Request): The incoming request.\n    app_id (str): The ID of the app to filter by.\n    base_name (Optional[str], optional): The name of the base to filter by. Defaults to None.\n\nReturns:\n    List[BaseOutput]: A list of BaseOutput objects representing the filtered bases.\n\nRaises:\n    HTTPException: If there was an error retrieving the bases.",
        "operationId": "list_bases",
        "parameters": [
          {
            "name": "app_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "App Id"
            }
          },
          {
            "name": "base_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Base Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BaseOutput"
                  },
                  "title": "Response List Bases"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/configs": {
      "get": {
        "tags": ["Configs"],
        "summary": "Get Config",
        "operationId": "get_config",
        "parameters": [
          {
            "name": "base_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Base Id"
            }
          },
          {
            "name": "config_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Config Name"
            }
          },
          {
            "name": "environment_name",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Environment Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetConfigResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/configs/deployment/{deployment_revision_id}": {
      "get": {
        "tags": ["Configs"],
        "summary": "Get Config Deployment Revision",
        "operationId": "get_config_deployment_revision",
        "parameters": [
          {
            "name": "deployment_revision_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Deployment Revision Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/configs/deployment/{deployment_revision_id}/revert": {
      "post": {
        "tags": ["Configs"],
        "summary": "Revert Deployment Revision",
        "operationId": "revert_deployment_revision",
        "parameters": [
          {
            "name": "deployment_revision_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Deployment Revision Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/keys": {
      "get": {
        "tags": ["Api Keys"],
        "summary": "List Api Keys",
        "description": "List all API keys associated with the authenticated user.\n\nArgs:\n    request (Request): The incoming request object.\n\nReturns:\n    List[ListAPIKeysResponse]: A list of API Keys associated with the user.",
        "operationId": "list_api_keys",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ListAPIKeysResponse"
                  },
                  "type": "array",
                  "title": "Response List Api Keys"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Api Keys"],
        "summary": "Create Api Key",
        "description": "Creates an API key for a user.\n\nArgs:\n    request (Request): The request object containing the user ID in the request state.\n\nReturns:\n    str: The created API key.",
        "operationId": "create_api_key",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Create Api Key"
                }
              }
            }
          }
        }
      }
    },
    "/keys/{key_prefix}": {
      "delete": {
        "tags": ["Api Keys"],
        "summary": "Delete Api Key",
        "description": "Delete an API key with the given key prefix for the authenticated user.\n\nArgs:\n    key_prefix (str): The prefix of the API key to be deleted.\n    request (Request): The incoming request object.\n\nReturns:\n    dict: A dictionary containing a success message upon successful deletion.\n\nRaises:\n    HTTPException: If the API key is not found or does not belong to the user.",
        "operationId": "delete_api_key",
        "parameters": [
          {
            "name": "key_prefix",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Key Prefix"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": true,
                  "title": "Response Delete Api Key"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations": {
      "get": {
        "tags": ["Organization"],
        "summary": "List Organizations",
        "description": "Returns a list of organizations associated with the user's session.\n\nReturns:\n    list[Organization]: A list of organizations associated with the user's session.\n\nRaises:\n    HTTPException: If there is an error retrieving the organizations from the database.",
        "operationId": "list_organizations",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Organization"
                  },
                  "type": "array",
                  "title": "Response List Organizations"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/workspaces/{workspace_id}/invite": {
      "post": {
        "tags": ["Organization"],
        "summary": "Invite User To Organization",
        "description": "Assigns a role to a user in an organization.\n\nArgs:\n    organization_id (str): The ID of the organization.\n    payload (InviteRequest): The payload containing the organization id, user email, and role to assign.\n    workspace_id (str): The ID of the workspace.\n\nReturns:\n    bool: True if the role was successfully assigned, False otherwise.\n\nRaises:\n    HTTPException: If the user does not have permission to perform this action.\n    HTTPException: If there is an error assigning the role to the user.",
        "operationId": "invite_user_to_workspace",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Org Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/InviteRequest"
                },
                "title": "Payload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/workspaces/{workspace_id}/invite/resend": {
      "post": {
        "tags": ["Organization"],
        "summary": "Resend User Invitation To Organization",
        "description": "Resend an invitation to a user to an Organization.\n\nRaises:\n    HTTPException: _description_; status_code: 500\n    HTTPException: Invitation not found or has expired; status_code: 400\n    HTTPException: You already belong to this organization; status_code: 400\n\nReturns:\n    JSONResponse: Resent invitation to user; status_code: 200",
        "operationId": "resend_invitation",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Org Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResendInviteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organization_id}/workspaces/{workspace_id}/invite/accept": {
      "post": {
        "tags": ["Organization"],
        "summary": "Accept Organization Invitation",
        "description": "Accept an invitation to an organization.\n\nRaises:\n    HTTPException: _description_; status_code: 500\n    HTTPException: Invitation not found or has expired; status_code: 400\n    HTTPException: You already belong to this organization; status_code: 400\n\nReturns:\n    JSONResponse: Accepted invitation to workspace; status_code: 200",
        "operationId": "accept_invitation",
        "parameters": [
          {
            "name": "organization_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Org Id"
            }
          },
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Project Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InviteToken"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces": {
      "get": {
        "tags": ["Workspace"],
        "summary": "Get Workspace",
        "description": "Get workspace details.\n\nReturns details about the workspace associated with the user's session.\n\nReturns:\n    Workspace: The details of the workspace.\n\nRaises:\n    HTTPException: If the user does not have permission to perform this action.",
        "operationId": "get_workspace",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/Workspace"
                  },
                  "type": "array",
                  "title": "Response Get Workspace"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/roles": {
      "get": {
        "tags": ["Workspace"],
        "summary": "Get All Workspace Roles",
        "description": "Get all workspace roles.\n\nReturns a list of all available workspace roles.\n\nReturns:\n    List[WorkspaceRoleResponse]: A list of WorkspaceRole objects representing the available workspace roles.\n\nRaises:\n    HTTPException: If an error occurs while retrieving the workspace roles.",
        "operationId": "get_all_workspace_roles",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "type": "object"
                  },
                  "type": "array",
                  "title": "Response Get All Workspace Roles"
                }
              }
            }
          }
        }
      }
    },
    "/workspaces/{workspace_id}/users": {
      "delete": {
        "tags": ["Workspace"],
        "summary": "Remove User From Workspace",
        "description": "Remove a user from a workspace.\n\nArgs:\n    email (str): The email address of the user to be removed\n    workspace_id (str): The ID of the workspace.",
        "operationId": "remove_user_from_workspace",
        "parameters": [
          {
            "name": "workspace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Workspace Id"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/tracing/traces/": {
      "put": {
        "tags": ["Tracing"],
        "summary": "Edit Trace",
        "operationId": "edit_trace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OTelTracingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OTelLinksResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Tracing"],
        "summary": "Add Trace",
        "operationId": "add_trace",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OTelTracingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OTelLinksResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/tracing/traces/{trace_id}": {
      "get": {
        "tags": ["Tracing"],
        "summary": "Fetch Trace",
        "operationId": "fetch_trace",
        "parameters": [
          {
            "name": "trace_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Trace Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/oss__src__apis__fastapi__tracing__models__OTelTracingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Tracing"],
        "summary": "Remove Trace",
        "operationId": "remove_trace",
        "parameters": [
          {
            "name": "trace_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Trace Id"
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OTelLinksResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/tracing/spans/": {
      "post": {
        "tags": ["Tracing"],
        "summary": "Ingest Spans",
        "operationId": "ingest_spans",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OTelTracingRequest"
              }
            }
          }
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OTelLinksResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Tracing"],
        "summary": "Query Spans",
        "operationId": "query_spans",
        "parameters": [
          {
            "name": "focus",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Focus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Focus"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Format"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Format"
            }
          },
          {
            "name": "oldest",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Oldest"
            }
          },
          {
            "name": "newest",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Newest"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/oss__src__apis__fastapi__tracing__models__OTelTracingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/tracing/spans/ingest": {
      "post": {
        "tags": ["Tracing"],
        "summary": "Ingest Spans",
        "operationId": "ingest_spans_rpc",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OTelTracingRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OTelLinksResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/tracing/spans/query": {
      "post": {
        "tags": ["Tracing"],
        "summary": "Query Spans",
        "operationId": "query_spans_rpc",
        "parameters": [
          {
            "name": "focus",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Focus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Focus"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Format"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Format"
            }
          },
          {
            "name": "oldest",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Oldest"
            }
          },
          {
            "name": "newest",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Newest"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Limit"
            }
          },
          {
            "name": "filter",
            "in": "query",
            "required": false,
            "schema": {
              "title": "Filter"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/oss__src__apis__fastapi__tracing__models__OTelTracingResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/evaluators/": {
      "get": {
        "tags": ["Evals"],
        "summary": "Query Evaluators",
        "operationId": "list_evaluators",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/EvaluatorQueryRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Evaluator Query Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluatorsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Evals"],
        "summary": "Create Evaluator",
        "operationId": "create_evaluator",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluatorRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluatorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/evaluators/{evaluator_id}": {
      "get": {
        "tags": ["Evals"],
        "summary": "Fetch Evaluator",
        "operationId": "fetch_evaluator",
        "parameters": [
          {
            "name": "evaluator_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Evaluator Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluatorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Evals"],
        "summary": "Edit Evaluator",
        "operationId": "edit_evaluator",
        "parameters": [
          {
            "name": "evaluator_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Evaluator Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EvaluatorRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluatorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/evaluators/{evaluator_id}/archive": {
      "post": {
        "tags": ["Evals"],
        "summary": "Archive Evaluator",
        "operationId": "archive_evaluator",
        "parameters": [
          {
            "name": "evaluator_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Evaluator Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluatorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/evaluators/{evaluator_id}/unarchive": {
      "post": {
        "tags": ["Evals"],
        "summary": "Unarchive Evaluator",
        "operationId": "unarchive_evaluator",
        "parameters": [
          {
            "name": "evaluator_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Evaluator Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluatorResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/evaluators/query": {
      "post": {
        "tags": ["Evals"],
        "summary": "Query Evaluators",
        "operationId": "query_evaluators",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/EvaluatorQueryRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Evaluator Query Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EvaluatorsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/annotations/": {
      "post": {
        "tags": ["Evals"],
        "summary": "Create Annotation",
        "operationId": "create_annotation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnotationCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/annotations/{trace_id}/{span_id}": {
      "get": {
        "tags": ["Evals"],
        "summary": "Fetch Annotation",
        "operationId": "fetch_annotation",
        "parameters": [
          {
            "name": "trace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trace Id"
            }
          },
          {
            "name": "span_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Span Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Evals"],
        "summary": "Delete Annotation",
        "operationId": "delete_annotation",
        "parameters": [
          {
            "name": "trace_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Trace Id"
            }
          },
          {
            "name": "span_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Span Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationLinkResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/annotations/query": {
      "post": {
        "tags": ["Evals"],
        "summary": "Query Annotations",
        "operationId": "query_annotations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/AnnotationQueryRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Query Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnnotationsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Create Workflow",
        "operationId": "create_workflow",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Workflows"],
        "summary": "Query Workflows",
        "operationId": "list_workflows",
        "parameters": [
          {
            "name": "workflow_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of ref, e.g. {\"key\": value}",
              "title": "Workflow Ref"
            },
            "description": "JSON string of ref, e.g. {\"key\": value}"
          },
          {
            "name": "workflow_flags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of flags, e.g. {\"key\": value}",
              "title": "Workflow Flags"
            },
            "description": "JSON string of flags, e.g. {\"key\": value}"
          },
          {
            "name": "workflow_metadata",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of metadata, e.g. {\"key\": value}",
              "title": "Workflow Metadata"
            },
            "description": "JSON string of metadata, e.g. {\"key\": value}"
          },
          {
            "name": "include_archived",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Include Archived"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/{workflow_id}": {
      "get": {
        "tags": ["Workflows"],
        "summary": "Fetch Workflow",
        "operationId": "fetch_workflow",
        "parameters": [
          {
            "name": "artifact_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Artifact Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Workflows"],
        "summary": "Edit Workflow",
        "operationId": "edit_workflow",
        "parameters": [
          {
            "name": "workflow_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Workflow Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/{workflow_id}/archive": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Archive Workflow",
        "operationId": "archive_workflow",
        "parameters": [
          {
            "name": "artifact_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Artifact Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/{workflow_id}/unarchive": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Unarchive Workflow",
        "operationId": "unarchive_workflow",
        "parameters": [
          {
            "name": "artifact_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Artifact Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/query": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Query Workflows",
        "operationId": "query_workflows",
        "parameters": [
          {
            "name": "workflow_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of ref, e.g. {\"key\": value}",
              "title": "Workflow Ref"
            },
            "description": "JSON string of ref, e.g. {\"key\": value}"
          },
          {
            "name": "workflow_flags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of flags, e.g. {\"key\": value}",
              "title": "Workflow Flags"
            },
            "description": "JSON string of flags, e.g. {\"key\": value}"
          },
          {
            "name": "workflow_metadata",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of metadata, e.g. {\"key\": value}",
              "title": "Workflow Metadata"
            },
            "description": "JSON string of metadata, e.g. {\"key\": value}"
          },
          {
            "name": "include_archived",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Include Archived"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/variants/": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Create Workflow Variant",
        "operationId": "create_workflow_variant",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowVariantRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVariantResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Workflows"],
        "summary": "Query Workflow Variants",
        "operationId": "list_workflow_variants",
        "parameters": [
          {
            "name": "workflow_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of reference, e.g. {\"key\": value}",
              "title": "Workflow Ref"
            },
            "description": "JSON string of reference, e.g. {\"key\": value}"
          },
          {
            "name": "variant_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of reference, e.g. {\"key\": value}",
              "title": "Variant Ref"
            },
            "description": "JSON string of reference, e.g. {\"key\": value}"
          },
          {
            "name": "variant_metadata",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of metadata, e.g. {\"key\": value}",
              "title": "Variant Metadata"
            },
            "description": "JSON string of metadata, e.g. {\"key\": value}"
          },
          {
            "name": "variant_flags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of flags, e.g. {\"key\": value}",
              "title": "Variant Flags"
            },
            "description": "JSON string of flags, e.g. {\"key\": value}"
          },
          {
            "name": "include_archived",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Include Archived"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVariantsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/variants/{variant_id}": {
      "get": {
        "tags": ["Workflows"],
        "summary": "Fetch Workflow Variant",
        "operationId": "fetch_workflow_variant",
        "parameters": [
          {
            "name": "variant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Variant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVariantResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Workflows"],
        "summary": "Edit Workflow Variant",
        "operationId": "edit_workflow_variant",
        "parameters": [
          {
            "name": "variant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Variant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowVariantRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVariantResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/variants/{variant_id}/archive": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Archive Workflow Variant",
        "operationId": "archive_workflow_variant",
        "parameters": [
          {
            "name": "variant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Variant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVariantResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/variants/{variant_id}/unarchive": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Unarchive Workflow Variant",
        "operationId": "unarchive_workflow_variant",
        "parameters": [
          {
            "name": "variant_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Variant Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVariantResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/variants/query": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Query Workflow Variants",
        "operationId": "query_workflow_variants",
        "parameters": [
          {
            "name": "workflow_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of reference, e.g. {\"key\": value}",
              "title": "Workflow Ref"
            },
            "description": "JSON string of reference, e.g. {\"key\": value}"
          },
          {
            "name": "variant_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of reference, e.g. {\"key\": value}",
              "title": "Variant Ref"
            },
            "description": "JSON string of reference, e.g. {\"key\": value}"
          },
          {
            "name": "variant_metadata",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of metadata, e.g. {\"key\": value}",
              "title": "Variant Metadata"
            },
            "description": "JSON string of metadata, e.g. {\"key\": value}"
          },
          {
            "name": "variant_flags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of flags, e.g. {\"key\": value}",
              "title": "Variant Flags"
            },
            "description": "JSON string of flags, e.g. {\"key\": value}"
          },
          {
            "name": "include_archived",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Include Archived"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVariantsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/variants/{variant_id}/commit": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Commit Workflow Revision",
        "operationId": "commit_workflow_revision_by_variant_id",
        "parameters": [
          {
            "name": "variant_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Variant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRevisionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRevisionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/variants/{variant_id}/fork": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Fork Workflow Variant",
        "operationId": "fork_workflow_variant",
        "parameters": [
          {
            "name": "variant_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Variant Id"
            }
          },
          {
            "name": "revision_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Revision Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRevisionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVariantResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/revisions/": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Create Workflow Revision",
        "operationId": "create_workflow_revision",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRevisionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRevisionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["Workflows"],
        "summary": "Query Workflow Revisions",
        "operationId": "list_workflow_revisions",
        "parameters": [
          {
            "name": "variant_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of ref, e.g. {\"key\": value}",
              "title": "Variant Ref"
            },
            "description": "JSON string of ref, e.g. {\"key\": value}"
          },
          {
            "name": "revision_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of ref, e.g. {\"key\": value}",
              "title": "Revision Ref"
            },
            "description": "JSON string of ref, e.g. {\"key\": value}"
          },
          {
            "name": "revision_metadata",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of metadata, e.g. {\"key\": value}",
              "title": "Revision Metadata"
            },
            "description": "JSON string of metadata, e.g. {\"key\": value}"
          },
          {
            "name": "revision_flags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of flags, e.g. {\"key\": value}",
              "title": "Revision Flags"
            },
            "description": "JSON string of flags, e.g. {\"key\": value}"
          },
          {
            "name": "include_archived",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Include Archived"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRevisionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/revisions/{revision_id}": {
      "get": {
        "tags": ["Workflows"],
        "summary": "Fetch Workflow Revision",
        "operationId": "fetch_workflow_revision",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_fetch_workflow_revision"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRevisionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Workflows"],
        "summary": "Edit Workflow Revision",
        "operationId": "edit_workflow_revision",
        "parameters": [
          {
            "name": "revision_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Revision Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRevisionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRevisionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/revisions/{revision_id}/archive": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Archive Workflow Revision",
        "operationId": "archive_workflow_revision_rpc",
        "parameters": [
          {
            "name": "revision_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Revision Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRevisionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/revisions/{revision_id}/unarchive": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Unarchive Workflow Revision",
        "operationId": "unarchive_workflow_revision_rpc",
        "parameters": [
          {
            "name": "revision_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Revision Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRevisionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/revisions/query": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Query Workflow Revisions",
        "operationId": "query_workflow_revisions",
        "parameters": [
          {
            "name": "variant_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of ref, e.g. {\"key\": value}",
              "title": "Variant Ref"
            },
            "description": "JSON string of ref, e.g. {\"key\": value}"
          },
          {
            "name": "revision_ref",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of ref, e.g. {\"key\": value}",
              "title": "Revision Ref"
            },
            "description": "JSON string of ref, e.g. {\"key\": value}"
          },
          {
            "name": "revision_metadata",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of metadata, e.g. {\"key\": value}",
              "title": "Revision Metadata"
            },
            "description": "JSON string of metadata, e.g. {\"key\": value}"
          },
          {
            "name": "revision_flags",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "description": "JSON string of flags, e.g. {\"key\": value}",
              "title": "Revision Flags"
            },
            "description": "JSON string of flags, e.g. {\"key\": value}"
          },
          {
            "name": "include_archived",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Include Archived"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRevisionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/revisions/{revision_id}/fork": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Fork Workflow Variant",
        "operationId": "fork_workflow_variant_by_revision_id",
        "parameters": [
          {
            "name": "revision_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Revision Id"
            }
          },
          {
            "name": "variant_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Variant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRevisionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowVariantResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/revisions/commit": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Commit Workflow Revision",
        "operationId": "commit_workflow_revision",
        "parameters": [
          {
            "name": "variant_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Variant Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkflowRevisionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRevisionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/base/workflows/revisions/log": {
      "post": {
        "tags": ["Workflows"],
        "summary": "Log Workflow Revisions",
        "operationId": "log_workflow_revisions",
        "parameters": [
          {
            "name": "depth",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Depth"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_log_workflow_revisions"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkflowRevisionsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/testsets/": {
      "get": {
        "tags": ["Testsets"],
        "summary": "Query Testsets",
        "operationId": "list_testsets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/TagsRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Metadata Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestsetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Testsets"],
        "summary": "Create Testset",
        "operationId": "create_testset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestsetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestsetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/testsets/{testset_id}": {
      "get": {
        "tags": ["Testsets"],
        "summary": "Fetch Testset",
        "operationId": "fetch_testset",
        "parameters": [
          {
            "name": "testset_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Testset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestsetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Testsets"],
        "summary": "Edit Testset",
        "operationId": "edit_testset",
        "parameters": [
          {
            "name": "testset_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Testset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TestsetRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestsetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/testsets/{testset_id}/archive": {
      "post": {
        "tags": ["Testsets"],
        "summary": "Archive Testset",
        "operationId": "archive_testset",
        "parameters": [
          {
            "name": "testset_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Testset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestsetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/testsets/{testset_id}/unarchive": {
      "post": {
        "tags": ["Testsets"],
        "summary": "Unarchive Testset",
        "operationId": "unarchive_testset",
        "parameters": [
          {
            "name": "testset_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Testset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestsetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/testsets/query": {
      "post": {
        "tags": ["Testsets"],
        "summary": "Query Testsets",
        "operationId": "query_testsets",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "anyOf": [
                  {
                    "$ref": "#/components/schemas/TagsRequest"
                  },
                  {
                    "type": "null"
                  }
                ],
                "title": "Metadata Request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestsetsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/testsets/upload": {
      "post": {
        "tags": ["Testsets"],
        "summary": "Create Testset From File",
        "operationId": "create_testset_from_file",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_testset_from_file"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestsetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/testsets/{testset_id}/upload": {
      "post": {
        "tags": ["Testsets"],
        "summary": "Update Testset From File",
        "operationId": "update_testset_from_file",
        "parameters": [
          {
            "name": "testset_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Testset Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_testset_from_file"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestsetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/testsets/{testset_id}/download": {
      "post": {
        "tags": ["Testsets"],
        "summary": "Fetch Testset To File",
        "operationId": "fetch_testset_to_file",
        "parameters": [
          {
            "name": "testset_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uuid"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Testset Id"
            }
          },
          {
            "name": "file_type",
            "in": "query",
            "required": false,
            "schema": {
              "enum": ["CSV", "JSON"],
              "type": "string",
              "title": "File Type"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestsetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/preview/testsets/testcases/{testcase_id}": {
      "get": {
        "tags": ["Testsets"],
        "summary": "Fetch Testcase",
        "operationId": "fetch_testcase",
        "parameters": [
          {
            "name": "testcase_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Testcase Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TestcaseResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/otlp/v1/traces": {
      "post": {
        "tags": ["Observability"],
        "summary": "Receive /v1/traces via OTLP",
        "description": "Receive traces via OTLP.",
        "operationId": "otlp_v1_traces",
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/observability/v1/otlp/traces": {
      "get": {
        "tags": ["Observability"],
        "summary": "Status of OTLP endpoint",
        "description": "Status of OTLP endpoint.",
        "operationId": "otlp_status",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectStatusResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Observability"],
        "summary": "Receive traces via OTLP",
        "description": "Receive traces via OTLP.",
        "operationId": "otlp_receiver",
        "responses": {
          "202": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/observability/v1/traces": {
      "get": {
        "tags": ["Observability"],
        "summary": "Query traces, with optional grouping, windowing, filtering, and pagination.",
        "description": "Query traces, with optional grouping, windowing, filtering, and pagination.",
        "operationId": "query_traces",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": ["opentelemetry", "agenta"],
              "type": "string",
              "default": "agenta",
              "title": "Format"
            }
          },
          {
            "name": "focus",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Focus"
            }
          },
          {
            "name": "oldest",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Oldest"
            }
          },
          {
            "name": "newest",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Newest"
            }
          },
          {
            "name": "filtering",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Filtering"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Page"
            }
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Size"
            }
          },
          {
            "name": "next",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Next"
            }
          },
          {
            "name": "stop",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Stop"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/oss__src__apis__fastapi__observability__models__OTelTracingResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AgentaNodesResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AgentaTreesResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AgentaRootsResponse"
                    }
                  ],
                  "title": "Response Query Traces"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Observability"],
        "summary": "Delete traces",
        "description": "Delete trace.",
        "operationId": "delete_traces",
        "parameters": [
          {
            "name": "node_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "title": "Node Id"
            }
          },
          {
            "name": "node_ids",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid"
              },
              "title": "Node Ids"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CollectStatusResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/observability/v1/analytics": {
      "get": {
        "tags": ["Observability"],
        "summary": "Query analytics, with optional grouping, windowing, filtering.",
        "operationId": "query_analytics",
        "parameters": [
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": ["legacy", "agenta"],
              "type": "string",
              "default": "agenta",
              "title": "Format"
            }
          },
          {
            "name": "focus",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Focus"
            }
          },
          {
            "name": "oldest",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Oldest"
            }
          },
          {
            "name": "newest",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Newest"
            }
          },
          {
            "name": "window",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "integer"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Window"
            }
          },
          {
            "name": "filtering",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Filtering"
            }
          },
          {
            "name": "timeRange",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Timerange"
            }
          },
          {
            "name": "app_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "App Id"
            }
          },
          {
            "name": "environment",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Environment"
            }
          },
          {
            "name": "variant",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Variant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/LegacyAnalyticsResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AnalyticsResponse"
                    }
                  ],
                  "title": "Response Query Analytics"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/observability/v1/traces/{trace_id}": {
      "get": {
        "tags": ["Observability"],
        "summary": "Fetch trace by ID.",
        "description": "Fetch trace by ID.",
        "operationId": "fetch_trace_by_id",
        "parameters": [
          {
            "name": "trace_id",
            "in": "path",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ],
              "title": "Trace Id"
            }
          },
          {
            "name": "format",
            "in": "query",
            "required": false,
            "schema": {
              "enum": ["opentelemetry", "agenta"],
              "type": "string",
              "default": "openetelemetry",
              "title": "Format"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/oss__src__apis__fastapi__observability__models__OTelTracingResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AgentaNodesResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AgentaTreesResponse"
                    },
                    {
                      "$ref": "#/components/schemas/AgentaRootsResponse"
                    }
                  ],
                  "title": "Response Fetch Trace By Id"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vault/v1/secrets": {
      "get": {
        "tags": ["Vault"],
        "summary": "List Secrets",
        "operationId": "list_secrets",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SecretResponseDTO"
                  },
                  "type": "array",
                  "title": "Response List Secrets"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Vault"],
        "summary": "Create Secret",
        "operationId": "create_secret",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSecretDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecretResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/vault/v1/secrets/{secret_id}": {
      "get": {
        "tags": ["Vault"],
        "summary": "Read Secret",
        "operationId": "read_secret",
        "parameters": [
          {
            "name": "secret_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Secret Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecretResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": ["Vault"],
        "summary": "Update Secret",
        "operationId": "update_secret",
        "parameters": [
          {
            "name": "secret_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Secret Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSecretDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SecretResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": ["Vault"],
        "summary": "Delete Secret",
        "operationId": "delete_secret",
        "parameters": [
          {
            "name": "secret_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Secret Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountRequest": {
        "properties": {
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LegacyUserRequest"
              },
              {
                "type": "null"
              }
            ]
          },
          "scope": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LegacyScopeRequest"
              },
              {
                "type": "null"
              }
            ]
          },
          "subscription": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LegacySubscriptionRequest"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "AccountRequest"
      },
      "AccountResponse": {
        "properties": {
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LegacyUserResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "scopes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LegacyScopesResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Scopes"
          }
        },
        "type": "object",
        "title": "AccountResponse"
      },
      "AddVariantFromBasePayload": {
        "properties": {
          "base_id": {
            "type": "string",
            "title": "Base Id"
          },
          "new_variant_name": {
            "type": "string",
            "title": "New Variant Name"
          },
          "new_config_name": {
            "type": "string",
            "title": "New Config Name"
          },
          "parameters": {
            "additionalProperties": true,
            "type": "object",
            "title": "Parameters"
          },
          "commit_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit Message"
          }
        },
        "type": "object",
        "required": ["base_id", "new_variant_name", "new_config_name", "parameters"],
        "title": "AddVariantFromBasePayload"
      },
      "AddVariantFromKeyPayload": {
        "properties": {
          "variant_name": {
            "type": "string",
            "title": "Variant Name"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "commit_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit Message"
          },
          "base_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Name"
          },
          "config_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config Name"
          }
        },
        "type": "object",
        "required": ["variant_name", "key"],
        "title": "AddVariantFromKeyPayload"
      },
      "AddVariantFromURLPayload": {
        "properties": {
          "variant_name": {
            "type": "string",
            "title": "Variant Name"
          },
          "url": {
            "type": "string",
            "title": "Url"
          },
          "commit_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit Message"
          },
          "base_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base Name"
          },
          "config_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config Name"
          }
        },
        "type": "object",
        "required": ["variant_name", "url"],
        "title": "AddVariantFromURLPayload"
      },
      "AgentaNodeDTO": {
        "properties": {
          "trace_id": {
            "type": "string",
            "title": "Trace Id"
          },
          "span_id": {
            "type": "string",
            "title": "Span Id"
          },
          "lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/oss__src__core__shared__dtos__LifecycleDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "root": {
            "$ref": "#/components/schemas/RootDTO"
          },
          "tree": {
            "$ref": "#/components/schemas/TreeDTO"
          },
          "node": {
            "$ref": "#/components/schemas/NodeDTO"
          },
          "parent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ParentDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "time": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "status": {
            "$ref": "#/components/schemas/StatusDTO"
          },
          "exception": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExceptionDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "metrics": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metrics"
          },
          "meta": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          },
          "refs": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refs"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "otel": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OTelExtraDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "nodes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SpanDTO"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/SpanDTO"
                      },
                      "type": "array"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nodes"
          }
        },
        "type": "object",
        "required": ["trace_id", "span_id", "root", "tree", "node", "time", "status"],
        "title": "AgentaNodeDTO"
      },
      "AgentaNodesResponse": {
        "properties": {
          "nodes": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AgentaNodeDTO"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nodes",
            "default": []
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count"
          }
        },
        "type": "object",
        "required": ["version"],
        "title": "AgentaNodesResponse"
      },
      "AgentaRootDTO": {
        "properties": {
          "root": {
            "$ref": "#/components/schemas/RootDTO"
          },
          "trees": {
            "items": {
              "$ref": "#/components/schemas/AgentaTreeDTO"
            },
            "type": "array",
            "title": "Trees"
          }
        },
        "type": "object",
        "required": ["root", "trees"],
        "title": "AgentaRootDTO"
      },
      "AgentaRootsResponse": {
        "properties": {
          "roots": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AgentaRootDTO"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Roots",
            "default": []
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count"
          }
        },
        "type": "object",
        "required": ["version"],
        "title": "AgentaRootsResponse"
      },
      "AgentaTreeDTO": {
        "properties": {
          "tree": {
            "$ref": "#/components/schemas/TreeDTO"
          },
          "nodes": {
            "items": {
              "$ref": "#/components/schemas/AgentaNodeDTO"
            },
            "type": "array",
            "title": "Nodes"
          }
        },
        "type": "object",
        "required": ["tree", "nodes"],
        "title": "AgentaTreeDTO"
      },
      "AgentaTreesResponse": {
        "properties": {
          "trees": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/AgentaTreeDTO"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trees",
            "default": []
          },
          "version": {
            "type": "string",
            "title": "Version"
          },
          "count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count"
          }
        },
        "type": "object",
        "required": ["version"],
        "title": "AgentaTreesResponse"
      },
      "AggregatedResult": {
        "properties": {
          "evaluator_config": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EvaluatorConfig"
              },
              {
                "additionalProperties": true,
                "type": "object"
              }
            ],
            "title": "Evaluator Config"
          },
          "result": {
            "$ref": "#/components/schemas/Result"
          }
        },
        "type": "object",
        "required": ["evaluator_config", "result"],
        "title": "AggregatedResult"
      },
      "AnalyticsResponse": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version"
          },
          "count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count"
          },
          "buckets": {
            "items": {
              "$ref": "#/components/schemas/BucketDTO"
            },
            "type": "array",
            "title": "Buckets"
          }
        },
        "type": "object",
        "required": ["version", "buckets"],
        "title": "AnalyticsResponse"
      },
      "Annotation": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "span_id": {
            "type": "string",
            "title": "Span Id"
          },
          "trace_id": {
            "type": "string",
            "title": "Trace Id"
          },
          "kind": {
            "$ref": "#/components/schemas/AnnotationKind",
            "default": "custom"
          },
          "source": {
            "$ref": "#/components/schemas/AnnotationSource",
            "default": "api"
          },
          "data": {
            "additionalProperties": {
              "$ref": "#/components/schemas/FullJson-Output"
            },
            "type": "object",
            "title": "Data"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "references": {
            "$ref": "#/components/schemas/AnnotationReferences-Output"
          },
          "links": {
            "additionalProperties": {
              "$ref": "#/components/schemas/AnnotationLink-Output"
            },
            "type": "object",
            "title": "Links"
          }
        },
        "type": "object",
        "required": ["span_id", "trace_id", "data", "references", "links"],
        "title": "Annotation"
      },
      "AnnotationCreate": {
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/AnnotationKind",
            "default": "custom"
          },
          "source": {
            "$ref": "#/components/schemas/AnnotationSource",
            "default": "api"
          },
          "data": {
            "additionalProperties": {
              "$ref": "#/components/schemas/FullJson-Input"
            },
            "type": "object",
            "title": "Data"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "references": {
            "$ref": "#/components/schemas/AnnotationReferences-Input"
          },
          "links": {
            "additionalProperties": {
              "$ref": "#/components/schemas/AnnotationLink-Input"
            },
            "type": "object",
            "title": "Links"
          }
        },
        "type": "object",
        "required": ["data", "references", "links"],
        "title": "AnnotationCreate"
      },
      "AnnotationCreateRequest": {
        "properties": {
          "annotation": {
            "$ref": "#/components/schemas/AnnotationCreate"
          }
        },
        "type": "object",
        "required": ["annotation"],
        "title": "AnnotationCreateRequest"
      },
      "AnnotationKind": {
        "type": "string",
        "enum": ["custom", "human", "auto"],
        "title": "AnnotationKind"
      },
      "AnnotationLink-Input": {
        "properties": {
          "span_id": {
            "type": "string",
            "title": "Span Id"
          },
          "trace_id": {
            "type": "string",
            "title": "Trace Id"
          },
          "attributes": {
            "additionalProperties": true,
            "type": "object",
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": ["span_id", "trace_id"],
        "title": "AnnotationLink"
      },
      "AnnotationLink-Output": {
        "properties": {
          "span_id": {
            "type": "string",
            "title": "Span Id"
          },
          "trace_id": {
            "type": "string",
            "title": "Trace Id"
          }
        },
        "type": "object",
        "required": ["span_id", "trace_id"],
        "title": "AnnotationLink"
      },
      "AnnotationLinkResponse": {
        "properties": {
          "annotation": {
            "$ref": "#/components/schemas/AnnotationLink-Output"
          }
        },
        "type": "object",
        "required": ["annotation"],
        "title": "AnnotationLinkResponse"
      },
      "AnnotationQuery": {
        "properties": {
          "trace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Trace Id"
          },
          "span_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Span Id"
          },
          "kind": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AnnotationKind"
              },
              {
                "type": "null"
              }
            ],
            "default": "custom"
          },
          "source": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AnnotationSource"
              },
              {
                "type": "null"
              }
            ],
            "default": "api"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "references": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AnnotationReferences-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "links": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/AnnotationLink-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          }
        },
        "type": "object",
        "title": "AnnotationQuery"
      },
      "AnnotationQueryRequest": {
        "properties": {
          "annotation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AnnotationQuery"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "AnnotationQueryRequest"
      },
      "AnnotationReference-Input": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "attributes": {
            "additionalProperties": true,
            "type": "object",
            "title": "Attributes"
          }
        },
        "type": "object",
        "title": "AnnotationReference"
      },
      "AnnotationReference-Output": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          }
        },
        "type": "object",
        "title": "AnnotationReference"
      },
      "AnnotationReferences-Input": {
        "properties": {
          "evaluator": {
            "$ref": "#/components/schemas/AnnotationReference-Input"
          },
          "testset": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AnnotationReference-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "testcase": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AnnotationReference-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["evaluator"],
        "title": "AnnotationReferences"
      },
      "AnnotationReferences-Output": {
        "properties": {
          "evaluator": {
            "$ref": "#/components/schemas/AnnotationReference-Output"
          },
          "testset": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AnnotationReference-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "testcase": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AnnotationReference-Output"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["evaluator"],
        "title": "AnnotationReferences"
      },
      "AnnotationResponse": {
        "properties": {
          "annotation": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Annotation"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "AnnotationResponse"
      },
      "AnnotationSource": {
        "type": "string",
        "enum": ["web", "sdk", "api"],
        "title": "AnnotationSource"
      },
      "AnnotationsResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "oldest": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oldest"
          },
          "limit": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Limit"
          },
          "annotations": {
            "items": {
              "$ref": "#/components/schemas/Annotation"
            },
            "type": "array",
            "title": "Annotations",
            "default": []
          }
        },
        "type": "object",
        "required": ["count"],
        "title": "AnnotationsResponse"
      },
      "App": {
        "properties": {
          "app_id": {
            "type": "string",
            "title": "App Id"
          },
          "app_name": {
            "type": "string",
            "title": "App Name"
          },
          "app_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "App Type"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["app_id", "app_name", "updated_at"],
        "title": "App"
      },
      "AppVariantResponse_": {
        "properties": {
          "app_id": {
            "type": "string",
            "title": "App Id"
          },
          "app_name": {
            "type": "string",
            "title": "App Name"
          },
          "variant_id": {
            "type": "string",
            "title": "Variant Id"
          },
          "variant_name": {
            "type": "string",
            "title": "Variant Name"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "base_name": {
            "type": "string",
            "title": "Base Name"
          },
          "base_id": {
            "type": "string",
            "title": "Base Id"
          },
          "config_name": {
            "type": "string",
            "title": "Config Name"
          },
          "uri": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uri"
          },
          "revision": {
            "type": "integer",
            "title": "Revision"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "modified_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modified By Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          }
        },
        "type": "object",
        "required": [
          "app_id",
          "app_name",
          "variant_id",
          "variant_name",
          "project_id",
          "base_name",
          "base_id",
          "config_name",
          "revision"
        ],
        "title": "AppVariantResponse_"
      },
      "AppVariantRevision": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "revision": {
            "type": "integer",
            "title": "Revision"
          },
          "modified_by": {
            "type": "string",
            "title": "Modified By"
          },
          "config": {
            "$ref": "#/components/schemas/ConfigDB"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "commit_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit Message"
          }
        },
        "type": "object",
        "required": ["revision", "modified_by", "config", "created_at"],
        "title": "AppVariantRevision"
      },
      "Artifact-Input": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "flags": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "boolean"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Flags"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "Artifact"
      },
      "Artifact-Output": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "flags": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "boolean"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Flags"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "Artifact"
      },
      "BaseOutput": {
        "properties": {
          "base_id": {
            "type": "string",
            "title": "Base Id"
          },
          "base_name": {
            "type": "string",
            "title": "Base Name"
          }
        },
        "type": "object",
        "required": ["base_id", "base_name"],
        "title": "BaseOutput"
      },
      "Body_configs_add": {
        "properties": {
          "variant_ref": {
            "$ref": "#/components/schemas/ReferenceRequestModel"
          },
          "application_ref": {
            "$ref": "#/components/schemas/ReferenceRequestModel"
          }
        },
        "type": "object",
        "required": ["variant_ref", "application_ref"],
        "title": "Body_configs_add"
      },
      "Body_configs_delete": {
        "properties": {
          "variant_ref": {
            "$ref": "#/components/schemas/ReferenceRequestModel"
          },
          "application_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceRequestModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["variant_ref"],
        "title": "Body_configs_delete"
      },
      "Body_configs_deploy": {
        "properties": {
          "variant_ref": {
            "$ref": "#/components/schemas/ReferenceRequestModel"
          },
          "environment_ref": {
            "$ref": "#/components/schemas/ReferenceRequestModel"
          },
          "application_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceRequestModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["variant_ref", "environment_ref"],
        "title": "Body_configs_deploy"
      },
      "Body_configs_fetch": {
        "properties": {
          "variant_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceRequestModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "environment_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceRequestModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "application_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceRequestModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "Body_configs_fetch"
      },
      "Body_configs_fork": {
        "properties": {
          "variant_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceRequestModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "environment_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceRequestModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "application_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceRequestModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "Body_configs_fork"
      },
      "Body_configs_history": {
        "properties": {
          "variant_ref": {
            "$ref": "#/components/schemas/ReferenceRequestModel"
          },
          "application_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceRequestModel"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["variant_ref"],
        "title": "Body_configs_history"
      },
      "Body_create_testset_from_file": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "file_type": {
            "type": "string",
            "enum": ["CSV", "JSON"],
            "title": "File Type"
          },
          "testset_slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testset Slug"
          },
          "testset_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testset Name"
          },
          "testset_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testset Description"
          },
          "testset_metadata": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testset Metadata"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_create_testset_from_file"
      },
      "Body_fetch_workflow_revision": {
        "properties": {
          "variant_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/oss__src__core__shared__dtos__Reference"
              },
              {
                "type": "null"
              }
            ]
          },
          "revision_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/oss__src__core__shared__dtos__Reference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "Body_fetch_workflow_revision"
      },
      "Body_import_testset": {
        "properties": {
          "endpoint": {
            "type": "string",
            "title": "Endpoint"
          },
          "testset_name": {
            "type": "string",
            "title": "Testset Name"
          }
        },
        "type": "object",
        "title": "Body_import_testset"
      },
      "Body_log_workflow_revisions": {
        "properties": {
          "variant_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/oss__src__core__shared__dtos__Reference"
              },
              {
                "type": "null"
              }
            ]
          },
          "revision_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/oss__src__core__shared__dtos__Reference"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "Body_log_workflow_revisions"
      },
      "Body_update_testset_from_file": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "file_type": {
            "type": "string",
            "enum": ["CSV", "JSON"],
            "title": "File Type"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_update_testset_from_file"
      },
      "Body_upload_file": {
        "properties": {
          "upload_type": {
            "type": "string",
            "title": "Upload Type"
          },
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          },
          "testset_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testset Name"
          }
        },
        "type": "object",
        "required": ["file"],
        "title": "Body_upload_file"
      },
      "BucketDTO": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "window": {
            "type": "integer",
            "title": "Window"
          },
          "total": {
            "$ref": "#/components/schemas/MetricsDTO"
          },
          "error": {
            "$ref": "#/components/schemas/MetricsDTO"
          }
        },
        "type": "object",
        "required": ["timestamp", "window", "total", "error"],
        "title": "BucketDTO"
      },
      "CollectStatusResponse": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": ["version", "status"],
        "title": "CollectStatusResponse"
      },
      "ConfigDB": {
        "properties": {
          "config_name": {
            "type": "string",
            "title": "Config Name"
          },
          "parameters": {
            "additionalProperties": true,
            "type": "object",
            "title": "Parameters"
          }
        },
        "type": "object",
        "required": ["config_name"],
        "title": "ConfigDB"
      },
      "ConfigDTO": {
        "properties": {
          "params": {
            "additionalProperties": true,
            "type": "object",
            "title": "Params"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "application_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "service_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "variant_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "environment_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "application_lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LifecycleDTO-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "service_lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LifecycleDTO-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "variant_lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LifecycleDTO-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "environment_lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/LifecycleDTO-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["params"],
        "title": "ConfigDTO"
      },
      "ConfigRequest": {
        "properties": {
          "config": {
            "$ref": "#/components/schemas/ConfigDTO"
          }
        },
        "type": "object",
        "required": ["config"],
        "title": "ConfigRequest"
      },
      "ConfigResponseModel": {
        "properties": {
          "params": {
            "additionalProperties": true,
            "type": "object",
            "title": "Params"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "application_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "service_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "variant_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "environment_ref": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ReferenceDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "application_lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/oss__src__services__variants_manager__LifecycleDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "service_lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/oss__src__services__variants_manager__LifecycleDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "variant_lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/oss__src__services__variants_manager__LifecycleDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "environment_lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/oss__src__services__variants_manager__LifecycleDTO"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["params"],
        "title": "ConfigResponseModel"
      },
      "CorrectAnswer": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          },
          "value": {
            "type": "string",
            "title": "Value"
          }
        },
        "type": "object",
        "required": ["key", "value"],
        "title": "CorrectAnswer"
      },
      "CreateAppOutput": {
        "properties": {
          "app_id": {
            "type": "string",
            "title": "App Id"
          },
          "app_name": {
            "type": "string",
            "title": "App Name"
          }
        },
        "type": "object",
        "required": ["app_id", "app_name"],
        "title": "CreateAppOutput"
      },
      "CreateApp_": {
        "properties": {
          "app_name": {
            "type": "string",
            "title": "App Name"
          },
          "template_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Template Key"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          }
        },
        "type": "object",
        "required": ["app_name"],
        "title": "CreateApp_"
      },
      "CreateSecretDTO": {
        "properties": {
          "header": {
            "$ref": "#/components/schemas/Header"
          },
          "secret": {
            "$ref": "#/components/schemas/SecretDTO"
          }
        },
        "type": "object",
        "required": ["header", "secret"],
        "title": "CreateSecretDTO"
      },
      "CreateWorkspace": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["name"],
        "title": "CreateWorkspace"
      },
      "CustomModelSettingsDTO": {
        "properties": {
          "slug": {
            "type": "string",
            "title": "Slug"
          },
          "extras": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extras"
          }
        },
        "type": "object",
        "required": ["slug"],
        "title": "CustomModelSettingsDTO"
      },
      "CustomProviderDTO": {
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/CustomProviderKind"
          },
          "provider": {
            "$ref": "#/components/schemas/CustomProviderSettingsDTO"
          },
          "models": {
            "items": {
              "$ref": "#/components/schemas/CustomModelSettingsDTO"
            },
            "type": "array",
            "title": "Models"
          },
          "provider_slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Slug"
          },
          "model_keys": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Keys"
          }
        },
        "type": "object",
        "required": ["kind", "provider", "models"],
        "title": "CustomProviderDTO"
      },
      "CustomProviderKind": {
        "type": "string",
        "enum": [
          "custom",
          "azure",
          "bedrock",
          "sagemaker",
          "vertex_ai",
          "openai",
          "cohere",
          "anyscale",
          "deepinfra",
          "alephalpha",
          "groq",
          "mistralai",
          "anthropic",
          "perplexityai",
          "togetherai",
          "openrouter",
          "gemini"
        ],
        "title": "CustomProviderKind"
      },
      "CustomProviderSettingsDTO": {
        "properties": {
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Key"
          },
          "extras": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extras"
          }
        },
        "type": "object",
        "title": "CustomProviderSettingsDTO"
      },
      "DeleteEvaluation": {
        "properties": {
          "evaluations_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Evaluations Ids"
          }
        },
        "type": "object",
        "required": ["evaluations_ids"],
        "title": "DeleteEvaluation"
      },
      "DeleteTestsets": {
        "properties": {
          "testset_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Testset Ids"
          }
        },
        "type": "object",
        "required": ["testset_ids"],
        "title": "DeleteTestsets"
      },
      "DeployToEnvironmentPayload": {
        "properties": {
          "environment_name": {
            "type": "string",
            "title": "Environment Name"
          },
          "variant_id": {
            "type": "string",
            "title": "Variant Id"
          },
          "commit_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit Message"
          }
        },
        "type": "object",
        "required": ["environment_name", "variant_id"],
        "title": "DeployToEnvironmentPayload"
      },
      "EntitiesRequestModel": {
        "properties": {
          "users": {
            "additionalProperties": {
              "$ref": "#/components/schemas/UserRequest"
            },
            "type": "object",
            "title": "Users"
          },
          "organizations": {
            "additionalProperties": {
              "$ref": "#/components/schemas/OrganizationRequest"
            },
            "type": "object",
            "title": "Organizations"
          },
          "workspaces": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WorkspaceRequest"
            },
            "type": "object",
            "title": "Workspaces"
          },
          "projects": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ProjectRequest"
            },
            "type": "object",
            "title": "Projects"
          },
          "organization_memberships": {
            "additionalProperties": {
              "$ref": "#/components/schemas/OrganizationMembershipRequest"
            },
            "type": "object",
            "title": "Organization Memberships"
          },
          "workspace_memberships": {
            "additionalProperties": {
              "$ref": "#/components/schemas/WorkspaceMembershipRequest"
            },
            "type": "object",
            "title": "Workspace Memberships"
          },
          "project_memberships": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ProjectMembershipRequest"
            },
            "type": "object",
            "title": "Project Memberships"
          }
        },
        "type": "object",
        "required": [
          "users",
          "organizations",
          "workspaces",
          "projects",
          "organization_memberships",
          "workspace_memberships",
          "project_memberships"
        ],
        "title": "EntitiesRequestModel"
      },
      "EnvironmentOutputExtended_": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "app_id": {
            "type": "string",
            "title": "App Id"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "deployed_app_variant_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployed App Variant Id"
          },
          "deployed_variant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployed Variant Name"
          },
          "deployed_app_variant_revision_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployed App Variant Revision Id"
          },
          "revision": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Revision"
          },
          "revisions": {
            "items": {
              "$ref": "#/components/schemas/EnvironmentRevision"
            },
            "type": "array",
            "title": "Revisions"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "app_id",
          "project_id",
          "deployed_app_variant_id",
          "deployed_variant_name",
          "deployed_app_variant_revision_id",
          "revision",
          "revisions"
        ],
        "title": "EnvironmentOutputExtended_"
      },
      "EnvironmentOutput_": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "app_id": {
            "type": "string",
            "title": "App Id"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "deployed_app_variant_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployed App Variant Id"
          },
          "deployed_variant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployed Variant Name"
          },
          "deployed_app_variant_revision_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployed App Variant Revision Id"
          },
          "revision": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Revision"
          },
          "organization_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "app_id",
          "project_id",
          "deployed_app_variant_id",
          "deployed_variant_name",
          "deployed_app_variant_revision_id",
          "revision"
        ],
        "title": "EnvironmentOutput_"
      },
      "EnvironmentRevision": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "revision": {
            "type": "integer",
            "title": "Revision"
          },
          "modified_by": {
            "type": "string",
            "title": "Modified By"
          },
          "deployed_app_variant_revision": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployed App Variant Revision"
          },
          "deployment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployment"
          },
          "commit_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit Message"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "deployed_variant_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deployed Variant Name"
          }
        },
        "type": "object",
        "required": ["id", "revision", "modified_by", "created_at"],
        "title": "EnvironmentRevision"
      },
      "Error": {
        "properties": {
          "message": {
            "type": "string",
            "title": "Message"
          },
          "stacktrace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stacktrace"
          }
        },
        "type": "object",
        "required": ["message"],
        "title": "Error"
      },
      "Evaluation": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "app_id": {
            "type": "string",
            "title": "App Id"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "variant_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Variant Ids"
          },
          "variant_names": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Variant Names"
          },
          "variant_revision_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Variant Revision Ids"
          },
          "revisions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Revisions"
          },
          "testset_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testset Id"
          },
          "testset_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testset Name"
          },
          "status": {
            "$ref": "#/components/schemas/Result"
          },
          "aggregated_results": {
            "items": {
              "$ref": "#/components/schemas/AggregatedResult"
            },
            "type": "array",
            "title": "Aggregated Results"
          },
          "average_cost": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Result"
              },
              {
                "type": "null"
              }
            ]
          },
          "total_cost": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Result"
              },
              {
                "type": "null"
              }
            ]
          },
          "average_latency": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Result"
              },
              {
                "type": "null"
              }
            ]
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "app_id",
          "project_id",
          "variant_ids",
          "variant_names",
          "variant_revision_ids",
          "revisions",
          "status",
          "aggregated_results",
          "created_at",
          "updated_at"
        ],
        "title": "Evaluation"
      },
      "EvaluationScenario": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "evaluation_id": {
            "type": "string",
            "title": "Evaluation Id"
          },
          "inputs": {
            "items": {
              "$ref": "#/components/schemas/EvaluationScenarioInput"
            },
            "type": "array",
            "title": "Inputs"
          },
          "outputs": {
            "items": {
              "$ref": "#/components/schemas/EvaluationScenarioOutput"
            },
            "type": "array",
            "title": "Outputs"
          },
          "correct_answers": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CorrectAnswer"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correct Answers"
          },
          "is_pinned": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Pinned"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/EvaluationScenarioResult"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": ["evaluation_id", "inputs", "outputs", "results"],
        "title": "EvaluationScenario"
      },
      "EvaluationScenarioInput": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "value": {
            "title": "Value"
          }
        },
        "type": "object",
        "required": ["name", "type", "value"],
        "title": "EvaluationScenarioInput"
      },
      "EvaluationScenarioOutput": {
        "properties": {
          "result": {
            "$ref": "#/components/schemas/Result"
          },
          "cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost"
          },
          "latency": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latency"
          }
        },
        "type": "object",
        "required": ["result"],
        "title": "EvaluationScenarioOutput"
      },
      "EvaluationScenarioResult": {
        "properties": {
          "evaluator_config": {
            "type": "string",
            "title": "Evaluator Config"
          },
          "result": {
            "$ref": "#/components/schemas/Result"
          }
        },
        "type": "object",
        "required": ["evaluator_config", "result"],
        "title": "EvaluationScenarioResult"
      },
      "EvaluationScenarioScoreUpdate": {
        "properties": {
          "score": {
            "type": "number",
            "title": "Score"
          }
        },
        "type": "object",
        "required": ["score"],
        "title": "EvaluationScenarioScoreUpdate"
      },
      "EvaluationStatusEnum": {
        "type": "string",
        "enum": [
          "EVALUATION_INITIALIZED",
          "EVALUATION_STARTED",
          "EVALUATION_FINISHED",
          "EVALUATION_FINISHED_WITH_ERRORS",
          "EVALUATION_FAILED",
          "EVALUATION_AGGREGATION_FAILED"
        ],
        "title": "EvaluationStatusEnum"
      },
      "EvaluationType": {
        "type": "string",
        "enum": ["human_a_b_testing", "single_model_test"],
        "title": "EvaluationType"
      },
      "Evaluator-Input": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "flags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowFlags"
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowData"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "Evaluator"
      },
      "EvaluatorConfig": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "evaluator_key": {
            "type": "string",
            "title": "Evaluator Key"
          },
          "settings_values": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings Values"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["id", "name", "project_id", "evaluator_key", "created_at", "updated_at"],
        "title": "EvaluatorConfig"
      },
      "EvaluatorInputInterface": {
        "properties": {
          "inputs": {
            "additionalProperties": true,
            "type": "object",
            "title": "Inputs"
          },
          "settings": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings"
          },
          "credentials": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credentials"
          }
        },
        "type": "object",
        "title": "EvaluatorInputInterface"
      },
      "EvaluatorMappingInputInterface": {
        "properties": {
          "inputs": {
            "additionalProperties": true,
            "type": "object",
            "title": "Inputs"
          },
          "mapping": {
            "additionalProperties": true,
            "type": "object",
            "title": "Mapping"
          }
        },
        "type": "object",
        "required": ["inputs", "mapping"],
        "title": "EvaluatorMappingInputInterface"
      },
      "EvaluatorMappingOutputInterface": {
        "properties": {
          "outputs": {
            "additionalProperties": true,
            "type": "object",
            "title": "Outputs"
          }
        },
        "type": "object",
        "required": ["outputs"],
        "title": "EvaluatorMappingOutputInterface"
      },
      "EvaluatorOutputInterface": {
        "properties": {
          "outputs": {
            "additionalProperties": true,
            "type": "object",
            "title": "Outputs"
          }
        },
        "type": "object",
        "required": ["outputs"],
        "title": "EvaluatorOutputInterface"
      },
      "EvaluatorQueryRequest": {
        "properties": {
          "flags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowFlags"
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "additionalProperties": {
              "$ref": "#/components/schemas/FullJson-Input"
            },
            "type": "object",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": ["metadata"],
        "title": "EvaluatorQueryRequest"
      },
      "EvaluatorRequest": {
        "properties": {
          "evaluator": {
            "$ref": "#/components/schemas/Evaluator-Input"
          }
        },
        "type": "object",
        "required": ["evaluator"],
        "title": "EvaluatorRequest"
      },
      "EvaluatorResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "evaluator": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/oss__src__apis__fastapi__evaluators__models__Evaluator-Output"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["count"],
        "title": "EvaluatorResponse"
      },
      "EvaluatorsResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "evaluator": {
            "items": {
              "$ref": "#/components/schemas/oss__src__apis__fastapi__evaluators__models__Evaluator-Output"
            },
            "type": "array",
            "title": "Evaluator",
            "default": []
          }
        },
        "type": "object",
        "required": ["count"],
        "title": "EvaluatorsResponse"
      },
      "ExceptionDTO": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "type": {
            "type": "string",
            "title": "Type"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "stacktrace": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stacktrace"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": ["timestamp", "type"],
        "title": "ExceptionDTO"
      },
      "Focus": {
        "type": "string",
        "enum": ["trace", "span"],
        "title": "Focus"
      },
      "Format": {
        "type": "string",
        "enum": ["agenta", "opentelemetry"],
        "title": "Format"
      },
      "FullJson-Input": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "integer"
          },
          {
            "type": "number"
          },
          {
            "type": "boolean"
          },
          {
            "additionalProperties": {
              "$ref": "#/components/schemas/FullJson-Input"
            },
            "type": "object"
          },
          {
            "items": {
              "$ref": "#/components/schemas/FullJson-Input"
            },
            "type": "array"
          },
          {
            "type": "null"
          }
        ]
      },
      "FullJson-Output": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "type": "integer"
          },
          {
            "type": "number"
          },
          {
            "type": "boolean"
          },
          {
            "additionalProperties": {
              "$ref": "#/components/schemas/FullJson-Output"
            },
            "type": "object"
          },
          {
            "items": {
              "$ref": "#/components/schemas/FullJson-Output"
            },
            "type": "array"
          },
          {
            "type": "null"
          }
        ]
      },
      "GetConfigResponse": {
        "properties": {
          "config_name": {
            "type": "string",
            "title": "Config Name"
          },
          "current_version": {
            "type": "integer",
            "title": "Current Version"
          },
          "parameters": {
            "additionalProperties": true,
            "type": "object",
            "title": "Parameters"
          }
        },
        "type": "object",
        "required": ["config_name", "current_version", "parameters"],
        "title": "GetConfigResponse"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Header": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "title": "Header"
      },
      "HumanEvaluation": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "app_id": {
            "type": "string",
            "title": "App Id"
          },
          "project_id": {
            "type": "string",
            "title": "Project Id"
          },
          "evaluation_type": {
            "type": "string",
            "title": "Evaluation Type"
          },
          "variant_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Variant Ids"
          },
          "variant_names": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Variant Names"
          },
          "variants_revision_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Variants Revision Ids"
          },
          "revisions": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Revisions"
          },
          "testset_id": {
            "type": "string",
            "title": "Testset Id"
          },
          "testset_name": {
            "type": "string",
            "title": "Testset Name"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "app_id",
          "project_id",
          "evaluation_type",
          "variant_ids",
          "variant_names",
          "variants_revision_ids",
          "revisions",
          "testset_id",
          "testset_name",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "HumanEvaluation"
      },
      "HumanEvaluationScenario": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "evaluation_id": {
            "type": "string",
            "title": "Evaluation Id"
          },
          "inputs": {
            "items": {
              "$ref": "#/components/schemas/HumanEvaluationScenarioInput"
            },
            "type": "array",
            "title": "Inputs"
          },
          "outputs": {
            "items": {
              "$ref": "#/components/schemas/HumanEvaluationScenarioOutput"
            },
            "type": "array",
            "title": "Outputs"
          },
          "vote": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vote"
          },
          "score": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "correct_answer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correct Answer"
          },
          "is_pinned": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Pinned"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          }
        },
        "type": "object",
        "required": ["evaluation_id", "inputs", "outputs"],
        "title": "HumanEvaluationScenario"
      },
      "HumanEvaluationScenarioInput": {
        "properties": {
          "input_name": {
            "type": "string",
            "title": "Input Name"
          },
          "input_value": {
            "type": "string",
            "title": "Input Value"
          }
        },
        "type": "object",
        "required": ["input_name", "input_value"],
        "title": "HumanEvaluationScenarioInput"
      },
      "HumanEvaluationScenarioOutput": {
        "properties": {
          "variant_id": {
            "type": "string",
            "title": "Variant Id"
          },
          "variant_output": {
            "type": "string",
            "title": "Variant Output"
          }
        },
        "type": "object",
        "required": ["variant_id", "variant_output"],
        "title": "HumanEvaluationScenarioOutput"
      },
      "HumanEvaluationScenarioUpdate": {
        "properties": {
          "vote": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vote"
          },
          "score": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Score"
          },
          "correct_answer": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correct Answer"
          },
          "outputs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/HumanEvaluationScenarioOutput"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Outputs"
          },
          "inputs": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/HumanEvaluationScenarioInput"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inputs"
          },
          "is_pinned": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Pinned"
          },
          "note": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Note"
          }
        },
        "type": "object",
        "title": "HumanEvaluationScenarioUpdate"
      },
      "HumanEvaluationUpdate": {
        "properties": {
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EvaluationStatusEnum"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "HumanEvaluationUpdate"
      },
      "InviteRequest": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "roles": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Roles"
          }
        },
        "type": "object",
        "required": ["email"],
        "title": "InviteRequest"
      },
      "InviteToken": {
        "properties": {
          "token": {
            "type": "string",
            "title": "Token"
          },
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": ["token", "email"],
        "title": "InviteToken"
      },
      "LLMRunRateLimit": {
        "properties": {
          "batch_size": {
            "type": "integer",
            "title": "Batch Size"
          },
          "max_retries": {
            "type": "integer",
            "title": "Max Retries"
          },
          "retry_delay": {
            "type": "integer",
            "title": "Retry Delay"
          },
          "delay_between_batches": {
            "type": "integer",
            "title": "Delay Between Batches"
          }
        },
        "type": "object",
        "required": ["batch_size", "max_retries", "retry_delay", "delay_between_batches"],
        "title": "LLMRunRateLimit"
      },
      "LegacyAnalyticsResponse": {
        "properties": {
          "total_count": {
            "type": "integer",
            "title": "Total Count"
          },
          "failure_rate": {
            "type": "number",
            "title": "Failure Rate"
          },
          "total_cost": {
            "type": "number",
            "title": "Total Cost"
          },
          "avg_cost": {
            "type": "number",
            "title": "Avg Cost"
          },
          "avg_latency": {
            "type": "number",
            "title": "Avg Latency"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens"
          },
          "avg_tokens": {
            "type": "number",
            "title": "Avg Tokens"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/LegacyDataPoint"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "type": "object",
        "required": [
          "total_count",
          "failure_rate",
          "total_cost",
          "avg_cost",
          "avg_latency",
          "total_tokens",
          "avg_tokens",
          "data"
        ],
        "title": "LegacyAnalyticsResponse"
      },
      "LegacyDataPoint": {
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "title": "Timestamp"
          },
          "success_count": {
            "type": "integer",
            "title": "Success Count"
          },
          "failure_count": {
            "type": "integer",
            "title": "Failure Count"
          },
          "cost": {
            "type": "number",
            "title": "Cost"
          },
          "latency": {
            "type": "number",
            "title": "Latency"
          },
          "total_tokens": {
            "type": "integer",
            "title": "Total Tokens"
          }
        },
        "type": "object",
        "required": ["timestamp", "success_count", "failure_count", "cost", "latency", "total_tokens"],
        "title": "LegacyDataPoint"
      },
      "LegacyScopeRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          }
        },
        "type": "object",
        "title": "LegacyScopeRequest"
      },
      "LegacyScopesResponse": {
        "properties": {
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "organization_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Name"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "workspace_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Name"
          },
          "project_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Id"
          },
          "project_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Project Name"
          },
          "is_demo": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Demo"
          },
          "user_role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Role"
          },
          "credentials": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Credentials"
          }
        },
        "type": "object",
        "title": "LegacyScopesResponse"
      },
      "LegacySubscriptionRequest": {
        "properties": {
          "plan": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Plan"
          }
        },
        "type": "object",
        "title": "LegacySubscriptionRequest"
      },
      "LegacyUserRequest": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          }
        },
        "type": "object",
        "title": "LegacyUserRequest"
      },
      "LegacyUserResponse": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "title": "LegacyUserResponse"
      },
      "LifecycleDTO-Input": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          }
        },
        "type": "object",
        "title": "LifecycleDTO"
      },
      "LinkDTO": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/TreeType"
          },
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "tree_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tree Id"
          }
        },
        "type": "object",
        "required": ["type", "id"],
        "title": "LinkDTO"
      },
      "ListAPIKeysResponse": {
        "properties": {
          "prefix": {
            "type": "string",
            "title": "Prefix"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "last_used_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Used At"
          },
          "expiration_date": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expiration Date"
          }
        },
        "type": "object",
        "required": ["prefix", "created_at"],
        "title": "ListAPIKeysResponse"
      },
      "MetricsDTO": {
        "properties": {
          "count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count",
            "default": 0
          },
          "duration": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Duration",
            "default": 0
          },
          "cost": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cost",
            "default": 0
          },
          "tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tokens",
            "default": 0
          }
        },
        "type": "object",
        "title": "MetricsDTO"
      },
      "NewEvaluation": {
        "properties": {
          "revisions_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Revisions Ids"
          },
          "evaluators_configs": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Evaluators Configs"
          },
          "testset_id": {
            "type": "string",
            "title": "Testset Id"
          },
          "rate_limit": {
            "$ref": "#/components/schemas/LLMRunRateLimit"
          },
          "correct_answer_column": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Correct Answer Column"
          }
        },
        "type": "object",
        "required": ["revisions_ids", "evaluators_configs", "testset_id", "rate_limit"],
        "title": "NewEvaluation"
      },
      "NewEvaluatorConfig": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "evaluator_key": {
            "type": "string",
            "title": "Evaluator Key"
          },
          "settings_values": {
            "additionalProperties": true,
            "type": "object",
            "title": "Settings Values"
          }
        },
        "type": "object",
        "required": ["name", "evaluator_key", "settings_values"],
        "title": "NewEvaluatorConfig"
      },
      "NewHumanEvaluation": {
        "properties": {
          "app_id": {
            "type": "string",
            "title": "App Id"
          },
          "variant_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Variant Ids"
          },
          "evaluation_type": {
            "$ref": "#/components/schemas/EvaluationType"
          },
          "inputs": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Inputs"
          },
          "testset_id": {
            "type": "string",
            "title": "Testset Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": ["app_id", "variant_ids", "evaluation_type", "inputs", "testset_id", "status"],
        "title": "NewHumanEvaluation"
      },
      "NewTestset": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "csvdata": {
            "items": {
              "additionalProperties": true,
              "type": "object"
            },
            "type": "array",
            "title": "Csvdata"
          }
        },
        "type": "object",
        "required": ["name", "csvdata"],
        "title": "NewTestset"
      },
      "NodeDTO": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NodeType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "NodeDTO"
      },
      "NodeType": {
        "type": "string",
        "enum": ["agent", "workflow", "chain", "task", "tool", "embedding", "query", "completion", "chat", "rerank"],
        "title": "NodeType"
      },
      "OTelContextDTO": {
        "properties": {
          "trace_id": {
            "type": "string",
            "title": "Trace Id"
          },
          "span_id": {
            "type": "string",
            "title": "Span Id"
          }
        },
        "type": "object",
        "required": ["trace_id", "span_id"],
        "title": "OTelContextDTO"
      },
      "OTelEvent-Input": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "integer"
              }
            ],
            "title": "Timestamp"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": ["name", "timestamp"],
        "title": "OTelEvent"
      },
      "OTelEvent-Output": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "integer"
              }
            ],
            "title": "Timestamp"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": ["name", "timestamp"],
        "title": "OTelEvent"
      },
      "OTelEventDTO": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "timestamp": {
            "type": "string",
            "title": "Timestamp"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": ["name", "timestamp"],
        "title": "OTelEventDTO"
      },
      "OTelExtraDTO": {
        "properties": {
          "kind": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Kind"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OTelEventDTO"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OTelLinkDTO"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          }
        },
        "type": "object",
        "title": "OTelExtraDTO"
      },
      "OTelFlatSpan-Input": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "trace_id": {
            "type": "string",
            "title": "Trace Id"
          },
          "span_id": {
            "type": "string",
            "title": "Span Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "span_kind": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OTelSpanKind"
              },
              {
                "type": "null"
              }
            ]
          },
          "span_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Span Name"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "status_code": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OTelStatusCode-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "status_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Message"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OTelEvent-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OTelLink-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          }
        },
        "type": "object",
        "required": ["trace_id", "span_id"],
        "title": "OTelFlatSpan"
      },
      "OTelFlatSpan-Output": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "trace_id": {
            "type": "string",
            "title": "Trace Id"
          },
          "span_id": {
            "type": "string",
            "title": "Span Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "span_kind": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OTelSpanKind"
              },
              {
                "type": "null"
              }
            ]
          },
          "span_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Span Name"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "status_code": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/oss__src__core__tracing__dtos__OTelStatusCode"
              },
              {
                "type": "null"
              }
            ]
          },
          "status_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Message"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OTelEvent-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OTelLink-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          }
        },
        "type": "object",
        "required": ["trace_id", "span_id"],
        "title": "OTelFlatSpan"
      },
      "OTelLink-Input": {
        "properties": {
          "span_id": {
            "type": "string",
            "title": "Span Id"
          },
          "trace_id": {
            "type": "string",
            "title": "Trace Id"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": ["span_id", "trace_id"],
        "title": "OTelLink"
      },
      "OTelLink-Output": {
        "properties": {
          "span_id": {
            "type": "string",
            "title": "Span Id"
          },
          "trace_id": {
            "type": "string",
            "title": "Trace Id"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": ["span_id", "trace_id"],
        "title": "OTelLink"
      },
      "OTelLinkDTO": {
        "properties": {
          "context": {
            "$ref": "#/components/schemas/OTelContextDTO"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "required": ["context"],
        "title": "OTelLinkDTO"
      },
      "OTelLinksResponse": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OTelLink-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          }
        },
        "type": "object",
        "required": ["version", "count"],
        "title": "OTelLinksResponse"
      },
      "OTelSpan-Input": {
        "properties": {
          "spans": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/OTelSpan-Input"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/OTelSpan-Input"
                      },
                      "type": "array"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spans"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "trace_id": {
            "type": "string",
            "title": "Trace Id"
          },
          "span_id": {
            "type": "string",
            "title": "Span Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "span_kind": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OTelSpanKind"
              },
              {
                "type": "null"
              }
            ]
          },
          "span_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Span Name"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "status_code": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OTelStatusCode-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "status_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Message"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OTelEvent-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OTelLink-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          }
        },
        "type": "object",
        "required": ["trace_id", "span_id"],
        "title": "OTelSpan"
      },
      "OTelSpan-Output": {
        "properties": {
          "spans": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/OTelSpan-Output"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/OTelSpan-Output"
                      },
                      "type": "array"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spans"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "trace_id": {
            "type": "string",
            "title": "Trace Id"
          },
          "span_id": {
            "type": "string",
            "title": "Span Id"
          },
          "parent_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Parent Id"
          },
          "span_kind": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OTelSpanKind"
              },
              {
                "type": "null"
              }
            ]
          },
          "span_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Span Name"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "status_code": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/oss__src__core__tracing__dtos__OTelStatusCode"
              },
              {
                "type": "null"
              }
            ]
          },
          "status_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Message"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OTelEvent-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OTelLink-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          }
        },
        "type": "object",
        "required": ["trace_id", "span_id"],
        "title": "OTelSpan"
      },
      "OTelSpanDTO": {
        "properties": {
          "context": {
            "$ref": "#/components/schemas/OTelContextDTO"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "kind": {
            "$ref": "#/components/schemas/OTelSpanKind",
            "default": "SPAN_KIND_UNSPECIFIED"
          },
          "start_time": {
            "type": "string",
            "format": "date-time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "date-time",
            "title": "End Time"
          },
          "status_code": {
            "$ref": "#/components/schemas/oss__src__core__observability__dtos__OTelStatusCode",
            "default": "STATUS_CODE_UNSET"
          },
          "status_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Message"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          },
          "events": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OTelEventDTO"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Events"
          },
          "parent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OTelContextDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OTelLinkDTO"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          }
        },
        "type": "object",
        "required": ["context", "name", "start_time", "end_time"],
        "title": "OTelSpanDTO"
      },
      "OTelSpanKind": {
        "type": "string",
        "enum": [
          "SPAN_KIND_UNSPECIFIED",
          "SPAN_KIND_INTERNAL",
          "SPAN_KIND_SERVER",
          "SPAN_KIND_CLIENT",
          "SPAN_KIND_PRODUCER",
          "SPAN_KIND_CONSUMER"
        ],
        "title": "OTelSpanKind"
      },
      "OTelSpansTree-Input": {
        "properties": {
          "spans": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/OTelSpan-Input"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/OTelSpan-Input"
                      },
                      "type": "array"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spans"
          }
        },
        "type": "object",
        "title": "OTelSpansTree"
      },
      "OTelSpansTree-Output": {
        "properties": {
          "spans": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/OTelSpan-Output"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/OTelSpan-Output"
                      },
                      "type": "array"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spans"
          }
        },
        "type": "object",
        "title": "OTelSpansTree"
      },
      "OTelStatusCode-Input": {
        "type": "string",
        "enum": ["STATUS_CODE_UNSET", "STATUS_CODE_OK", "STATUS_CODE_ERROR"],
        "title": "OTelStatusCode"
      },
      "OTelTracingRequest": {
        "properties": {
          "spans": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OTelFlatSpan-Input"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spans"
          },
          "traces": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/OTelSpansTree-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Traces"
          }
        },
        "type": "object",
        "title": "OTelTracingRequest"
      },
      "Organization": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "owner": {
            "type": "string",
            "title": "Owner"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "workspaces": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Workspaces"
          }
        },
        "type": "object",
        "required": ["id", "name", "owner", "description"],
        "title": "Organization"
      },
      "OrganizationDetails": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "owner": {
            "type": "string",
            "title": "Owner"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "workspaces": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Workspaces"
          },
          "default_workspace": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Default Workspace"
          }
        },
        "type": "object",
        "required": ["id", "name", "owner", "description"],
        "title": "OrganizationDetails"
      },
      "OrganizationMembershipRequest": {
        "properties": {
          "role": {
            "type": "string",
            "enum": ["owner", "viewer", "editor", "evaluator", "workspace_admin", "deployment_manager"],
            "title": "Role"
          },
          "is_demo": {
            "type": "boolean",
            "title": "Is Demo"
          },
          "user_ref": {
            "$ref": "#/components/schemas/ee__src__services__admin_manager__Reference"
          },
          "organization_ref": {
            "$ref": "#/components/schemas/ee__src__services__admin_manager__Reference"
          }
        },
        "type": "object",
        "required": ["role", "is_demo", "user_ref", "organization_ref"],
        "title": "OrganizationMembershipRequest"
      },
      "OrganizationOutput": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": ["id", "name"],
        "title": "OrganizationOutput"
      },
      "OrganizationRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "is_paying": {
            "type": "boolean",
            "title": "Is Paying"
          }
        },
        "type": "object",
        "required": ["name", "description", "is_paying"],
        "title": "OrganizationRequest"
      },
      "OrganizationUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "title": "OrganizationUpdate"
      },
      "ParentDTO": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": ["id"],
        "title": "ParentDTO"
      },
      "Permission": {
        "type": "string",
        "enum": [
          "read_system",
          "view_application",
          "edit_application",
          "create_application",
          "delete_application",
          "create_app_variant",
          "delete_app_variant",
          "modify_variant_configurations",
          "delete_application_variant",
          "run_service",
          "create_secret",
          "view_secret",
          "update_secret",
          "delete_secret",
          "view_app_environment_deployment",
          "edit_app_environment_deployment",
          "create_app_environment_deployment",
          "view_testset",
          "edit_testset",
          "create_testset",
          "delete_testset",
          "view_evaluation",
          "run_evaluations",
          "edit_evaluation",
          "create_evaluation",
          "delete_evaluation",
          "deploy_application",
          "view_workspace",
          "edit_workspace",
          "create_workspace",
          "delete_workspace",
          "modify_user_roles",
          "add_new_user_to_workspace",
          "edit_organization",
          "delete_organization",
          "add_new_user_to_organization",
          "reset_password",
          "view_billing",
          "edit_billing",
          "view_workflows",
          "edit_workflows",
          "view_evaluators",
          "edit_evaluators",
          "view_testsets",
          "edit_testsets",
          "view_annotations",
          "edit_annotations",
          "delete_annotations"
        ],
        "title": "Permission"
      },
      "Plan": {
        "type": "string",
        "enum": ["cloud_v0_hobby", "cloud_v0_pro", "cloud_v0_humanity_labs", "cloud_v0_x_labs", "cloud_v0_agenta_ai"],
        "title": "Plan"
      },
      "ProjectMembershipRequest": {
        "properties": {
          "role": {
            "type": "string",
            "enum": ["owner", "viewer", "editor", "evaluator", "workspace_admin", "deployment_manager"],
            "title": "Role"
          },
          "is_demo": {
            "type": "boolean",
            "title": "Is Demo"
          },
          "user_ref": {
            "$ref": "#/components/schemas/ee__src__services__admin_manager__Reference"
          },
          "project_ref": {
            "$ref": "#/components/schemas/ee__src__services__admin_manager__Reference"
          }
        },
        "type": "object",
        "required": ["role", "is_demo", "user_ref", "project_ref"],
        "title": "ProjectMembershipRequest"
      },
      "ProjectRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default"
          },
          "workspace_ref": {
            "$ref": "#/components/schemas/ee__src__services__admin_manager__Reference"
          },
          "organization_ref": {
            "$ref": "#/components/schemas/ee__src__services__admin_manager__Reference"
          }
        },
        "type": "object",
        "required": ["name", "description", "is_default", "workspace_ref", "organization_ref"],
        "title": "ProjectRequest"
      },
      "ProjectScope": {
        "properties": {
          "credentials": {
            "type": "string",
            "title": "Credentials"
          },
          "role": {
            "type": "string",
            "enum": ["owner", "viewer", "editor", "evaluator", "workspace_admin", "deployment_manager"],
            "title": "Role"
          },
          "tier": {
            "type": "string",
            "title": "Tier"
          },
          "user": {
            "$ref": "#/components/schemas/Reference-Output"
          },
          "project": {
            "$ref": "#/components/schemas/Reference-Output"
          },
          "workspace": {
            "$ref": "#/components/schemas/Reference-Output"
          },
          "organization": {
            "$ref": "#/components/schemas/Reference-Output"
          }
        },
        "type": "object",
        "required": ["credentials", "role", "tier", "user", "project", "workspace", "organization"],
        "title": "ProjectScope"
      },
      "ProjectsResponse": {
        "properties": {
          "organization_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Id"
          },
          "organization_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Organization Name"
          },
          "workspace_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Id"
          },
          "workspace_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Workspace Name"
          },
          "project_id": {
            "type": "string",
            "format": "uuid",
            "title": "Project Id"
          },
          "project_name": {
            "type": "string",
            "title": "Project Name"
          },
          "user_role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Role"
          },
          "is_demo": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Demo"
          }
        },
        "type": "object",
        "required": ["project_id", "project_name"],
        "title": "ProjectsResponse"
      },
      "Reference-Output": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          }
        },
        "type": "object",
        "title": "Reference"
      },
      "ReferenceDTO": {
        "properties": {
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "version": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "commit_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit Message"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "required": ["id"],
        "title": "ReferenceDTO"
      },
      "ReferenceRequest": {
        "properties": {
          "application_ref": {
            "$ref": "#/components/schemas/ReferenceDTO"
          }
        },
        "type": "object",
        "required": ["application_ref"],
        "title": "ReferenceRequest"
      },
      "ReferenceRequestModel": {
        "properties": {
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "version": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "commit_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit Message"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          }
        },
        "type": "object",
        "title": "ReferenceRequestModel"
      },
      "ResendInviteRequest": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": ["email"],
        "title": "ResendInviteRequest"
      },
      "Result": {
        "properties": {
          "type": {
            "type": "string",
            "title": "Type"
          },
          "value": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Value"
          },
          "error": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Error"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["type"],
        "title": "Result"
      },
      "RootDTO": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          }
        },
        "type": "object",
        "required": ["id"],
        "title": "RootDTO"
      },
      "ScopesResponseModel": {
        "properties": {
          "projects": {
            "additionalProperties": {
              "additionalProperties": {
                "$ref": "#/components/schemas/ProjectScope"
              },
              "type": "object"
            },
            "type": "object",
            "title": "Projects",
            "default": {}
          }
        },
        "type": "object",
        "title": "ScopesResponseModel"
      },
      "SecretDTO": {
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/SecretKind"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StandardProviderDTO"
              },
              {
                "$ref": "#/components/schemas/CustomProviderDTO"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": ["kind", "data"],
        "title": "SecretDTO"
      },
      "SecretKind": {
        "type": "string",
        "enum": ["provider_key", "custom_provider"],
        "title": "SecretKind"
      },
      "SecretResponseDTO": {
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/SecretKind"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StandardProviderDTO"
              },
              {
                "$ref": "#/components/schemas/CustomProviderDTO"
              }
            ],
            "title": "Data"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "header": {
            "$ref": "#/components/schemas/Header"
          },
          "lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/oss__src__core__shared__dtos__LifecycleDTO"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["kind", "data", "header"],
        "title": "SecretResponseDTO"
      },
      "SimpleEvaluationOutput": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "variant_ids": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Variant Ids"
          },
          "app_id": {
            "type": "string",
            "title": "App Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "evaluation_type": {
            "$ref": "#/components/schemas/EvaluationType"
          }
        },
        "type": "object",
        "required": ["id", "variant_ids", "app_id", "status", "evaluation_type"],
        "title": "SimpleEvaluationOutput"
      },
      "SpanDTO": {
        "properties": {
          "trace_id": {
            "type": "string",
            "title": "Trace Id"
          },
          "span_id": {
            "type": "string",
            "title": "Span Id"
          },
          "lifecycle": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/oss__src__core__shared__dtos__LifecycleDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "root": {
            "$ref": "#/components/schemas/RootDTO"
          },
          "tree": {
            "$ref": "#/components/schemas/TreeDTO"
          },
          "node": {
            "$ref": "#/components/schemas/NodeDTO"
          },
          "parent": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ParentDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "time": {
            "$ref": "#/components/schemas/TimeDTO"
          },
          "status": {
            "$ref": "#/components/schemas/StatusDTO"
          },
          "exception": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ExceptionDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "data": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          },
          "metrics": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metrics"
          },
          "meta": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Meta"
          },
          "refs": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Refs"
          },
          "links": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/LinkDTO"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Links"
          },
          "otel": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OTelExtraDTO"
              },
              {
                "type": "null"
              }
            ]
          },
          "nodes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SpanDTO"
                    },
                    {
                      "items": {
                        "$ref": "#/components/schemas/SpanDTO"
                      },
                      "type": "array"
                    }
                  ]
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nodes"
          }
        },
        "type": "object",
        "required": ["trace_id", "span_id", "root", "tree", "node", "time", "status"],
        "title": "SpanDTO"
      },
      "StandardProviderDTO": {
        "properties": {
          "kind": {
            "$ref": "#/components/schemas/StandardProviderKind"
          },
          "provider": {
            "$ref": "#/components/schemas/StandardProviderSettingsDTO"
          }
        },
        "type": "object",
        "required": ["kind", "provider"],
        "title": "StandardProviderDTO"
      },
      "StandardProviderKind": {
        "type": "string",
        "enum": [
          "openai",
          "cohere",
          "anyscale",
          "deepinfra",
          "alephalpha",
          "groq",
          "mistralai",
          "anthropic",
          "perplexityai",
          "togetherai",
          "openrouter",
          "gemini"
        ],
        "title": "StandardProviderKind"
      },
      "StandardProviderSettingsDTO": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key"
          }
        },
        "type": "object",
        "required": ["key"],
        "title": "StandardProviderSettingsDTO"
      },
      "StatusCode": {
        "type": "string",
        "enum": ["UNSET", "OK", "ERROR"],
        "title": "StatusCode"
      },
      "StatusDTO": {
        "properties": {
          "code": {
            "$ref": "#/components/schemas/StatusCode"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          }
        },
        "type": "object",
        "required": ["code"],
        "title": "StatusDTO"
      },
      "TagsRequest": {
        "properties": {
          "metadata": {
            "additionalProperties": {
              "$ref": "#/components/schemas/FullJson-Input"
            },
            "type": "object",
            "title": "Metadata"
          }
        },
        "type": "object",
        "required": ["metadata"],
        "title": "TagsRequest"
      },
      "TestSetOutputResponse": {
        "properties": {
          "_id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": ["_id", "name", "created_at", "updated_at"],
        "title": "TestSetOutputResponse"
      },
      "TestSetSimpleResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          }
        },
        "type": "object",
        "required": ["id", "name", "created_at"],
        "title": "TestSetSimpleResponse"
      },
      "TestcaseResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "testcase": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testcase"
          }
        },
        "type": "object",
        "required": ["count"],
        "title": "TestcaseResponse"
      },
      "Testset-Input": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "testcases": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/FullJson-Input"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testcases"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "Testset"
      },
      "Testset-Output": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "testcases": {
            "anyOf": [
              {
                "items": {
                  "additionalProperties": {
                    "$ref": "#/components/schemas/FullJson-Output"
                  },
                  "type": "object"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Testcases"
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "Testset"
      },
      "TestsetRequest": {
        "properties": {
          "testset": {
            "$ref": "#/components/schemas/Testset-Input"
          }
        },
        "type": "object",
        "required": ["testset"],
        "title": "TestsetRequest"
      },
      "TestsetResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "testset": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Testset-Output"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["count"],
        "title": "TestsetResponse"
      },
      "TestsetsResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "testsets": {
            "items": {
              "$ref": "#/components/schemas/Testset-Output"
            },
            "type": "array",
            "title": "Testsets",
            "default": []
          }
        },
        "type": "object",
        "required": ["count"],
        "title": "TestsetsResponse"
      },
      "TimeDTO": {
        "properties": {
          "start": {
            "type": "string",
            "format": "date-time",
            "title": "Start"
          },
          "end": {
            "type": "string",
            "format": "date-time",
            "title": "End"
          }
        },
        "type": "object",
        "required": ["start", "end"],
        "title": "TimeDTO"
      },
      "TreeDTO": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TreeType"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["id"],
        "title": "TreeDTO"
      },
      "TreeType": {
        "type": "string",
        "enum": ["invocation"],
        "title": "TreeType"
      },
      "UpdateApp": {
        "properties": {
          "app_name": {
            "type": "string",
            "title": "App Name"
          }
        },
        "type": "object",
        "required": ["app_name"],
        "title": "UpdateApp"
      },
      "UpdateAppOutput": {
        "properties": {
          "app_id": {
            "type": "string",
            "title": "App Id"
          },
          "app_name": {
            "type": "string",
            "title": "App Name"
          }
        },
        "type": "object",
        "required": ["app_id", "app_name"],
        "title": "UpdateAppOutput"
      },
      "UpdateEvaluatorConfig": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "evaluator_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Evaluator Key"
          },
          "settings_values": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Settings Values"
          }
        },
        "type": "object",
        "required": ["settings_values"],
        "title": "UpdateEvaluatorConfig"
      },
      "UpdateSecretDTO": {
        "properties": {
          "header": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Header"
              },
              {
                "type": "null"
              }
            ]
          },
          "secret": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SecretDTO"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "UpdateSecretDTO"
      },
      "UpdateVariantParameterPayload": {
        "properties": {
          "parameters": {
            "additionalProperties": true,
            "type": "object",
            "title": "Parameters"
          },
          "commit_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit Message"
          }
        },
        "type": "object",
        "required": ["parameters"],
        "title": "UpdateVariantParameterPayload"
      },
      "UpdateVariantURLPayload": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "variant_id": {
            "type": "string",
            "title": "Variant Id"
          },
          "commit_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commit Message"
          }
        },
        "type": "object",
        "required": ["url", "variant_id"],
        "title": "UpdateVariantURLPayload"
      },
      "UpdateWorkspace": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "title": "UpdateWorkspace"
      },
      "UserRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "email": {
            "type": "string",
            "title": "Email"
          }
        },
        "type": "object",
        "required": ["name", "email"],
        "title": "UserRequest"
      },
      "UserRole": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email"
          },
          "organization_id": {
            "type": "string",
            "title": "Organization Id"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          }
        },
        "type": "object",
        "required": ["email", "organization_id"],
        "title": "UserRole"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "WorkflowArtifact-Input": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "flags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowFlags"
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "WorkflowArtifact"
      },
      "WorkflowArtifact-Output": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "flags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowFlags"
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          }
        },
        "type": "object",
        "title": "WorkflowArtifact"
      },
      "WorkflowData": {
        "properties": {
          "service": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Service"
          },
          "configuration": {
            "anyOf": [
              {
                "additionalProperties": true,
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Configuration"
          }
        },
        "type": "object",
        "title": "WorkflowData"
      },
      "WorkflowFlags": {
        "properties": {
          "is_custom": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Custom",
            "default": false
          },
          "is_evaluator": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Evaluator",
            "default": false
          },
          "is_human": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Human",
            "default": false
          }
        },
        "type": "object",
        "title": "WorkflowFlags"
      },
      "WorkflowRequest": {
        "properties": {
          "workflow": {
            "$ref": "#/components/schemas/WorkflowArtifact-Input"
          }
        },
        "type": "object",
        "required": ["workflow"],
        "title": "WorkflowRequest"
      },
      "WorkflowResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "workflow": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowArtifact-Output"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["count"],
        "title": "WorkflowResponse"
      },
      "WorkflowRevision-Input": {
        "properties": {
          "author": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "flags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowFlags"
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowData"
              },
              {
                "type": "null"
              }
            ]
          },
          "artifact_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Artifact Id"
          },
          "artifact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Artifact-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "variant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variant Id"
          },
          "variant": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowVariant-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "WorkflowRevision"
      },
      "WorkflowRevision-Output": {
        "properties": {
          "author": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          },
          "date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "flags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowFlags"
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowData"
              },
              {
                "type": "null"
              }
            ]
          },
          "artifact_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Artifact Id"
          },
          "artifact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Artifact-Output"
              },
              {
                "type": "null"
              }
            ]
          },
          "variant_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Variant Id"
          },
          "variant": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowVariant-Output"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "WorkflowRevision"
      },
      "WorkflowRevisionRequest": {
        "properties": {
          "revision": {
            "$ref": "#/components/schemas/WorkflowRevision-Input"
          }
        },
        "type": "object",
        "required": ["revision"],
        "title": "WorkflowRevisionRequest"
      },
      "WorkflowRevisionResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "revision": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowRevision-Output"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["count"],
        "title": "WorkflowRevisionResponse"
      },
      "WorkflowRevisionsResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "revisions": {
            "items": {
              "$ref": "#/components/schemas/WorkflowRevision-Output"
            },
            "type": "array",
            "title": "Revisions",
            "default": []
          }
        },
        "type": "object",
        "required": ["count"],
        "title": "WorkflowRevisionsResponse"
      },
      "WorkflowVariant-Input": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "flags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowFlags"
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "artifact_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Artifact Id"
          },
          "artifact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowArtifact-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "WorkflowVariant"
      },
      "WorkflowVariant-Output": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "flags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowFlags"
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "artifact_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Artifact Id"
          },
          "artifact": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowArtifact-Output"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "WorkflowVariant"
      },
      "WorkflowVariantRequest": {
        "properties": {
          "variant": {
            "$ref": "#/components/schemas/WorkflowVariant-Input"
          }
        },
        "type": "object",
        "required": ["variant"],
        "title": "WorkflowVariantRequest"
      },
      "WorkflowVariantResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "variant": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowVariant-Output"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["count"],
        "title": "WorkflowVariantResponse"
      },
      "WorkflowVariantsResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "variants": {
            "items": {
              "$ref": "#/components/schemas/WorkflowVariant-Output"
            },
            "type": "array",
            "title": "Variants",
            "default": []
          }
        },
        "type": "object",
        "required": ["count"],
        "title": "WorkflowVariantsResponse"
      },
      "WorkflowsResponse": {
        "properties": {
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "workflows": {
            "items": {
              "$ref": "#/components/schemas/WorkflowArtifact-Output"
            },
            "type": "array",
            "title": "Workflows",
            "default": []
          }
        },
        "type": "object",
        "required": ["count"],
        "title": "WorkflowsResponse"
      },
      "Workspace": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          }
        },
        "type": "object",
        "required": ["name", "type"],
        "title": "Workspace"
      },
      "WorkspaceMemberResponse": {
        "properties": {
          "user": {
            "additionalProperties": true,
            "type": "object",
            "title": "User"
          },
          "roles": {
            "items": {
              "$ref": "#/components/schemas/WorkspacePermission"
            },
            "type": "array",
            "title": "Roles"
          }
        },
        "type": "object",
        "required": ["user", "roles"],
        "title": "WorkspaceMemberResponse"
      },
      "WorkspaceMembershipRequest": {
        "properties": {
          "role": {
            "type": "string",
            "enum": ["owner", "viewer", "editor", "evaluator", "workspace_admin", "deployment_manager"],
            "title": "Role"
          },
          "is_demo": {
            "type": "boolean",
            "title": "Is Demo"
          },
          "user_ref": {
            "$ref": "#/components/schemas/ee__src__services__admin_manager__Reference"
          },
          "workspace_ref": {
            "$ref": "#/components/schemas/ee__src__services__admin_manager__Reference"
          }
        },
        "type": "object",
        "required": ["role", "is_demo", "user_ref", "workspace_ref"],
        "title": "WorkspaceMembershipRequest"
      },
      "WorkspacePermission": {
        "properties": {
          "role_name": {
            "$ref": "#/components/schemas/WorkspaceRole"
          },
          "role_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role Description"
          },
          "permissions": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Permission"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Permissions"
          }
        },
        "type": "object",
        "required": ["role_name"],
        "title": "WorkspacePermission"
      },
      "WorkspaceRequest": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "is_default": {
            "type": "boolean",
            "title": "Is Default"
          },
          "organization_ref": {
            "$ref": "#/components/schemas/ee__src__services__admin_manager__Reference"
          }
        },
        "type": "object",
        "required": ["name", "description", "is_default", "organization_ref"],
        "title": "WorkspaceRequest"
      },
      "WorkspaceResponse": {
        "properties": {
          "created_at": {
            "type": "string",
            "title": "Created At",
            "default": "2025-05-15 07:35:40.094202+00:00"
          },
          "updated_at": {
            "type": "string",
            "title": "Updated At",
            "default": "2025-05-15 07:35:40.094271+00:00"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "organization": {
            "type": "string",
            "title": "Organization"
          },
          "members": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/WorkspaceMemberResponse"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Members"
          }
        },
        "type": "object",
        "required": ["id", "name", "type", "organization"],
        "title": "WorkspaceResponse"
      },
      "WorkspaceRole": {
        "type": "string",
        "enum": ["owner", "viewer", "editor", "evaluator", "workspace_admin", "deployment_manager"],
        "title": "WorkspaceRole"
      },
      "ee__src__services__admin_manager__Reference": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          }
        },
        "type": "object",
        "title": "Reference"
      },
      "oss__src__apis__fastapi__evaluators__models__Evaluator-Output": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "deleted_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted At"
          },
          "created_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created By Id"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "deleted_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Deleted By Id"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "flags": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowFlags"
              },
              {
                "type": "null"
              }
            ]
          },
          "metadata": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/WorkflowData"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "Evaluator"
      },
      "oss__src__apis__fastapi__observability__models__OTelTracingResponse": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version"
          },
          "count": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Count"
          },
          "spans": {
            "items": {
              "$ref": "#/components/schemas/OTelSpanDTO"
            },
            "type": "array",
            "title": "Spans"
          }
        },
        "type": "object",
        "required": ["version", "spans"],
        "title": "OTelTracingResponse"
      },
      "oss__src__apis__fastapi__tracing__models__OTelTracingResponse": {
        "properties": {
          "version": {
            "type": "string",
            "title": "Version"
          },
          "count": {
            "type": "integer",
            "title": "Count"
          },
          "oldest": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oldest"
          },
          "newest": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Newest"
          },
          "spans": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OTelFlatSpan-Output"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Spans"
          },
          "traces": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/OTelSpansTree-Output"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Traces"
          }
        },
        "type": "object",
        "required": ["version", "count"],
        "title": "OTelTracingResponse"
      },
      "oss__src__core__observability__dtos__OTelStatusCode": {
        "type": "string",
        "enum": ["STATUS_CODE_OK", "STATUS_CODE_ERROR", "STATUS_CODE_UNSET"],
        "title": "OTelStatusCode"
      },
      "oss__src__core__shared__dtos__LifecycleDTO": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          }
        },
        "type": "object",
        "title": "LifecycleDTO"
      },
      "oss__src__core__shared__dtos__Reference": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string",
                "format": "uuid"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id"
          },
          "slug": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Slug"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "attributes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/FullJson-Input"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attributes"
          }
        },
        "type": "object",
        "title": "Reference"
      },
      "oss__src__core__tracing__dtos__OTelStatusCode": {
        "type": "string",
        "enum": ["STATUS_CODE_UNSET", "STATUS_CODE_OK", "STATUS_CODE_ERROR"],
        "title": "OTelStatusCode"
      },
      "oss__src__models__api__evaluation_model__Evaluator": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "key": {
            "type": "string",
            "title": "Key"
          },
          "direct_use": {
            "type": "boolean",
            "title": "Direct Use"
          },
          "settings_template": {
            "additionalProperties": true,
            "type": "object",
            "title": "Settings Template"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "oss": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oss",
            "default": false
          },
          "requires_llm_api_keys": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Requires Llm Api Keys",
            "default": false
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Tags"
          }
        },
        "type": "object",
        "required": ["name", "key", "direct_use", "settings_template", "tags"],
        "title": "Evaluator"
      },
      "oss__src__services__variants_manager__LifecycleDTO": {
        "properties": {
          "created_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "updated_by_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By Id"
          },
          "updated_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated By"
          }
        },
        "type": "object",
        "title": "LifecycleDTO"
      }
    },
    "securitySchemes": {
      "APIKeyHeader": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "tags": [
    {
      "name": "Variants"
    },
    {
      "name": "Evaluations"
    },
    {
      "name": "Evaluators"
    },
    {
      "name": "Apps"
    },
    {
      "name": "Human-Evaluations"
    },
    {
      "name": "Testsets"
    },
    {
      "name": "Containers"
    },
    {
      "name": "Environments"
    },
    {
      "name": "Observability"
    },
    {
      "name": "Organizations"
    },
    {
      "name": "Bases"
    },
    {
      "name": "Configs"
    }
  ],
  "security": [
    {
      "APIKeyHeader": []
    }
  ]
}
